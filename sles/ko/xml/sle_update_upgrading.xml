<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="sle_update_upgrading.xml" version="5.0" xml:id="cha.update.sle">
 <title>SUSE Linux Enterprise 업그레이드</title>
 <info>
  <abstract>
   <para>
    SLE(SUSE® Linux Enterprise)를 사용하여 기존 시스템을 새 버전으로 업데이트할 수 있습니다. 예를 들어 SLE 11 SP4를 SLE 12로 전환합니다. 새로 설치할 필요가 없습니다. 홈 디렉토리, 데이터 디렉토리 및 시스템 구성과 같은 기존 데이터가 원래 상태로 보존됩니다. 로컬 CD나 DVD 드라이브 또는 중앙 네트워크 설치 원본에서 업데이트할 수 있습니다.
   </para>

   <para>
    이 장에서는 DVD, 네트워크, 자동 프로세스 또는 SUSE Manager를 통해 SUSE Linux Enterprise 시스템을 수동으로 업그레이드하는 방법을 설명합니다.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>예</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec.update.prep">
  <title>일반 준비</title>

  <para>
   업데이트 절차를 시작하기 전에 시스템을 올바르게 준비해야 합니다. 무엇보다도 데이터를 백업하고 릴리스 정보를 확인하는 것이 중요합니다.
  </para>

  <sect2 xml:id="sec.update.prep.multiversion">
   <title>커널 다중 버전 지원을 일시적으로 비활성화</title>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>는 <filename>/etc/zypp/zypp.conf</filename>에서 해당 설정을 활성화하여 다중 커널 버전 설치를 지원합니다. 서비스 팩으로 업데이트할 경우 이 기능에 대한 지원을 일시적으로 비활성화해야 합니다. 업데이트가 성공적으로 끝나면 다중 버전 지원을 다시 활성화할 수 있습니다. 다중 버전 지원을 비활성화하려면 <filename>/etc/zypp/zypp.conf</filename>에 해당 줄에 주석을 추가하십시오. 다음과 같은 결과가 나타납니다.
   </para>
<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
   <para>
    업데이트 성공 후 이 기능을 다시 활성화하려면 주석 기호를 제거하십시오. 다중 버전 지원에 관한 자세한 내용은 <xref linkend="cha.tuning.multikernel.enable"/> 항목을 참조하십시오.
   </para>
  </sect2>

  <sect2 xml:id="sec.update.prep.relnotes">
   <title>릴리스 정보 확인</title>
   <para>
    릴리스 정보에서 이전 릴리스의 SUSE Linux Enterprise 이후에 변경된 내용을 자세히 확인할 수 있습니다. 사용 중인 하드웨어 또는 설정에 특별히 고려해야 할 사항이 있는지 여부, 즐겨 사용하는 소프트웨어 패키지에 많은 변경이 있는지 여부, 이 섹션에 언급된 일반 권장 사항 이외에 수행해야 할 사전 예방 조치 등을 확인합니다. 또한 릴리스 정보에서는 설명서에 즉시 제공되지 않는 최신 정보와 알려진 문제점을 제공합니다.
   </para>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에 대한 최신 정보가 포함된 릴리스 정보 문서의 최신 버전을 <link xlink:href="http://www.suse.com/documentation/"/>에서 온라인으로 확인할 수 있습니다.
   </para>
  </sect2>

  <sect2 xml:id="sec.update.prep.backup">
   <title>백업</title>
   <para>
    업데이트하기 전에 기존 구성 파일을 테이프 장치, 이동식 하드 디스크 등과 같은 별도의 매체에 복사하여 데이터를 백업합니다. 이 사항은 주로 <filename>/var</filename> 및 <filename>/opt</filename>의 일부 디렉토리 및 파일과 <filename>/etc</filename>에 저장된 파일에 적용됩니다. 또한 <filename>/home</filename>(<envar>HOME</envar> 디렉토리)의 사용자 데이터를 백업 매체에 기록해야 할 수도 있습니다. 이 데이터를 <systemitem class="username">root</systemitem>로 백업하십시오. <systemitem class="username">root</systemitem>에만 모든 로컬 파일에 대한 읽기 권한이 있습니다.
   </para>
   <para>
    YaST에서 설치 모드로 <guimenu>기존 시스템 업데이트</guimenu>를 선택한 경우 나중에 (시스템) 백업을 수행하도록 선택할 수 있습니다. 수정된 모든 파일과 <filename>/etc/sysconfig</filename> 디렉토리의 파일을 포함하도록 선택할 수 있습니다. 그러나 이는 위에서 언급한 다른 모든 중요한 디렉토리가 없기 때문에 전체 백업은 아닙니다. <filename>/var/adm/backup</filename> 디렉토리에서 백업을 확인하십시오.
   </para>
  </sect2>

  <sect2 xml:id="sec.update.prep.mariadb">
   <title>MySQL 데이터베이스 마이그레이션</title>
   <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
   <para>
    SUSE Linux Enterprise 12부터 SUSE는 MySQL에서 MariaDB로 전환했습니다. 업그레이드를 시작하기 전에 데이터베이스를 백업하는 것이 좋습니다.
   </para>

   <para>
    데이터베이스를 마이그레이션하려면 다음을 수행하십시오.
   </para>
   <procedure>
    <step>
     <para>
      SUSE Linux Enterprise 11 컴퓨터에 로그인합니다.
     </para>
    </step>
    <step>
     <para>
      덤프 파일을 생성합니다.
     </para>
<screen><prompt>root # </prompt><command>mysqldump</command> -u root -p --all-databases &gt; mysql_backup.sql</screen>
     <para>
      기본적으로 <command>mysqldump</command>는 <literal>INFORMATION_SCHEMA</literal> 또는 <literal>performance_schema</literal> 데이터베이스를 덤프하지 않습니다. 자세한 내용은 <link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>을(를) 참조하십시오.
     </para>
    </step>
    <step>
     <para>
      나중에 확인하기 위해(설치는 <emphasis>아님</emphasis>) 덤프 파일, 구성 파일 <filename>/etc/my.cnf</filename> 및 <filename>/etc/mysql/</filename> 디렉토리를 안전한 곳에 저장합니다.
     </para>
    </step>
    <step>
     <para>
      업그레이드를 수행합니다. 업그레이드 후에도 이전 구성 파일 <filename>/etc/my.cnf</filename>는 그대로 유지됩니다. 새 구성은 <filename>/etc/my.cnf.rpmnew</filename> 파일에 있습니다.
     </para>
    </step>
    <step>
     <para>
      MariaDB 데이터베이스를 필요에 따라 구성합니다. 이전 구성 파일 및 디렉토리는 사용하지 <emphasis>마십시오</emphasis>. 하지만 확인용으로 사용하거나 변경하여 사용할 수는 있습니다.
     </para>
    </step>
    <step>
     <para>
      다음과 같이 MariaDB 서버를 시작해야 합니다.
     </para>
<screen><prompt>root # </prompt><command>systemctl</command> start mysql</screen>
     <para>
      부팅할 때마다 MariaDB 서버를 시작하려면 다음과 같이 서비스를 활성화합니다.
     </para>
<screen><prompt>root # </prompt><command>systemctl</command> enable mysql</screen>

    </step>
    <step>
     <para>
      데이터베이스에 연결하여 MariaDB가 올바로 실행 중인지 확인합니다.
     </para>
<screen><prompt>root # </prompt><command>mysql</command> -u root -p</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.update.prep.postgresql">
   <title>PostgreSQL 데이터베이스 마이그레이션</title>
   <remark>toms 2015-09-09: FATE#319049</remark>
   <remark>Already reviewd by Reinhard</remark>
   <para>
    SLE11 SP3 및 SLE12 GA는 유지보수 업데이트로 최신 버전의 PostgreSQL 데이터베이스를 가져옵니다. 데이터베이스의 필수 마이그레이션 작업 때문에 자동 업그레이드 프로세스는 없습니다. 이처럼 한 버전에서 다른 버전으로 수동으로 전환해야 합니다.
   </para>
   <para>
    기본 덤프 및 다시 로드의 대체 방법인 <command>pg_upgrade</command> 명령으로 마이그레이션 프로세스를 수행합니다. <quote>덤프 및 다시 로드</quote> 방법에 비해 <command>pg_upgrade</command>를 사용하면 마이그레이션에 시간이 덜 듭니다.
   </para>
   <para>
    각 PostgreSQL 버전은 버전에 따라 다른 디렉토리에 파일을 저장합니다. 업데이트 후 디렉토리가 다음으로 변경됩니다.
   </para>
   <variablelist>
    <varlistentry>
     <term>SLE11 SP3/SP4</term>
     <listitem>
      <para>
       <filename>/usr/lib/postgresql91/</filename>에서 <filename>/usr/lib/postgresql94/</filename>로 변경
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SLE12 GA</term>
     <listitem>
      <para>
       <filename>/usr/lib/postgresql93/</filename>에서 <filename>/usr/lib/postgresql94/</filename>로 변경
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    데이터베이스를 마이그레이션하려면 다음을 수행하십시오.
   </para>
   <procedure>
    <step>
     <para>
      다음 사전 조건이 충족되었는지 확인합니다.
     </para>
     <itemizedlist>
      <listitem>
       <para>
        아직 하지 않은 경우 유지보수 업데이트를 통해 이전 PostgreSQL 버전의 패키지를 최신 릴리스로 업그레이드합니다.
       </para>
      </listitem>
      <listitem>
       <para>
        기존 데이터베이스의 백업을 만듭니다.
       </para>
      </listitem>
      <listitem>
       <para>
        새 PostgreSQL 주 버전의 패키지를 설치합니다. SLE12의 경우
        <package>postgresql94-server</package>
        및 이 패키지가 종속된 패키지를 모두 설치합니다.
       </para>
      </listitem>
      <listitem>
       <para>
        패키지 설치
        <package>postgresql94-contrib</package>
        패키지(<command>pg_upgrade</command> 명령 포함)를 설치합니다.
       </para>
      </listitem>
      <listitem>
       <para>
        PostgreSQL 데이터 영역(기본적으로 <filename>/var/lib/pgsql/data</filename>)이 충분한지 확인하십시오. 공간이 부족한 경우 각 데이터베이스에서 다음 SQL 명령으로 크기를 줄여 보십시오(아주 오래 걸릴 수 있음).
       </para>
<screen>VACUUM FULL</screen>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      PostgreSQL 서버를 정지합니다.
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      이전 데이터 디렉토리 이름을 바꿉니다.
     </para>
<screen><prompt>root # </prompt><command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
    </step>
    <step>
     <para>
      새 데이터 디렉토리를 생성합니다.
     </para>
<screen><prompt>root # </prompt><command>mkdir</command> -p /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      이전 버전에서 구성 파일을 변경한 경우 <filename>postgresql.conf</filename>, <filename>pg_hba.conf</filename> 파일을 새 <filename>data</filename> 디렉토리로 복사합니다.
     </para>
<screen><prompt>root # </prompt><command>cp</command> /var/lib/pgsql/data.old/*.conf \
     /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      새 데이터베이스 인스턴스를 <command>initdb</command>를 사용하여 수동으로 초기화하거나 PostgreSQL를 시작했다가 정지하여 자동으로 초기화합니다.
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> start
<prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      마이그레이션 프로세스를 시작하고 <replaceable>OLD</replaceable> 자리 표시자를 이전 버전으로 바꿉니다.
     </para>
<screen><prompt>root # </prompt><command>pg_upgrade</command> \
   --old-datadir "/var/lib/pgsql/data.old" \
   --new-datadir "/var/lib/pgsql/data" \
   --old-bindir "/usr/lib/postgresql<replaceable>OLD</replaceable>/bin/" \
   --new-bindir "/usr/lib/postgresql94/bin/"</screen>
    </step>
    <step>
     <para>
      새 데이터베이스 인스턴스를 시작합니다.
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> start</screen>
    </step>
    <step>
     <para>
      마이그레이션되었는지 확인합니다. 이 단계를 자동화하는 일반 도구는 없습니다. 테스트할 양 및 항목 등 사용 사례에 따라 단계가 달라집니다.
     </para>
    </step>
    <step>
     <para>
      이전 PostgreSQL 패키지와 이전 데이터 디렉토리를 제거합니다.
     </para>
<screen><prompt>root # </prompt><command>zypper</command> search -s postgresql<replaceable>OLD</replaceable> | xargs zypper rm -u
<prompt>root # </prompt><command>rm</command> -rf /var/lib/pgsql/data.old</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.update.prep.ssl">
   <title>Java 응용 프로그램용 MD5 이외의 서버 인증서 생성</title>
   <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
   <para>
    SP1에서 SP2로 업데이트하는 절차 중에 보안 수정의 일부로 MD5 기반 인증서가 비활성화 되었습니다. MD5로 작성한 인증서가 있는 경우 다음 과정에 따라 인증서를 재작성하십시오.
   </para>
   
   <procedure>
    <step>
     <para>
      터미널 창을 열고 <systemitem class="username">루트</systemitem>로 로그인하십시오.
     </para>
    </step>
    <step>
     <para>
      개인 키를 생성합니다.
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> genrsa -out server.key 1024</screen>
     <para>
      보다 강력한 키를 원하는 경우 <literal>1024</literal>를 <literal>4096</literal>과 같이 더 높은 숫자로 교환합니다.
     </para>
    </step>
    <step>
     <para>
      인증서 서명 요청 (CSR)을 생성합니다.
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> req -new -key server.key -out server.csr</screen>
    </step>
    <step>
     <para>
      인증서에 자체 서명합니다.
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</screen>
    </step>
    <step>
     <para>
      PEM 파일을 생성합니다.
     </para>
     <screen><prompt>root # </prompt><command>cat</command> server.key server.crt &gt; server.pem</screen>
    </step>
    <step>
     <para><filename>server.crt</filename>, <filename>server.csr</filename>, <filename>server.key</filename>, 및 <filename>server.pem</filename> 파일을 키가 있는 각각의 디렉토리에 배치합니다. 예를 들어 Tomcat의 경우, 해당하는 디렉토리는 <filename>/etc/tomcat/ssl/</filename>입니다.
     </para>
    </step>
   </procedure>
  </sect2>
  
  <sect2 xml:id="sec.update.prep.vms">
   <title>가상 머신 게스트 종료</title>
   <para>
    시스템이 KVM 또는 Xen에 대한 VM 호스트 서버 역할을 할 경우 업데이트 전에 실행 중인 VM 게스트가 모두 올바르게 종료되었는지 확인합니다. 그렇지 않으면 업데이트 후 게스트에 액세스할 수 없습니다.
   </para>
  </sect2>

  <sect2 xml:id="sec.update.prep.smt">
   <title>SMT 클라이언트에서 <command>clientSetup4SMT.sh</command> 스크립트를 확인하십시오</title>
   <para>
    SMT 서버에 등록된 클라이언트 OS를 마이그레이션하는 경우 호스트의 <command>clientSetup4SMT.sh</command> 스크립트가 최신 상태인지 확인해야 합니다. 이전 버전 SMT의 <command>clientSetup4SMT.sh</command>는 SMT 12 클라이언트를 관리할 수 없습니다. 정기적으로 SMT 서버에 소프트웨어 패치를 적용하는 경우 언제든지 <filename>&lt;SMT_HOSTNAME&gt;/repo/tools/clientSetup4SMT.sh</filename>에서 최신 버전의 <command>clientSetup4SMT.sh</command>를 찾을 수 있습니다.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.update.disk">
  <title>디스크 공간</title>

  <para>
   소프트웨어는 버전이 바뀌면서 <quote>커지는</quote> 경향이 있습니다. 따라서 업데이트하기 전에 사용 가능한 파티션 공간을 살펴보십시오. 디스크 공간 부족이 의심되면 예를 들어 파티션 크기를 조정하는 방법으로 가용 공간을 늘리기 전에 먼저 데이터를 보호하십시오. 각 파티션의 크기에 대한 일반적인 규칙은 없습니다. 공간 요구사항은 특정 파티셔닝 프로파일과 선택한 소프트웨어에 따라 달라집니다.
  </para>

  <note>
   <title>YaST에서 충분한 공간 자동 확인</title>
   <para>
    업데이트 절차 중 YaST가 여유 디스크 공간을 검사하고 설치 용량이 여유 공간보다 클 경우 경고를 표시합니다. 이 경우 업데이트를 수행하면 <emphasis>사용할 수 없는 시스템</emphasis>이라는 오류가 발생할 수 있습니다. 상황을 정확히 알고 있는 경우에만(사전 테스트를 수행하여) 경고를 무시하고 업데이트를 진행할 수 있습니다.
   </para>
  </note>

  <sect2 xml:id="sec.update.disk.space">
   <title>비 Btrfs 파일 시스템에서 디스크 공간 확인</title>
   <para>
    <command>df</command> 명령을 사용하여 가용 디스크 공간을 나열합니다. 예를 들어 <xref linkend="aus.update.df"/>에서 루트 파티션은 <filename>/dev/sda3</filename>(<filename>/</filename>로 탑재됨)입니다.
   </para>
   <example xml:id="aus.update.df">
    <title><command>df -h</command>로 나열</title>

<screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
   </example>
  </sect2>

  <sect2 xml:id="sec.update.disk.btrfs-on-root">
   <title>Btrfs 루트 파일 시스템에서 디스크 공간 확인</title>
   <para>
    시스템에서 Btrfs를 루트 파일 시스템으로 사용하는 경우 사용 가능한 공간이 충분한지 확인해야 합니다. 다음 두 명령으로 디스크 공간을 확인할 수 있습니다.
   </para>
<screen><prompt>root # </prompt><command>btrfs</command> filesystem df /
<prompt>root # </prompt><command>df</command> /</screen>
   <para>
    두 명령의 결과에는 사용된 디스크 공간의 양이 비슷한 숫자로 표시됩니다. 그러나 Btrfs 및 사용 가능한 공간에서 문제는 스냅샷에서 무엇이 참조되고 참조되지 않는지를 알 수 없다는 점입니다. 따라서 변경에 따른 디스크 공간 양을 계산할 수 없습니다.
   </para>
   <para>
    최악의 경우 업그레이드에 현재 루트 파일 시스템만큼의 디스크 공간이 필요합니다(<filename>/.snapshot</filename>이 없는 경우). Btrfs 파일 시스템 외에 다른 파일 시스템에서도 사용 가능한 공간을 확인합니다. 입증된 권장 사항은 다음과 같습니다.
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Btrfs를 비롯한 모든 파일 시스템에서 사용 가능한 디스크 공간이 충분해야 큰 RPM을 다운로드하고 설치할 수 있습니다. 이전 RPM의 공간은 새 RPM을 설치해야만 비워집니다.
     </para>
    </listitem>
    <listitem>
     <para>
      스냅샷이 포함된 Btrfs의 경우 현재 설치에 소요되는 공간만큼의 사용 가능한 공간이 적어도 필요합니다. 사용 가능한 공간이 현재 설치보다 두 배 많은 것이 좋습니다.
     </para>
     <para>
      사용 가능한 공간이 충분하지 않으면 다음과 같은 <command>snapper</command>를 사용하여 이전 스냅샷을 삭제해 볼 수 있습니다.
     </para>
<screen><prompt>root # </prompt><command>snapper</command> list
<prompt>root # </prompt><command>snapper</command> delete NUMBER</screen>
     <para>
      하지만 경우에 따라서는 도움이 되지 않을 수도 있습니다. 마이그레이션 전에 대부분의 스냅샷은 적은 공간만 차지합니다.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.update.proc.prep.paths">
  <title>SLE에 대해 지원되는 업그레이드 경로</title>

  <important>
   <title>아키텍처 간 업그레이드 지원 안 함</title>
   <para>
    아키텍처 간 업그레이드(예: 32비트 버전의 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서 64비트 버전으로 또는 big endian에서 little endian으로 업그레이드)는 지원되지 <emphasis>않습니다</emphasis>.
   </para>
   <para>
    특히, SLE 11 on POWER(big endian)에서 SLE 12 SP1 on POWER(최신: little endian)로의 업그레이드는 지원되지 <emphasis>않습니다</emphasis>.
   </para>
   <para>
    또한 SUSE Linux Enterprise 12는 64비트 전용이므로 32비트 SUSE Linux Enterprise 11 시스템에서 SUSE Linux Enterprise 12 이상 버전으로의 업그레이드는 지원되지 <emphasis>않습니다</emphasis>.
   </para>
  </important>

  <para>
   마이그레이션을 수행하기 전에 <xref linkend="sec.update.prep"/>을(를) 읽어 보십시오.
  </para>

  <variablelist>
   <varlistentry>
    <term>SUSE Linux Enterprise 10(서비스 팩)에서 업그레이드</term>
    <listitem>
     <para>
      SUSE Linux Enterprise 12에 대해 지원되는 직접 마이그레이션 경로는 없습니다. 대신 새로 설치하는 것이 좋습니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 11 GA, SP1 또는 SP2에서 업그레이드</term>
    <listitem>
     <para>
      SUSE Linux Enterprise 12에 대해 지원되는 직접 마이그레이션 경로는 없습니다. SLE 11 SP3 이상이 있어야만 SLE 12로 넘어갈 수 있습니다.
     </para>
     <para>
      새로 설치할 수 없는 경우 먼저 SLE 11 GA에서 SP1로 업데이트하고 SLE 11 SP1에서 SP2로 업데이트한 다음 SLE 11 SP2에서 SP3로 업데이트해야 합니다. 이러한 단계에 대한 자세한 내용은 <link xlink:href="https://www.suse.com/documentation/sles11/">SUSE Linux Enterprise 11 배포 설명서</link>를 참조하십시오.
     </para>
     <para>
      그런 다음 <xref linkend="sec.update.sle12"/>을(를) 계속합니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 11 SP3 또는 SP4에서 업그레이드</term>
    <listitem>
     <para>
      자세한 내용은 <xref linkend="sec.update.sle12"/>을(를) 참조하십시오.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 12에서 SP1로 업그레이드</term>
    <listitem>
     <para>
      자세한 내용은 <xref linkend="cha.update.spmigration"/>을(를) 참조하십시오.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec.update.sle12">
  <title>지원되는 SUSE Linux Enterprise 업그레이드 방법</title>

  <remark>toms 2014-02-11: See FATEs #315969 and #313189</remark>

  <para>
   다음 방법 중 하나를 사용하여 SUSE Linux Enterprise 11 SP3에서 SUSE Linux Enterprise 12로, SUSE Linux Enterprise 11 SP3에서 SUSE Linux Enterprise 12 SP1로 또는 SUSE Linux Enterprise 11 SP4에서 SUSE Linux Enterprise 12 SP1로 업그레이드할 수 있습니다.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec.update.sle12.manual" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.update.sle12.automated" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.update.sle12.manual">
  <title>수동으로 SLE 11 SP3에서 SLE 12 SP1로 업그레이드, 설치 원본 사용</title>

  <para>
   시스템을 업그레이드하기 전에 먼저 <xref linkend="sec.update.prep"/>을(를) 읽어 보십시오.
  </para>

  <para>
   이 방법으로 시스템을 업그레이드하려면 새로 설치할 때처럼 설치 원본에서 부팅해야 합니다. 그러나 부팅 화면이 나타나면 <guimenu>설치</guimenu> 대신 <guimenu>업그레이드</guimenu>를 선택해야 합니다. 부팅할 설치 원본은 다음 중 하나일 수 있습니다.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     로컬 설치 미디어(예: DVD 또는 USB 대용량 저장 장치의 ISO 이미지). 자세한 내용은 <xref linkend="sec.update.sle12.manual.dvd"/>을(를) 참조하십시오.
    </para>
   </listitem>
   <listitem>
    <para>
     네트워크 설치 원본. 로컬 미디어에서 부팅한 다음 해당하는 네트워크 설치 유형을 선택하거나 PXE를 통해 부팅할 수 있습니다. 자세한 내용은 <xref linkend="sec.update.sle12.manual.network"/>을(를) 참조하십시오.
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec.update.sle12.manual.dvd">
   <title>설치 미디어에서 업그레이드</title>
   <para>
    아래 절차에서는 DVD에서 부팅하는 방법을 예를 들어 설명하지만 USB 대용량 저장 장치의 ISO 이미지와 같은 다른 로컬 설치 미디어를 사용해도 됩니다. 부팅 방법을 선택하고 미디어에서 시스템을 시작하는 방법은 시스템 아키텍처와 시스템에서 기존 BIOS 또는 UEFI를 사용하는지 여부에 따라 다릅니다. 자세한 내용은 아래 링크를 참조하십시오.
   </para>
   <procedure xml:id="pro.update.sle12.manual.dvd">
    <title>DVD를 사용하여 SLE 11 SP3에서 SLE 12 SP1로 수동 업그레이드</title>
    <step>
     <para>
      SUSE Linux Enterprise 12 SP1 설치 미디어의 DVD 1을 삽입하고 시스템을 부팅합니다. <guimenu>시작</guimenu> 화면이 표시된 다음 부팅 화면이 표시됩니다.
     </para>
    </step>
    <step>
     <para>
      해당하는 부팅 방법을 선택하여 미디어에서 시스템을 시작합니다(<xref linkend="sec.i.yast2.method"/> 참조).
     </para>
    </step>
    <step>
     <para>
      미디어에서 시스템을 시작합니다(<xref linkend="sec.i.yast2.startup"/> 참조).
     </para>
    </step>
    <step>
     <para>
      <xref linkend="sec.update.sle12.start.upgr.after.boot"/>에 설명된 대로 업그레이드 프로세스를 계속합니다.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.update.sle12.manual.network">
   <title>네트워크 설치 원본에서 업그레이드</title>
   <para>
    네트워크 설치 원본에서 업그레이드를 시작하려면 다음 요구사항을 충족하는지 확인하십시오.
   </para>
   <variablelist>
    <title>네트워크 설치 원본에서 업그레이드에 대한 요구사항</title>
    <varlistentry>
     <term>네트워크 설치 원본</term>
     <listitem>
      <para>
       <xref linkend="cha.deployment.instserver"/>에 따라 설정된 네트워크 설치 원본이 설정됩니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>네트워크 연결 및 네트워크 서비스</term>
     <listitem>
      <para>
        설치 서버와 대상 시스템 모두에서 네트워크 연결이 작동 중이어야 합니다. 네트워크에서 네임 서비스, DHCP(선택 사항이지만 PXE를 통한 부팅에 필요) 및 OpenSLP(선택 사항)를 제공해야 합니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>설치 미디어</term>
     <listitem>
      <para>
       SUSE Linux Enterprise DVD 1(또는 로컬 ISO 이미지)이 준비되어 있어야만 대상 시스템 <emphasis>또는</emphasis> <xref linkend="sec.deployment.prep_boot.pxeprep" xrefstyle="HeadingOnPage"/>에 따라 PXE를 통해 부팅하도록 설정된 대상 시스템을 부팅할 수 있습니다. 원격 서버에서 업그레이드 시작에 대한 자세한 내용은 <xref linkend="cha.deployment.remoteinst"/> 항목을 참조하십시오.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    네트워크 설치 원본에서 업그레이드하는 경우 로컬 미디어에서 부팅한 다음 해당하는 네트워크 설치 유형을 선택하거나 PXE를 통해 부팅할 수 있습니다. 원하는 방법을 선택하고 <xref linkend="pro.update.sle12.manual.network.boot-from-dvd" xrefstyle="select:label"/> 또는 <xref linkend="pro.update.sle12.manual.network.pxe-boot" xrefstyle="select:label"/>에 설명된 대로 진행합니다.
   </para>
   <procedure xml:id="pro.update.sle12.manual.network.boot-from-dvd">
    <title>네트워크 설치 원본을 통해 SLE 11 SP3 또는 SP4에서 SLE 12 SP1로 수동 업그레이드(DVD에서 부팅)</title>
    <para>
     이 절차에서는 DVD에서 부팅하는 방법을 예를 들어 설명하지만 USB 대용량 저장 장치의 ISO 이미지와 같은 다른 로컬 설치 미디어를 사용해도 됩니다. 부팅 방법을 선택하고 미디어에서 시스템을 시작하는 방법은 시스템 아키텍처와 시스템에서 기존 BIOS 또는 UEFI를 사용하는지 여부에 따라 다릅니다. 자세한 내용은 아래 링크를 참조하십시오.
    </para>
    <step>
     <para>
      SUSE Linux Enterprise 12 SP1 설치 미디어의 DVD 1을 삽입하고 시스템을 부팅합니다. <guimenu>시작</guimenu> 화면이 표시된 다음 부팅 화면이 표시됩니다.
     </para>
    </step>
    <step>
     <para>
      사용할 네트워크 설치 원본 유형을 선택합니다(FTP, HTTP, NFS, SMB 또는 SLP). 일반적으로 <keycap>F4</keycap> 키를 눌러 선택하지만 시스템에 기존 BIOS 대신 UEFI가 포함된 경우 부팅 파라미터를 수동으로 조정해야 합니다. 자세한 내용은 <xref linkend="cha.inst"/>의 <xref linkend="sec.i.yast2.source.net"/>을(를) 참조하십시오.
     </para>
    </step>
    <step>
     <para>
      <xref linkend="sec.update.sle12.start.upgr.after.boot"/>에 설명된 대로 업그레이드 프로세스를 계속합니다.
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro.update.sle12.manual.network.pxe-boot">
    <title>네트워크 설치 원본을 통해 SLE 11 SP3 또는 SP4에서 SLE 12 SP1로 수동 업그레이드(PXE를 통해 부팅)</title>
    <para>
     PXE 부팅을 사용하여 네트워크 설치 원본에서 업그레이드하려면 다음과 같이 하십시오.
    </para>
    <step>
     <para>
      DHCP 서버의 설정을 조정하여 PXE를 통한 부팅에 필요한 주소 정보를 제공합니다. 자세한 내용은 <xref linkend="sec.deployment.prep_boot.pxeprep"/>을(를) 참조하십시오.
     </para>
    </step>
    <step>
     <para>
      PXE를 통한 부팅에 필요한 부팅 이미지를 저장하도록 TFTP 서버를 설정합니다. 이를 위해 SUSE Linux Enterprise 12 SP1 설치 미디어의 DVD 1을 사용하거나 <xref linkend="sec.deployment.prep_boot.tftp"/>의 지침을 따르십시오.
     </para>
    </step>
    <step>
     <para>
      대상 시스템에서 PXE 부팅 및 Wake-on-LAN을 준비합니다.
     </para>
    </step>
    <step>
     <para>
      대상 시스템의 부팅을 시작하고 VNC를 사용하여 이 시스템에서 실행 중인 설치 루틴에 원격으로 연결합니다. 자세한 내용은 <xref linkend="sec.deployment.remoteinst.monitor.vnc"/>을(를) 참조하십시오.
     </para>
    </step>
    <step>
     <para>
      <xref linkend="sec.update.sle12.start.upgr.after.boot"/>에 설명된 대로 업그레이드 프로세스를 계속합니다.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.update.sle12.automated">
  <title>자동으로 SLE 11 SP3 또는 SP4에서 SLE 12 SP1로 마이그레이션</title>

  <para>
   시스템을 업그레이드하기 전에 먼저 <xref linkend="sec.update.prep"/>을(를) 읽어 보십시오. 자동 마이그레이션을 수행하려면 다음 단계를 수행하십시오.
  </para>

  <procedure xml:id="pro.update.sle12.automated">
   <title>SUSE Linux Enterprise 11 SP3에서 SUSE Linux Enterprise 12로 자동 마이그레이션 SP1</title>
   <remark>toms 2014-03-19: See FATE#315037</remark>
   <remark role="future">toms 2014-03-20: From SLE12 SP1 on, we should probably base
    this example on GRUB2, but not for GA.</remark>
   <remark>jsrain 2015-09-02: This is still the old system; at some point
       of time we should switch to GRUB2, but as long as amjority of
       customers still runs SLE11, I would stay with legacy GRUB. Anyway, we
       could include both op6tions, that would be probably best solution</remark>
   <step>
    <para>
     <filename>linux</filename> 설치 커널과 <filename>initrd</filename> 파일을 첫 번째 설치 DVD의 <filename>/boot/x86_64/loader/</filename>에서 시스템 <filename>/boot</filename> 디렉토리로 복사합니다.
    </para>
<screen><command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/linux /boot/linux.upgrade
<command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/initrd /boot/initrd.upgrade</screen>
    <para>
     <replaceable>DVDROOT</replaceable>는 시스템에서 DVD를 마운트할 경로(일반적으로 <filename>/run/media/$USER/$DVDNAME</filename>)를 나타냅니다.
    </para>
   </step>
   <step>
    <para>
     GRUB 레거시 구성 파일 <filename>/boot/grub/menu.lst</filename>를 열고 다른 섹션을 추가합니다. 다른 부트 로더의 경우 해당 구성 파일을 편집합니다. 장치 이름과 <parameter>root</parameter> 파라미터를 적절히 조정합니다. 예:
    </para>
<screen>title Linux Upgrade Kernel
kernel (hd0,0)/boot/linux.upgrade root=/dev/sda1 upgrade=1 <replaceable>OPTIONAL_PARAMETERS</replaceable>
initrd (hd0,0)/boot/initrd.upgrade</screen>
    <para>
     <replaceable>OPTIONAL_PARAMETERS</replaceable>는 시스템을 부팅하고 업그레이드를 수행하는 데 필요한 추가 부팅 파라미터를 나타냅니다. 시스템에 필요한 커널 파라미터일 수 있습니다. 기존 GRUB 항목에서 파라미터를 검토한 후 복사해야 하는지 확인합니다. SUSE <link xlink:href="http://en.opensuse.org/Linuxrc">linuxrc 파라미터(온라인 문서)</link>일 수도 있습니다.
    </para>
   </step>
   <step>
    <para>

     자동으로 업그레이드하려면 GRUB 구성의 <option>kernel</option> 줄 끝에 <literal>autoupgrade=1</literal>을 추가합니다.
    </para>
   </step>
   <step>
    <para>
     시스템을 재부팅하고 부팅 메뉴에서 새로 추가한 섹션(이 경우: <emphasis>Linux 업그레이드 커널</emphasis>)을 선택합니다. <command>grubonce</command>를 사용하여 새로 만든 항목으로 무인 자동 재부팅을 위해 새로 만든 grub 항목을 미리 선택할 수 있습니다. <command>reboot</command>를 사용하여 명령 줄에서 재부팅을 시작할 수도 있습니다.
    </para>
   </step>
   <step>
    <para>
     <xref linkend="sec.update.sle12.start.upgr.after.boot"/>에 설명된 대로 일반적인 업그레이드 프로세스를 계속합니다.
    </para>
   </step>
   <step>
    <para>
     업그레이드 프로세스를 완료한 후 설치 커널 및 initrd 파일(<filename>/boot/linux.upgrade</filename> 및 <filename>/boot/initrd.upgrade</filename>)을 제거합니다. 더 이상 필요하지 않습니다.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.update.sle12.start.upgr.after.boot">
  <title>부팅 후 업그레이드 프로세스 시작</title>

  <para>
   <remark>taroth 2014-11-13: argh, the following is terminology hell regarding
     the software strings: "upgrade"/"update" are used intermittently and
     without clear differentiation...</remark>
  </para>

  <procedure>
   <step>
    <para>
     설치 미디어 또는 네트워크를 통해 부팅한 후 부팅 화면에서 <guimenu>업그레이드</guimenu> 항목을 선택합니다.
    </para>
    <warning>
     <title>잘못 선택하면 데이터가 손실될 수 있음</title>
     <para>
      <guimenu>업그레이드</guimenu> 대신 <guimenu>설치</guimenu>를 선택하면 나중에 데이터가 손실될 수 있습니다. 새로 설치를 수행해 데이터 파티션이 삭제되는 일이 없도록 특히 주의하십시오. 예를 들어 디스크의 파티션을 다시 지정하면 기존 파티션이 삭제될 수 있고 데이터 파티션을 다시 포맷하면 저장된 데이터가 모두 지워집니다.
     </para>
     <para>
      여기서는 <guimenu>업그레이드</guimenu>를 선택해야 합니다.
     </para>
    </warning>
    <para>
     설치 시스템이 시작됩니다.
    </para>
   </step>
   <step>
    <para>
     <guimenu>시작</guimenu> 화면에서 <guimenu>언어</guimenu> 및 <guimenu>키보드</guimenu>를 선택하고 라이센스 계약에 동의합니다. <guimenu>다음</guimenu>을 눌러 계속합니다.
    </para>
    <para>
     파티션에 이미 설치된 SUSE Linux Enterprise 시스템이 있는지 확인합니다.
    </para>
   </step>
   <step>
    <para>
     <guimenu>업그레이드를 위한 선택</guimenu> 화면에서 업그레이드할 파티션을 선택하고 <guimenu>다음</guimenu>을 클릭합니다.
    </para>
    <para>
     선택한 파티션이 탑재되고 업그레이드할 파티션에서 찾은 리포지토리가 모두 표시됩니다.
    </para>
   </step>
   <step>
    <para>
     <guimenu>이전에 사용된 리포지토리</guimenu> 화면에서 리포지토리의 상태를 조정합니다. 업그레이드 프로세스에 포함할 리포지토리를 활성화하고 더 이상 필요하지 않은 리포지토리는 비활성화합니다. <guimenu>다음</guimenu>을 눌러 계속합니다.
    </para>
   </step>
   <step>
    <para>
     <guimenu>등록</guimenu> 화면에서 업그레이드한 시스템을 지금 등록하거나(등록 날짜를 입력하고 <guimenu>다음</guimenu> 클릭) <guimenu>등록 건너뛰기</guimenu>를 선택합니다. 시스템 등록에 대한 자세한 내용은 <xref linkend="sec.update.registersystem"/>을(를) 참조하십시오.
    </para>
   </step>
   <step>
    <para>
     업그레이드에 대한 <guimenu>설치 설정</guimenu> 특히, <guimenu>업데이트 옵션</guimenu>을 검토합니다. 다음 옵션 중에서 선택하십시오.
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <guimenu>설치된 패키지만 업데이트</guimenu>. 이 경우 최신 SUSE Linux Enterprise 버전과 함께 제공되는 새 기능을 빠뜨릴 수 있습니다.
      </para>
     </listitem>
     <listitem>
      <para>
       <guimenu>새로운 소프트웨어 및 기능 설치와 함께 업데이트</guimenu>. 원하는 대로 패턴 및 패키지를 활성화하거나 비활성화하려면 <guimenu>패턴 선택</guimenu>을 클릭합니다.
      </para>
     </listitem>
    </itemizedlist>

    <note>
     <title>데스크톱 선택</title>
     <para>
      SUSE Linux Enterprise 12로 업그레이드하기 전 KDE를 사용한 경우(<varname>DEFAULT_WM</varname> (<filename>/etc/sysconfig/windowmanager</filename>에 있음)이 <literal>kde*</literal>로 설정됨) 업그레이드 후 데스크톱 환경이 자동으로 GNOME으로 바뀝니다. 기본적으로 KDM 디스플레이 관리자가 GDM으로 바뀝니다.
     </para>
     <para>
      데스크톱 환경 또는 창 관리자 선택을 변경하려면 <guimenu>패턴 선택</guimenu>을 클릭하여 소프트웨어 선택을 조정합니다.
     </para>
    </note>
   </step>
   <step>
    <para>
     모든 설정을 원하는 대로 설정했으면 <guimenu>업데이트</guimenu>를 클릭하여 설치 및 제거 절차를 시작합니다.
    </para>
   </step>
   <step>
    <para>
     업그레이드 프로세스가 성공적으로 끝난 후 <quote>독립 패키지</quote>가 있는지 확인하십시오. 독립 패키지란 더 이상 어떤 활성 리포지토리에도 속하지 않는 패키지를 말합니다. 다음 명령으로 독립 패키지 목록을 볼 수 있습니다.
    </para>
<screen>zypper packages --orphaned</screen>
    <para>
     이 목록을 통해 패키지가 아직 필요한지 또는 제거해도 좋은지 알 수 있습니다.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.update.sle12.manager">
  <title>SUSE Manager를 통한 업데이트</title>

  <para>
   SUSE Manager는 SUSE Linux Enterprise 클라이언트용 업데이트, 패치 및 보안 수정을 제공하기 위한 서버 솔루션입니다. 이 솔루션에는 관리 작업 도구 세트와 웹 기반 사용자 인터페이스가 함께 제공됩니다. 자세한 내용은 <link xlink:href="https://www.suse.com/products/suse-manager/"/>를 참조하십시오.
  </para>
 </sect1>
 <sect1 xml:id="sec.update.reg.status.after.rollback">
  <title>롤백 후 등록 상태 업데이트</title>

  <para>
   서비스 팩 마이그레이션을 수행할 때는 등록 서버의 구성을 변경하여 새 리포지토리에 대한 액세스를 제공해야 합니다. 마이그레이션 프로세스가 중단되거나 복구된 경우(백업 또는 스냅샷에서 복원하여) 등록 서버의 정보가 시스템 상태와 일치하지 않습니다. 이로 인해 업데이트된 리포지토리에 액세스할 수 없거나 클라이언트에서 잘못된 리포지토리가 사용될 수 있습니다.
  </para>

  <para>
   스냅퍼를 통해 롤백이 이루어지는 경우 부팅 프로세스 중 올바른 리포지토리에 대한 액세스가 설정되도록 등록 서버에 알림이 전달됩니다. 시스템이 다른 방법으로 복구되었거나 등록 서버와의 통신이 실패할 경우(예: 네트워크 문제로 서버에 액세스할 수 없어서) 다음을 호출하여 클라이언트에서 수동으로 롤백을 트리거하십시오.
  </para>

<screen><command>snapper</command> rollback</screen>

  <para>
   특히 다음을 사용하여 서비스를 새로 고친 후에는 시스템에서 올바른 리포지토리가 설정되었는지 항상 확인하는 것이 좋습니다.
  </para>

<screen><command>zypper</command> ref -s</screen>

  <para>
   이 기능은
   <package>rollback-helper</package>
   패키지에서 사용 가능합니다.
  </para>
 </sect1>
 <sect1 xml:id="sec.update.registersystem">


  <title>시스템 등록</title>

  <para>
   설치 중에 등록 단계를 건너뛰었다면 YaST의 <guimenu>제품 등록</guimenu> 모듈을 사용하여 언제든지 시스템을 등록할 수 있습니다.
  </para>

  <para>
   시스템을 등록하면 다음과 같은 이점이 있습니다.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     지원 받기
    </para>
   </listitem>
   <listitem>
    <para>
     보안 업데이트 및 버그 수정 받기
    </para>
   </listitem>
   <listitem>
    <para>
     SUSE 고객 센터 액세스
    </para>
   </listitem>
  </itemizedlist>

  <procedure>
   <step>
    <para>
     YaST를 시작하고 <menuchoice> <guimenu>소프트웨어</guimenu> <guimenu>제품 등록</guimenu> </menuchoice>을 선택하여 <guimenu>등록</guimenu> 대화 상자를 엽니다.
    </para>
   </step>
   <step>
    <para>
     사용자나 조직이 가입을 관리하는 데 사용하는 SUSE 계정과 연결된 <guimenu>전자 메일</guimenu> 주소를 입력하십시오. 아직 SUSE 계정이 없다면 SUSE 고객 센터 홈 페이지(<link xlink:show="new" xlink:href="https://scc.suse.com/"/>)로 이동하여 계정을 생성하십시오.
    </para>
   </step>
   <step>
    <para>
     <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>와 함께 받은 <guimenu>등록 코드</guimenu>를 입력하십시오.
    </para>
   </step>
   <step xml:id="step.y2.register.final">
    <para>
     계속해서 <guimenu>다음</guimenu>을 눌러 등록 프로세스를 시작합니다. 네트워크에서 하나 이상의 로컬 등록 서버를 사용할 수 있으면 목록에서 로컬 등록 서버를 선택할 수 있습니다. 또는 로컬 등록 서버를 무시하고 기본 SUSE 등록 서버에 등록하려면 <guimenu>취소</guimenu>를 선택합니다.
    </para>
    <para>
     등록 중에 온라인 업데이트 리포지토리가 업그레이드 설정에 추가됩니다. 완료되고 나면 업데이트 리포지토리에서 사용 가능한 최신 패키지 버전을 설치할지 여부를 선택할 수 있습니다. 이를 통해 모든 패키지에 대한 클린 업그레이드 경로를 제공하고, 이용 가능한 최신 보안 업데이트를 통해 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>가 업그레이드되도록 보장할 수 있습니다. <guimenu>아니오</guimenu>를 선택하면 모든 패키지가 설치 미디어에서 설치됩니다. <guimenu>다음</guimenu>을 눌러 계속합니다.
    </para>
    <para>
     성공적으로 등록한 후 YaST에는 시스템에 사용할 수 있는 확장, 추가 기능 및 모듈이 나열됩니다. 이를 선택하고 설치하려면 <xref linkend="sec.add-ons.extensions"/>를 계속 진행합니다.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.update.sle12.multiversion">
  <title>커널 패키지 유지</title>

  <remark>toms 2015-08-26: bsc#753809</remark> <remark>toms 2015-08-26: some parts are taken ("stolen") from the
      wiki at https://en.opensuse.org/SDB:Keep_multiple_kernel_versions
      and adapted
    </remark> <indexterm> <primary>다중 버전 커널</primary> </indexterm>

  <para>
   YaST 또는 Zypper로 새 커널을 설치할 때 SUSE Linux Enterprise는 최신 커널 두 개와 실행 중인 커널을 유지합니다. 대개 이것으로 충분합니다.
  </para>

  <para>
   하지만 경우에 따라서는 테스트 목적 등을 위해 커널 버전을 추가로 유지해야 할 수도 있습니다. 이를 위해 SUSE Linux Enterprise에서는 <emphasis>다중 버전 커널 기능</emphasis>을 지원합니다. 이 기능을 활성화하고 구성하여 기본 동작을 변경하고 다음을 수행하도록 구성할 수 있습니다.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     시스템이 새 커널로 재부팅된 후 이전 커널만 삭제
    </para>
   </listitem>
   <listitem>
    <para>
     지정된 수의 이전 커널을 대체 커널로 유지
    </para>
   </listitem>
   <listitem>
    <para>
     특정 커널 버전 유지
    </para>
   </listitem>
  </itemizedlist>

  <para>
   재부팅 후 스크립트에서 설치된 커널 목록을 <filename>/etc/zypp/zypp.conf</filename>의 설정과 비교하고 더 이상 필요하지 않은 커널을 삭제합니다.
  </para>

  <sect2 xml:id="sec.update.sle12.multiversion.enable">
   <title>다중 버전 커널 기능 활성화</title>
   <para>
    기본 동작은 <filename>/etc/zypp/zypp.conf</filename> 구성 파일에서 정의합니다.
   </para>
<screen><prompt>root # </prompt><command>grep</command> ^multiversion /etc/zypp/zypp.conf
multiversion = provides:multiversion(kernel)
multiversion.kernels = latest,latest-1,running</screen>
   <para>
    이 기능을 활성화하려면 위의 <literal>multiversion</literal> 줄 앞에서 해시 표시(#)를 제거합니다(이미 제거되어 있어야 함). 두 번째 줄은 유지해야 하는 <emphasis>커널</emphasis>을 구성하는 데 사용됩니다. 둘 다 활성화해야 합니다. 그렇지 않으면 <emphasis>모든</emphasis> 커널이 유지되어 하드 디스크 공간이 가득 차게 됩니다.
   </para>
   <para>
    <literal>multiversion.kernels</literal> 줄에는 여러 키워드가 다양한 조합 및 순서로 포함될 수 있습니다.
   </para>
   <variablelist>
    <varlistentry>
     <term><option>latest</option>
     </term>
     <listitem>
      <para>
       버전 번호가 가장 높은 커널 유지
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>latest-<replaceable>N</replaceable></option>
     </term>
     <listitem>
      <para>
       버전 번호가 <replaceable>N</replaceable> 번째로 높은 커널 유지. <replaceable>N</replaceable>은 1에서 시작하는 숫자
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>running</option>
     </term>
     <listitem>
      <para>
       현재 실행 중인 커널 유지
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>oldest</option>
     </term>
     <listitem>
      <para>
       버전 번호가 가장 낮은 커널(릴리스된 제품의 커널) 유지
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>oldest-<replaceable>N</replaceable></option>
     </term>
     <listitem>
      <para>
       버전 번호가 <replaceable>N</replaceable> 번째로 낮은 커널 유지
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>3.12.28-4.6</option>
     </term>
     <listitem>
      <para>
       이와 정확히 일치하는 커널 버전 유지
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.update.sle12.multiversion.deleteoldkernel">
   <title>사용 사례: 재부팅 후에만 이전 커널 삭제</title>
   <para>
    시스템이 새 커널로 재부팅한 후에만 이전 커널이 삭제되도록 할 수 있습니다.
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>에서 다음 줄을 변경합니다.
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    앞의 파라미터는 최신 커널과 실행 중인 커널(서로 다른 경우)만 유지합니다.
   </para>
  </sect2>

  <sect2 xml:id="sec.update.sle12.multiversion.fallback">
   <title>사용 사례: 이전 커널을 대체 커널로 유지</title>
   <para>
    하나 이상의 커널 버전을 하나 이상의 <quote>예비</quote> 커널로 유지할 수 있습니다.
   </para>
   <para>
    테스트를 위해 커널이 필요한 경우 이 사용 사례가 유용할 수 있습니다. 예를 들어 시스템이 부팅되지 않는 등의 문제가 발생하는 경우에도 정상이라고 알려진 커널 버전을 하나 이상 사용할 수 있습니다.
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>에서 다음 줄을 변경합니다.
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    새 커널 설치 후 시스템을 재부팅할 때 시스템에서 세 개의 커널 즉, 실행 중인 새 커널(<literal>latest,running</literal>으로 구성), 새 커널의 이전 커널 버전(<literal>latest-1</literal>로 구성) 및 이전 커널 버전의 선행 버전 커널(<literal>latest-2</literal>로 구성)을 유지합니다.
   </para>
  </sect2>

  <sect2 xml:id="sec.update.sle12.multiversion.specificversion">
   <title>사용 사례: 특정 커널 버전 유지</title>
   <para>
    대개는 일반 시스템 업데이트를 수행하고 새 커널 버전을 설치합니다. 그러나 다양한 이유로 자체 커널 버전을 컴파일하고 시스템에서 이 커널을 유지하도록 할 수도 있습니다.
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>에서 다음 줄을 변경합니다.
   </para>
<screen>multiversion.kernels = latest,3.12.28-4.20,running</screen>
   <para>
    새 커널 설치 후 시스템을 재부팅하면 시스템에서 두 개 커널 즉, 실행 중인 새 커널(<literal>latest,running</literal>으로 구성) 및 자체 컴파일한 커널(<literal>3.12.28-4.20</literal>으로 구성)을 유지합니다.
   </para>
  </sect2>
 </sect1>
</chapter>
