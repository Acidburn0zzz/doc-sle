<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="sle_update_upgrading.xml" version="5.0" xml:id="cha-update-sle">
 <title>升級 SUSE Linux Enterprise</title>
 <info>
  <abstract>
   <para>
    SUSE® Linux Enterprise 允許您將現有系統更新到新版本，例如，從 SLE 11 SP4 更新到 SLE 12。不需要任何新安裝。主目錄和資料目錄以及系統組態等現有資料仍保持不變。您可以從本地 CD 或 DVD 光碟機或從中央網路安裝來源進行更新。
   </para>

   <para>
    本章介紹如何透過 DVD、網路、自動化程序或 SUSE Manager 手動升級 SUSE Linux Enterprise 系統。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec-update-prep">
  <title>一般準備工作</title>

  <para>
   在開始更新程序之前，請先確定您的系統已準備妥當。此外，準備工作還包括備份資料和檢查版本說明。
  </para>

  <sect2 xml:id="sec-update-prep-multiversion">
   <title>暫時停用核心多版本支援</title>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 允許透過啟用 <filename>/etc/zypp/zypp.conf</filename> 中的各項設定來安裝多個核心版本。為了更新 Service Pack，需要暫時停用對此項功能的支援。成功完成更新後，可再次重新啟用多版本支援。若要停用多版本支援，請在 <filename>/etc/zypp/zypp.conf</filename> 中為各行加上備註。結果應類似於下列所示︰
   </para>
<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
   <para>
    若要在成功更新後重新啟用此功能，請移除備註符號。如需更多有關多版本支援的詳細資訊，請參閱<xref linkend="cha-tuning-multikernel-enable"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-relnotes">
   <title>查看版本說明</title>
   <para>
    在版本說明中，您可以找到有關自 SUSE Linux Enterprise 先前版本以來所做變更的其他資訊。請依據此版本說明確認您的特定硬體或設定是否需要特別注意、您最愛的特定軟體套件是否已有重大變更，以及除本節中的一般建議之外，您還需要注意哪些事項。版本說明還提供了無法及時編入手冊的最新資訊和已知問題。
   </para>
   <para>
    包含有關 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 最新資訊的版本說明文件最新版本可在線上造訪 <link xlink:href="http://www.suse.com/documentation/"/> 進行閱讀。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-backup">
   <title>備份</title>
   <para>
    更新之前，請先將現有的組態檔案複製到單獨的媒體 (例如磁帶裝置、可移除式硬碟等) 中，以便備份資料。此作業主要適用於儲存在 <filename>/etc</filename> 中的檔案，以及 <filename>/var</filename> 和 <filename>/opt</filename> 中的一些目錄和檔案。您最好也將 <filename>/home</filename> (即 <envar>HOME</envar> 目錄) 中的使用者資料複製到備份媒體。將此資料備份為 <systemitem class="username">root</systemitem>。只有 <systemitem class="username">root</systemitem> 才有權讀取所有本地檔案。
   </para>
   <para>
    如果您在 YaST 中選取了<guimenu>更新現有系統</guimenu>做為安裝模式，則可以選擇稍後執行 (系統) 備份。您可以選擇包含所有已修改的檔案以及 <filename>/etc/sysconfig</filename> 目錄中的檔案。不過，這並不是一個完整備份，因為缺少上述的所有其他重要目錄。您可在 <filename>/var/adm/backup</filename> 目錄中找到該備份。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-mariadb">
   <title>移轉 MySQL 資料庫</title>
   <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
   <para>
    從 SUSE Linux Enterprise 12 開始，SUSE 使用 MariaDB 而不是 MySQL。在開始任何升級操作之前，強烈建議您備份資料庫。
   </para>

   <para>
    若要執行資料庫移轉，請執行以下步驟：
   </para>
   <procedure>
    <step>
     <para>
      登入到 SUSE Linux Enterprise 11 機器。
     </para>
    </step>
    <step>
     <para>
      建立傾印檔案:
     </para>
<screen><prompt>root # </prompt><command>mysqldump</command> -u root -p --all-databases &gt; mysql_backup.sql</screen>
     <para>
      依預設，<command>mysqldump</command> 不會傾印 <literal>INFORMATION_SCHEMA</literal> 或 <literal>performance_schema</literal> 資料庫。如需詳細資訊，請參閱<link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>。
     </para>
    </step>
    <step>
     <para>
      將您的傾印檔案、組態檔案 <filename>/etc/my.cnf</filename> 以及目錄 <filename>/etc/mysql/</filename> 儲存在安全位置以供日後調查(<emphasis>不要</emphasis>用於安裝！)。
     </para>
    </step>
    <step>
     <para>
      執行升級。升級後，以前的組態檔案 <filename>/etc/my.cnf</filename> 仍將保持不變。可以在檔案 <filename>/etc/my.cnf.rpmnew</filename> 中找到新組態。
     </para>
    </step>
    <step>
     <para>
      根據需要設定 MariaDB 資料庫。<emphasis>不要</emphasis>使用以前的組態檔案和目錄，只是將其用做提醒，並對其進行改編。
     </para>
    </step>
    <step>
     <para>
      確定啟動 MariaDB 伺服器：
     </para>
<screen><prompt>root # </prompt><command>systemctl</command> start mysql</screen>
     <para>
      如果您希望每次開機時都啟動 MariaDB 伺服器，請啟用以下服務：
     </para>
<screen><prompt>root # </prompt><command>systemctl</command> enable mysql</screen>

    </step>
    <step>
     <para>
      透過連接到資料庫來驗證 MariaDB 是否正常執行：
     </para>
<screen><prompt>root # </prompt><command>mysql</command> -u root -p</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-postgresql">
   <title>移轉 PostgreSQL 資料庫</title>
   <remark>toms 2015-09-09: FATE#319049</remark>
   <remark>Already reviewd by Reinhard</remark>
   <para>
    SLE11 SP3 和 SLE12 GA 將會透過維護更新取得較新版本的 PostgreSQL 資料庫。由於需要完成資料庫的移轉工作，因此無法使用自動升級程序。您必須手動完成從一個版本到另一個版本的切換。
   </para>
   <para>
    移轉程序由 <command>pg_upgrade</command> 指令 (可替代傳統的傾印再重新載入方法) 執行。與<quote>傾印再重新載入</quote>方法相比，<command>pg_upgrade</command> 可以減少移轉所耗費的時間。
   </para>
   <para>
    每個 PostgreSQL 版本會將其檔案儲存在與版本相關的不同目錄中。更新後，目錄將變更為：
   </para>
   <variablelist>
    <varlistentry>
     <term>SLE11 SP3/SP4</term>
     <listitem>
      <para>
       從 <filename>/usr/lib/postgresql91/</filename> 變更為 <filename>/usr/lib/postgresql94/</filename>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SLE12 GA</term>
     <listitem>
      <para>
       從 <filename>/usr/lib/postgresql93/</filename> 變更為 <filename>/usr/lib/postgresql94/</filename>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    若要執行資料庫移轉，請執行以下步驟：
   </para>
   <procedure>
    <step>
     <para>
      確定滿足以下前提條件：
     </para>
     <itemizedlist>
      <listitem>
       <para>
        如果尚未這麼做，請透過維護更新將舊 PostgreSQL 版本的任何套件升級至最新版本。
       </para>
      </listitem>
      <listitem>
       <para>
        建立現有資料庫的備份。
       </para>
      </listitem>
      <listitem>
       <para>
        安裝新 PostgreSQL 主要版本的套件。對於 SLE12，這表示需要安裝
        <package>postgresql94-server</package>
        及其相依的所有套件。
       </para>
      </listitem>
      <listitem>
       <para>
        安裝套件
        <package>postgresql94-contrib，</package>
        其中包含指令 <command>pg_upgrade</command>。
       </para>
      </listitem>
      <listitem>
       <para>
        確定 PostgreSQL 資料區域 (預設為 <filename>/var/lib/pgsql/data</filename>) 中有足夠的可用空間。如果可用空間非常有限，請對每個資料庫使用以下 SQL 指令，以嘗試減少大小 (這可能需要花費很長時間！)：
       </para>
<screen>VACUUM FULL</screen>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      停止 PostgreSQL 伺服器：
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      重新命名舊資料目錄：
     </para>
<screen><prompt>root # </prompt><command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
    </step>
    <step>
     <para>
      建立新資料目錄：
     </para>
<screen><prompt>root # </prompt><command>mkdir</command> -p /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      如果您已變更舊版本中的組態檔案，請將檔案 <filename>postgresql.conf</filename> <filename>pg_hba.conf</filename> 複製到新的 <filename>data</filename> 目錄：
     </para>
<screen><prompt>root # </prompt><command>cp</command> /var/lib/pgsql/data.old/*.conf \
     /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      使用 <command>initdb</command> 手動啟始化新的資料庫例項，或者啟動再停止 PostgreSQL，如此即可自動完成啟始化：
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> start
<prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      開始移轉程序，並用舊版本取代 <replaceable>OLD</replaceable> 預留位置：
     </para>
<screen><prompt>root # </prompt><command>pg_upgrade</command> \
   --old-datadir "/var/lib/pgsql/data.old" \
   --new-datadir "/var/lib/pgsql/data" \
   --old-bindir "/usr/lib/postgresql<replaceable>OLD</replaceable>/bin/" \
   --new-bindir "/usr/lib/postgresql94/bin/"</screen>
    </step>
    <step>
     <para>
      啟動新資料庫例項：
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> start</screen>
    </step>
    <step>
     <para>
      檢查移轉是否成功。沒有通用的工具可用於自動執行此步驟。此項操作取決於您的使用案例，以及要測試的數量和內容。
     </para>
    </step>
    <step>
     <para>
      移除所有舊 PostgreSQL 套件和舊資料目錄：
     </para>
<screen><prompt>root # </prompt><command>zypper</command> search -s postgresql<replaceable>OLD</replaceable> | xargs zypper rm -u
<prompt>root # </prompt><command>rm</command> -rf /var/lib/pgsql/data.old</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-ssl">
   <title>為 Java 應用程式建立非 MD5 伺服器證書</title>
   <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
   <para>
    從 SP1 升級到 SP2 期間，在進行安全性修復時停用了 MD5 式證書。若您之前建立的證書為 MD5 證書，請執行以下步驟來重新建立證書︰
   </para>
   
   <procedure>
    <step>
     <para>
      開啟終端機，並以 <systemitem class="username">root</systemitem> 身分登入。
     </para>
    </step>
    <step>
     <para>
      建立私密金鑰︰
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> genrsa -out server.key 1024</screen>
     <para>
      如需增強式金鑰，請將 <literal>1024</literal> 取代為更大的數字，例如 <literal>4096</literal>。
     </para>
    </step>
    <step>
     <para>
      建立證書簽署申請 (CSR)︰
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> req -new -key server.key -out server.csr</screen>
    </step>
    <step>
     <para>
      自行簽署證書︰
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</screen>
    </step>
    <step>
     <para>
      建立 PEM 檔案︰
     </para>
     <screen><prompt>root # </prompt><command>cat</command> server.key server.crt &gt; server.pem</screen>
    </step>
    <step>
     <para>將 <filename>server.crt</filename>、<filename>server.csr</filename>、<filename>server.key</filename> 與 <filename>server.pem</filename> 檔案置於可在其中找到金鑰的相應目錄中。例如，對於 Tomcat，此目錄為 <filename>/etc/tomcat/ssl/</filename>。
     </para>
    </step>
   </procedure>
  </sect2>
  
  <sect2 xml:id="sec-update-prep-vms">
   <title>關閉虛擬機器客體</title>
   <para>
    如果您的機器用做 KVM 或 Xen 的虛擬機器主機伺服器，請確定在更新之前，先正常關閉所有執行中的虛擬機器客體。否則，您可能會在更新之後無法存取這些客體作業系統。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-smt">
   <title>檢查 SMT 用戶端上的 <command>clientSetup4SMT.sh</command> 程序檔</title>
   <para>
    若要移轉針對 SMT 伺服器註冊的用戶端作業系統，則需要檢查主機上的 <command>clientSetup4SMT.sh</command> 程序檔是否為最新版本。較舊版 SMT 的 <command>clientSetup4SMT.sh</command> 無法管理 SMT 12 用戶端。如果您在 SMT 伺服器上定期套用軟體修補程式，那麼位於 <filename>&lt;SMT 主機名稱&gt;/repo/tools/clientSetup4SMT.sh</filename> 處的 <command>clientSetup4SMT.sh</command> 永遠都是最新版本。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-disk">
  <title>磁碟空間</title>

  <para>
   軟體通常會隨著版本更新而<quote>擴增</quote>。因此在更新之前，請先檢視可用的分割區空間。若您懷疑磁碟空間不足，請在增加可用空間之前透過以下方式儲存您的資料，例如調整分割區大小。每個分割區應該佔用多大空間並沒有常規可循。空間需求將依特定的磁碟分割設定檔和選取軟體而有差異。
  </para>

  <note>
   <title>自動檢查 YaST 中是否有足夠的空間</title>
   <para>
    在更新過程中，YaST 會檢查可用的磁碟空間，並且在安裝可能會超過可用大小時向使用者顯示警告。在此情況下，執行更新可能會導致<emphasis>系統無法使用</emphasis>！除非您有執行的把握 (透過事先測試取得)，您才可以跳過該警告並繼續進行更新。
   </para>
  </note>

  <sect2 xml:id="sec-update-disk-space">
   <title>檢查非 Btrfs 檔案系統上的磁碟空間</title>
   <para>
    請使用 <command>df</command> 指令列出可用的磁碟空間。例如，在 <xref linkend="aus-update-df"/> 中，根分割區為 <filename>/dev/sda3</filename> (掛接位置是 <filename>/</filename>)。
   </para>
   <example xml:id="aus-update-df">
    <title>使用 <command>df -h</command> 來列示</title>

<screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
   </example>
  </sect2>

  <sect2 xml:id="sec-update-disk-btrfs-on-root">
   <title>檢查非 Btrfs 根檔案系統上的磁碟空間</title>
   <para>
    如果您在機器上使用 Btrfs 做為根檔案系統，請確定有足夠的可用空間。可以使用兩個指令來檢查磁碟空間：
   </para>
<screen><prompt>root # </prompt><command>btrfs</command> filesystem df /
<prompt>root # </prompt><command>df</command> /</screen>
   <para>
    這兩個指令的顯示結果類似於數字，指出已用了多少磁碟空間。但是，在 Btrfs 和可用空間方面，一個問題在於，您不知道某個快照參考或者未參考哪些內容，您也無法計算某項變更需要佔用多少磁碟空間。
   </para>
   <para>
    在最壞的情況下，升級需要佔用目前根檔案系統的整個磁碟空間 (在不使用 <filename>/.snapshot</filename> 的情況下)。除了所有 Btrfs 檔案系統以外，還應檢查其他檔案系統上的可用空間。以下建議已證實有用：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      包含 Btrfs 的所有檔案系統需有足夠的可用磁碟空間用於下載和安裝大型 RPM。舊 RPM 的空間只會在安裝新 RPM 之後釋放。
     </para>
    </listitem>
    <listitem>
     <para>
      對於包含快照的 Btrfs，至少需要有目前安裝任務所需的可用空間。建議在該檔案系統上提供兩倍於目前安裝所需的可用空間。
     </para>
     <para>
      如果沒有足夠的可用空間，您可以嘗試使用 <command>snapper</command> 刪除舊快照，例如：
     </para>
<screen><prompt>root # </prompt><command>snapper</command> list
<prompt>root # </prompt><command>snapper</command> delete NUMBER</screen>
     <para>
      但是，這種做法並不總是有用。在移轉之前，大部份快照只會佔用極少的空間。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-proc-prep-paths">
  <title>受支援的 SLE 升級路徑</title>

  <important>
   <title>不支援跨架構升級</title>
   <para>
    <emphasis>不</emphasis>支援跨架構升級！例如,從 32 位元版本的 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 升級到 64 位元版本，或從位元組由大到小升級到位元組由小到大。
   </para>
   <para>
    具體來說，就是<emphasis>不</emphasis>支援從 SLE 11 on POWER (位元組由大到小) 升級到 SLE 12 SP1 on POWER (新增︰位元組由小到大)。
   </para>
   <para>
    另外，由於 SUSE Linux Enterprise 12 僅提供 64 位元，所以<emphasis>不</emphasis>支援從任何 32 位元的 SUSE Linux Enterprise 11 系統升級到 SUSE Linux Enterprise 12 及更高版本。
   </para>
  </important>

  <para>
   在執行任何移轉操作之前，請閱讀<xref linkend="sec-update-prep"/>。
  </para>

  <variablelist>
   <varlistentry>
    <term>從 SUSE Linux Enterprise 10 (任何 Service Pack) 升級</term>
    <listitem>
     <para>
      不支援直接移轉到 SUSE Linux Enterprise 12 的移轉路徑。建議改為進行全新安裝。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>從 SUSE Linux Enterprise 11 GA、SP1 或 SP2 升級</term>
    <listitem>
     <para>
      不支援直接移轉到 SUSE Linux Enterprise 12 的移轉路徑。在移轉到 SLE 12 之前，至少需要安裝 SLE 11 SP3。
     </para>
     <para>
      如果您無法執行全新安裝，則需要先從 SLE 11 GA 更新到 SP1，再從 SLE 11 SP1 更新到 SP2，然後從 SLE 11 SP2 更新到 SP3。<link xlink:href="https://www.suse.com/documentation/sles11/">《SUSE Linux Enterprise 11 部署指南》</link>中說明了這些步驟。
     </para>
     <para>
      然後，繼續執行<xref linkend="sec-update-sle12"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>從 SUSE Linux Enterprise 11 SP3 或 SP4 升級</term>
    <listitem>
     <para>
      如需詳細資訊，請參閱<xref linkend="sec-update-sle12"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>從 SUSE Linux Enterprise 12 升級到 SP1</term>
    <listitem>
     <para>
      如需詳細資訊，請參閱<xref linkend="cha-update-spmigration"/>。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-update-sle12">
  <title>支援的 SUSE Linux Enterprise 升級方法</title>

  <remark>toms 2014-02-11: See FATEs #315969 and #313189</remark>

  <para>
   支援使用以下方法之一從 SUSE Linux Enterprise 11 SP3 升級到 SUSE Linux Enterprise 12、從 SUSE Linux Enterprise 11 SP3 升級到 SUSE Linux Enterprise 12 SP1，或者從 SUSE Linux Enterprise 11 SP4 升級到 SUSE Linux Enterprise 12 SP1：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec-update-sle12-manual" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec-update-sle12-automated" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-update-sle12-manual">
  <title>使用安裝來源從 SLE 11 SP3 手動升級到 SLE 12 SP1</title>

  <para>
   在升級系統之前，請先閱讀<xref linkend="sec-update-prep"/>。
  </para>

  <para>
   若要以這種方式升級系統，需要像全新安裝時那樣，從安裝來源開機。不過，當開機螢幕出現時，您需要選取<guimenu>升級</guimenu> (而不是<guimenu>安裝</guimenu>)。要用於開機的安裝來源可以是下列其中一項：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     本地安裝媒體 (例如 DVD，或者 USB 大量儲存裝置上的 ISO 影像)。若需要詳細說明，請參閱 <xref linkend="sec-update-sle12-manual-dvd"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     網路安裝來源。您可以從本地媒體開機並選取相應的網路安裝類型，或者透過 PXE 開機。若需要詳細說明，請參閱 <xref linkend="sec-update-sle12-manual-network"/>.
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec-update-sle12-manual-dvd">
   <title>從安裝媒體升級</title>
   <para>
    以下程序舉例說明如何從 DVD 開機，不過，您也可以使用其他本地安裝媒體，例如 USB 大量儲存裝置上的 ISO 影像。如何選取開機方法以及從媒體啟動系統取決於系統架構，以及機器使用的是傳統 BIOS 還是 UEFI。如需詳細資料，請參閱以下連結。
   </para>
   <procedure xml:id="pro-update-sle12-manual-dvd">
    <title>使用 DVD 從 SLE 11 SP3 手動升級到 SLE 12 SP1</title>
    <step>
     <para>
      插入 SUSE Linux Enterprise 12 SP1 安裝媒體的 DVD 1 並將機器開機。隨即會依次顯示<guimenu>歡迎使用</guimenu>螢幕和開機螢幕。
     </para>
    </step>
    <step>
     <para>
      選取相應的開機方法以從媒體啟動系統 (請參閱<xref linkend="sec-i-yast2-method"/>)。
     </para>
    </step>
    <step>
     <para>
      從媒體啟動系統 (請參閱<xref linkend="sec-i-yast2-startup"/>)。
     </para>
    </step>
    <step>
     <para>
      如<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述繼續執行升級程序。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-sle12-manual-network">
   <title>從網路安裝來源升級</title>
   <para>
    如果要從網路安裝來源開始升級，請確定符合以下要求：
   </para>
   <variablelist>
    <title>從網路安裝來源升級的要求</title>
    <varlistentry>
     <term>網路安裝來源</term>
     <listitem>
      <para>
       網路安裝來源已依據<xref linkend="cha-deployment-instserver"/>所述完成設定。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>網路連接和網路服務</term>
     <listitem>
      <para>
       安裝伺服器與目標機器都已建立正常的網路連接。網路必須提供以下服務：名稱服務、DHCP (選擇性，但透過 PXE 開機時需要) 和 OpenSLP (選擇性)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>安裝媒體</term>
     <listitem>
      <para>
       提前備好一張用於將目標系統開機的 SUSE Linux Enterprise DVD 1 (或本地 ISO 影像)，<emphasis>或者</emphasis>根據<xref linkend="sec-deployment-prep-boot-pxeprep" xrefstyle="HeadingOnPage"/>中所述，提前備好一個經過設定的，可透過 PXE 開機的目標系統。請參閱<xref linkend="cha-deployment-remoteinst"/>，深入瞭解從遠端伺服器開始升級的相關資訊。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    從網路安裝來源升級時，您可以從本機媒體開機並選取相應的網路安裝類型，或者透過 PXE 開機。選取所需的方法，並如<xref linkend="pro-update-sle12-manual-network-boot-from-dvd" xrefstyle="select:label"/> 或<xref linkend="pro-update-sle12-manual-network-pxe-boot" xrefstyle="select:label"/> 中所述繼續。
   </para>
   <procedure xml:id="pro-update-sle12-manual-network-boot-from-dvd">
    <title>透過網路安裝來源從 SLE 11 SP3 或 SP4 手動升級到 SLE 12 SP1 - 從 DVD 開機</title>
    <para>
     此程序舉例說明如何從 DVD 開機，不過，您也可以使用其他本地安裝媒體，例如 USB 大量儲存裝置上的 ISO 影像。如何選取開機方法以及從媒體啟動系統取決於系統架構，以及機器使用的是傳統 BIOS 還是 UEFI。如需詳細資料，請參閱以下連結。
    </para>
    <step>
     <para>
      插入 SUSE Linux Enterprise 12 SP1 安裝媒體的 DVD 1 並將機器開機。隨即會依次顯示<guimenu>歡迎使用</guimenu>螢幕和開機螢幕。
     </para>
    </step>
    <step>
     <para>
      選取要使用的網路安裝來源類型 (FTP、HTTP、NFS、SMB 或 SLP)。通常可以按 <keycap>F4</keycap> 選取此選項，但是，如果您機器上裝配的是 UEFI 而不是傳統 BIOS，則您可能需要手動調整開機參數。如需詳細資料，請參閱<xref linkend="cha-inst"/>中的<xref linkend="sec-i-yast2-source-net"/>。
     </para>
    </step>
    <step>
     <para>
      如<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述繼續執行升級程序。
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-update-sle12-manual-network-pxe-boot">
    <title>透過網路安裝來源從 SLE 11 SP3 或 SP4 手動升級到 SLE 12 SP1 - 透過 PXE 開機</title>
    <para>
     若要使用 PXE Boot 從網路安裝來源執行升級，請按如下所述繼續：
    </para>
    <step>
     <para>
      調整 DHCP 伺服器的設定以提供透過 PXE 開機時所需的位址資訊。如需詳細資料，請參閱<xref linkend="sec-deployment-prep-boot-pxeprep"/>。
     </para>
    </step>
    <step>
     <para>
      設定 TFTP 伺服器，以存放透過 PXE 開機時所需的開機影像。為此，請使用 SUSE Linux Enterprise  12 SP1 安裝媒體的 DVD 1，或者遵循<xref linkend="sec-deployment-prep-boot-tftp"/>中的指示。
     </para>
    </step>
    <step>
     <para>
      在目標機器上準備 PXE 開機和網路喚醒功能。
     </para>
    </step>
    <step>
     <para>
      啟始目標系統開機，並使用 VNC 遠端連接到這部機器所執行的安裝常式。如需詳細資訊，請參閱<xref linkend="sec-deployment-remoteinst-monitor-vnc"/>。
     </para>
    </step>
    <step>
     <para>
      如<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述繼續執行升級程序。
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-sle12-automated">
  <title>從 SLE 11 SP3 或 SP4 自動移轉到 SLE 12 SP1</title>

  <para>
   在升級系統之前，請先閱讀<xref linkend="sec-update-prep"/>。若要執行自動移轉，請執行下列步驟︰
  </para>

  <procedure xml:id="pro-update-sle12-automated">
   <title>從 SUSE Linux Enterprise 11 SP3 自動移轉到 SUSE Linux Enterprise 12SP1</title>
   <remark>toms 2014-03-19: See FATE#315037</remark>
   <remark role="future">toms 2014-03-20: From SLE12 SP1 on, we should probably base
    this example on GRUB2, but not for GA.</remark>
   <remark>jsrain 2015-09-02: This is still the old system; at some point
       of time we should switch to GRUB2, but as long as amjority of
       customers still runs SLE11, I would stay with legacy GRUB. Anyway, we
       could include both op6tions, that would be probably best solution</remark>
   <step>
    <para>
     將第一張安裝 DVD 的 <filename>/boot/x86_64/loader/</filename> 中的安裝核心 <filename>linux</filename> 和檔案 <filename>initrd</filename> 複製到系統的 <filename>/boot</filename> 目錄︰
    </para>
<screen><command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/linux /boot/linux.upgrade
<command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/initrd /boot/initrd.upgrade</screen>
    <para>
     <replaceable>DVDROOT</replaceable> 表示系統掛接 DVD 的路徑，通常是 <filename>/run/media/$USER/$DVDNAME</filename>。
    </para>
   </step>
   <step>
    <para>
     開啟 GRUB 舊組態檔案 <filename>/boot/grub/menu.lst</filename> 並新增另一個區段。對於其他開機載入程式，請編輯相應的組態檔案。相應地調整裝置名稱和 <parameter>根部</parameter> 參數。例如：
    </para>
<screen>title Linux Upgrade Kernel
kernel (hd0,0)/boot/linux.upgrade root=/dev/sda1 upgrade=1 <replaceable>OPTIONAL_PARAMETERS</replaceable>
initrd (hd0,0)/boot/initrd.upgrade</screen>
    <para>
     <replaceable>OPTIONAL_PARAMETERS</replaceable> 表示其他開機參數，將系統開機和執行升級時可能需要這些參數。這些參數是系統需要的核心參數 - 請確認您是否需要從現有 GRUB 項目中檢閱並複製這些參數。它們還可能是 SUSE <link xlink:href="http://en.opensuse.org/Linuxrc">linuxrc 參數，請參閱線上文件說明</link>。
    </para>
   </step>
   <step>
    <para>

     如果升級應自動執行，請將 <option>autoupgrade=1</option> 新增至 GRUB 組態中 <literal>kernel</literal> 行的末尾。
    </para>
   </step>
   <step>
    <para>
     將機器重新開機，並從開機功能表中選取新增的區段 (此處是 <emphasis>Linux 升級核心</emphasis>)。您可以使用 <command>grubonce</command> 預先選取新建立的 GRUB 項目，以便以無人管理的方式自動重新開機到新建立的項目。您還可以使用 <command>reboot</command> 來從指令行啟動重新開機。
    </para>
   </step>
   <step>
    <para>
     如<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述繼續執行一般的升級程序。
    </para>
   </step>
   <step>
    <para>
     升級程序成功完成後，移除安裝核心和 initrd 檔案 (<filename>/boot/linux.upgrade</filename> 和 <filename>/boot/initrd.upgrade</filename>)。現在不再需要這些檔案。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-sle12-start-upgr-after-boot">
  <title>開機後開始升級程序</title>

  <para>
   <remark>taroth 2014-11-13: argh, the following is terminology hell regarding
     the software strings: "upgrade"/"update" are used intermittently and
     without clear differentiation...</remark>
  </para>

  <procedure>
   <step>
    <para>
     (從安裝媒體或網路) 開機後，請在開機螢幕上選取<guimenu>升級</guimenu>項目。
    </para>
    <warning>
     <title>不當的選擇可能會導致資料遺失</title>
     <para>
      如果您選取<guimenu>安裝</guimenu>而不是<guimenu>升級</guimenu>，稍後可能會遺失資料。在全新安裝期間，您需要格外小心，以免某些操作損毀資料分割區，這些操作包括重新分割磁碟 (可能會損毀現有分割區) 或重新格式化資料分割區 (這會去除資料分割區上的所有資料)。
     </para>
     <para>
      請確定在這裡選取<guimenu>升級</guimenu>。
     </para>
    </warning>
    <para>
     YaST 將會啟動安裝系統。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>歡迎使用</guimenu>螢幕上，選擇<guimenu>語言</guimenu>和<guimenu>鍵盤</guimenu>並接受授權合約。按<guimenu>下一步</guimenu>繼續。
    </para>
    <para>
     YaST 將會檢查您的分割區上是否已安裝 SUSE Linux Enterprise 系統。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>選取升級</guimenu>螢幕上，選取要升級的分割區，然後按<guimenu>下一步</guimenu>。
    </para>
    <para>
     YaST 將會裝入選定的分割區，並顯示在您要升級的分割區上找到的所有儲存庫。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>之前使用的儲存庫</guimenu>螢幕上，調整儲存庫的狀態：啟用您要包含在升級程序中的儲存庫，並停用不再需要的所有儲存庫。按<guimenu>下一步</guimenu>繼續。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>註冊</guimenu>螢幕上，選取是要立即註冊已升級的系統 (輸入您的註冊資料並按<guimenu>下一步</guimenu>)，還是要<guimenu>跳過註冊</guimenu>。如需註冊系統的詳細資料，請參閱<xref linkend="sec-update-registersystem"/>。
    </para>
   </step>
   <step>
    <para>
     檢閱關於升級的<guimenu>安裝設定</guimenu>，尤其是<guimenu>更新選項</guimenu>。在以下選項之間進行選擇：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <guimenu>只更新安裝的套件</guimenu>，如果選取此選項，您可能會失去最新 SUSE Linux Enterprise 版本隨附的新功能。
      </para>
     </listitem>
     <listitem>
      <para>
       <guimenu>透過安裝新軟體和功能進行更新</guimenu>。如果要根據自己的需要啟用或停用模式與套件，請按一下<guimenu>選取模式</guimenu>。
      </para>
     </listitem>
    </itemizedlist>

    <note>
     <title>桌面選擇</title>
     <para>
      如果在升級到 SUSE Linux Enterprise 12 之前您使用的是 KDE<varname>(</varname> <filename>/etc/sysconfig/windowmanager</filename> 中的 DEFAULT_WM 設定為 <literal>kde*</literal>)，則在升級後，您的桌面環境會自動取代為 GNOME。依預設，KDM 顯示管理員會取代為 GDM。
     </para>
     <para>
      若要變更桌面環境或視窗管理員的選擇，請按一下<guimenu>選取模式</guimenu>來調整軟體選擇。
     </para>
    </note>
   </step>
   <step>
    <para>
     如果所有設定都如您所願，請按一下<guimenu>更新</guimenu>啟動安裝與移除程序。
    </para>
   </step>
   <step>
    <para>
     成功完成升級過程後，請檢查是否有任何<quote>孤立的套件</quote>。孤立的套件是指不再屬於任何使用中的儲存庫的套件。以下指令可以列出這些套件︰
    </para>
<screen>zypper packages --orphaned</screen>
    <para>
     藉由此清單，您可以確定某個套件是否仍然需要，或者是否可以將其安全解除安裝。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-sle12-manager">
  <title>透過 SUSE Manager 進行更新</title>

  <para>
   SUSE Manager 是一個伺服器解決方案，用於提供適用於 SUSE Linux Enterprise 用戶端的更新、修補程式和安全性修正程式。它隨附一組工具和一個 Web 式使用者介面，用於執行管理任務。如需詳細資料，請參閱 <link xlink:href="https://www.suse.com/products/suse-manager/"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-reg-status-after-rollback">
  <title>復原後更新註冊狀態</title>

  <para>
   在執行 Service Pack 移轉時，有必要變更註冊伺服器上的組態，以便提供新儲存庫的存取權限。若移轉過程中斷或回復 (透過從備份或快照還原)，則有關註冊伺服器的資訊將與系統的狀態不一致。這可能會導致您無法存取更新儲存庫，或者導致在用戶端上使用錯誤的儲存庫。
  </para>

  <para>
   若透過 Snapper 進行復原，系統將會向註冊伺服器傳送通知，確保在開機過程中設定正確儲存庫的存取權限。若系統以其他任何方式還原，或者由於任何原因導致與註冊伺服器的通訊失敗 (例如由於網路問題而導致伺服器無法存取)，請透過調用以下指令在用戶端上觸發復原︰
  </para>

<screen><command>snapper</command> rollback</screen>

  <para>
   建議您始終使用以下指令檢查系統上是否已設定正確的儲存庫 (特別是在重新整理服務後)
  </para>

<screen><command>zypper</command> ref -s</screen>

  <para>
   此功能在 
   <package>rollback-helper </package>
   套件中可用。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-registersystem">


  <title>注册您的系統</title>

  <para>
   如果您在安裝期間跳過註冊步驟，日後可隨時使用 YaST 中的<guimenu>產品註冊</guimenu>模組來註冊您的系統。
  </para>

  <para>
   註冊系統可以獲得以下優勢：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     取得支援
    </para>
   </listitem>
   <listitem>
    <para>
     取得安全性更新和錯誤修復
    </para>
   </listitem>
   <listitem>
    <para>
     存取 SUSE Customer Center
    </para>
   </listitem>
  </itemizedlist>

  <procedure>
   <step>
    <para>
     啟動 YaST 並選取<menuchoice> <guimenu>軟體</guimenu> <guimenu>產品註冊</guimenu> </menuchoice>以開啟<guimenu>註冊</guimenu>對話方塊。
    </para>
   </step>
   <step>
    <para>
     提供與您或您的組織用於管理訂閱的 SUSE 帳戶關聯的<guimenu>電子郵件</guimenu>地址。如果您還沒有 SUSE 帳戶，請前往 SUSE Customer Center 首頁 (<link xlink:show="new" xlink:href="https://scc.suse.com/"/>) 建立一個帳戶。
    </para>
   </step>
   <step>
    <para>
     輸入與 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 副本一起收到的<guimenu>註冊代碼</guimenu>。
    </para>
   </step>
   <step xml:id="step-y2-register-final">
    <para>
     按<guimenu>下一步</guimenu>繼續，啟動註冊程序。如果您的網路上有一個或多個本地註冊伺服器可用，您可以從清單中選擇其中一個伺服器。您也可以選擇<guimenu>取消</guimenu>忽略本地註冊伺服器，註冊到預設的 SUSE 註冊伺服器。
    </para>
    <para>
     註冊期間，線上更新儲存庫將會新增到您的升級設定中。結束後，您可以選擇是否從更新儲存庫安裝最新可用的套件版本。這會為所有套件提供一個干淨的升級路徑，並確保使用可用的最新安全更新升級 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>。如果您選擇<guimenu>否</guimenu>，則所有套件將從安裝媒體安裝。按<guimenu>下一步</guimenu>繼續。
    </para>
    <para>
     成功註冊後，YaST 將列出系統可用的延伸、附加產品和模組。若要選取並安裝它們，請繼續<xref linkend="sec-add-ons-extensions"/>。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-sle12-multiversion">
  <title>保留核心套件</title>

  <remark>toms 2015-08-26: bsc#753809</remark> <remark>toms 2015-08-26: some parts are taken ("stolen") from the
      wiki at https://en.opensuse.org/SDB:Keep_multiple_kernel_versions
      and adapted
    </remark> <indexterm> <primary>多版本核心</primary> </indexterm>

  <para>
   使用 YaST 或 Zypper 安裝新核心時，SUSE Linux Enterprise 將會保留最後兩個核心和執行中的核心。通常情況下，這已經足夠了。
  </para>

  <para>
   但是，在某些情況下，您可能需要保留更多的核心版本 (例如用於測試)。為此，SUSE Linux Enterprise 支援<emphasis>多版本核心功能</emphasis>。啟用並設定此功能後，預設行為可以變更並設定為：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     只有在使用新核心成功將系統重新開機之後，才刪除舊核心
    </para>
   </listitem>
   <listitem>
    <para>
     保留指定數量的舊核心做為後援
    </para>
   </listitem>
   <listitem>
    <para>
     保留特定的核心版本
    </para>
   </listitem>
  </itemizedlist>

  <para>
   成功重新開機之後，有個程序檔會將已安裝核心之清單與 <filename>/etc/zypp/zypp.conf</filename> 中的設定進行比較，並刪除不再需要的核心。
  </para>

  <sect2 xml:id="sec-update-sle12-multiversion-enable">
   <title>啟用多版本核心功能</title>
   <para>
    組態檔案 <filename>/etc/zypp/zypp.conf</filename> 中定義了預設行為：
   </para>
<screen><prompt>root # </prompt><command>grep</command> ^multiversion /etc/zypp/zypp.conf
multiversion = provides:multiversion(kernel)
multiversion.kernels = latest,latest-1,running</screen>
   <para>
    移除上面 <literal>multiversion</literal> 行前面的井號 (#) 即可啟用此功能 (預設應已移除)。第二行用於設定需要保留<emphasis>哪些</emphasis>核心。您需要啟用這兩個選項，否則系統將會保留<emphasis>所有</emphasis>核心，這會填滿您的硬碟。
   </para>
   <para>
    <literal>multiversion.kernels</literal> 行可以包含採用不同組合方式與順序的多個關鍵字：
   </para>
   <variablelist>
    <varlistentry>
     <term><option>最新</option>
     </term>
     <listitem>
      <para>
       保留具有最高版本號碼的核心
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>latest-<replaceable>N</replaceable></option>
     </term>
     <listitem>
      <para>
       保留版本號碼排在第 <replaceable>N</replaceable> 位的核心；<replaceable>N</replaceable> 是從 1 開始的編號
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>執行</option>
     </term>
     <listitem>
      <para>
       保留目前執行中的核心
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>oldest</option>
     </term>
     <listitem>
      <para>
       保留具有最低版本號碼的核心 (所發佈產品上的核心)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>oldest-<replaceable>N</replaceable></option>
     </term>
     <listitem>
      <para>
       保留版本號碼排在倒數第 <replaceable>N</replaceable> 位的核心
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>3.12.28-4.6</option>
     </term>
     <listitem>
      <para>
       保留這個特定的核心版本
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-update-sle12-multiversion-deleteoldkernel">
   <title>使用案例：僅在重新開機後刪除舊核心</title>
   <para>
    您想要確定只在系統成功將新核心重新開機之後才刪除舊核心。
   </para>
   <para>
    變更 <filename>/etc/zypp/zypp.conf</filename> 中的以下行：
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    上面的參數告知系統要保留最新核心以及執行中的核心 (前提是兩者不同)。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-sle12-multiversion-fallback">
   <title>使用案例：保留舊核心做為後援</title>
   <para>
    您想要保留一或多個核心版本，以便有一或多個<quote>備用的</quote>核心。
   </para>
   <para>
    如果您需要使用核心進行測試，這種使用案例可能十分有用。如果某個地方出錯 (例如，您的機器不能開機)，您仍可以使用一或多個已知正常的核心版本。
   </para>
   <para>
    變更 <filename>/etc/zypp/zypp.conf</filename> 中的以下行：
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    在安裝新核心後，將系統重新開機時，系統會保留三個核心：新的執行中核心 (設定為 <literal>latest,running</literal>)、新核心的前一核心版本 (設定為 <literal>latest-1</literal>)，以及前一核心版本的先前版本 (設定為 <literal>latest-2</literal>)。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-sle12-multiversion-specificversion">
   <title>使用案例：保留特定的核心版本</title>
   <para>
    您要執行定期系統更新和安裝新的核心版本。但是，您還要出於各種原因編譯自己的核心版本，並要確定系統保留該版本。
   </para>
   <para>
    變更 <filename>/etc/zypp/zypp.conf</filename> 中的以下行：
   </para>
<screen>multiversion.kernels = latest,3.12.28-4.20,running</screen>
   <para>
    在安裝新核心後，將系統重新開機時，系統會保留兩個核心：新的執行中核心 (設定為 <literal>latest,running</literal>)，以及您自己編譯的核心 (設定為 <literal>3.12.28-4.20</literal>)。
   </para>
  </sect2>
 </sect1>
</chapter>
