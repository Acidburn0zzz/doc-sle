<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="sle_update_upgrading.xml" version="5.0" xml:id="cha-update-sle">
 <title>升级 SUSE Linux Enterprise</title>
 <info>
  <abstract>
   <para>
    SUSE® Linux Enterprise (SLE) 允许您将现有系统更新到新版本，例如，从 SLE 11 SP4 更新到 SLE 12。不需新安装。主目录和数据目录以及系统配置等现有数据将保持不变。您可以从本地 CD 或 DVD 驱动器或从中央网络安装源进行更新。
   </para>

   <para>
    本章介绍如何通过 DVD、网络、自动化过程或 SUSE Manager 手动升级 SUSE Linux Enterprise 系统。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec-update-prep">
  <title>一般准备工作</title>

  <para>
   在开始更新过程之前，请确保对您的系统进行适当的准备。这些准备工作包括备份数据，查看发行说明，以及其他工作。
  </para>

  <sect2 xml:id="sec-update-prep-multiversion">
   <title>暂时禁用内核多版本支持</title>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 允许在 <filename>/etc/zypp/zypp.conf</filename> 中启用相应设置来安装多个内核版本。要更新到服务包，需要暂时禁用对此功能的支持。当更新成功完成后，即可再次重新启用多版本支持。要禁用多版本支持，请对 <filename>/etc/zypp/zypp.conf</filename> 中的相应行加上注释。结果应如下所示：
   </para>
<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
   <para>
    要在成功更新后重新激活此功能，请去除注释符号。有关多版本支持的详细信息，请参见<xref linkend="cha-tuning-multikernel-enable"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-relnotes">
   <title>检查发行说明</title>
   <para>
    在发行说明中，您可以找到有关自 SUSE Linux Enterprise 的上一个版本发行后进行了哪些更改的其他信息。请在发行说明中确认您的特定硬件或设置是否需要考虑某些特殊注意事项、您喜爱的哪些特定软件包进行了大幅更改，以及除了本节中的一般性建议之外，您还应该采取哪些预防措施。发行说明还提供了无法及时编入本手册中的最新信息和已知问题。
   </para>
   <para>
    您可以在 <link xlink:href="http://www.suse.com/documentation/"/> 上在线阅读包含 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 最新信息的最新版发行说明文档。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-backup">
   <title>创建备份</title>
   <para>
    在更新之前，请将现有配置文件复制到单独一个媒体（如磁带设备、可卸硬盘等）上，用以备份数据。这主要适用于储存在 <filename>/etc</filename> 中的文件以及 <filename>/var</filename> 和 <filename>/opt</filename> 中的一些目录和文件。最好将 <filename>/home</filename>（<envar>HOME</envar> 目录）中的用户数据也写入备份媒体。以 <systemitem class="username">root</systemitem> 用户的身份备份此数据。仅 <systemitem class="username">root</systemitem> 用户对所有本地文件具有读许可权限。
   </para>
   <para>
    如果您已在 YaST 中选择<guimenu>更新现有系统</guimenu>作为安装模式，则可以选择在以后的某个时间执行（系统）备份。您可以选择包含所有已修改的文件以及 <filename>/etc/sysconfig</filename> 目录中的文件。但是，此备份尚不完整，因为缺少了上述所有其他重要目录。在 <filename>/var/adm/backup</filename> 目录中查找备份。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-mariadb">
   <title>迁移 MySQL 数据库</title>
   <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
   <para>
    从 SUSE Linux Enterprise 12 开始，SUSE 已从 MySQL 转移到 MariaDB。在开始任何升级操作之前，强烈建议您备份数据库。
   </para>

   <para>
    要进行数据库迁移，请执行以下操作：
   </para>
   <procedure>
    <step>
     <para>
      登录到 SUSE Linux Enterprise 11 计算机。
     </para>
    </step>
    <step>
     <para>
      创建转储文件:
     </para>
<screen><prompt>root # </prompt><command>mysqldump</command> -u root -p --all-databases &gt; mysql_backup.sql</screen>
     <para>
      默认情况下，<command>mysqldump</command> 不会转储 <literal>INFORMATION_SCHEMA</literal> 或 <literal>performance_schema</literal> 数据库。有关详细信息，请参见<link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>。
     </para>
    </step>
    <step>
     <para>
      将您的转储文件、配置文件 <filename>/etc/my.cnf</filename> 以及 <filename>/etc/mysql/</filename> 目录储存在安全位置，以供日后调查（<emphasis>不要</emphasis>用于安装！）。
     </para>
    </step>
    <step>
     <para>
      执行升级。升级后，以前的配置文件 <filename>/etc/my.cnf</filename> 仍将保持不变。新配置保存在 <filename>/etc/my.cnf.rpmnew</filename> 文件中。
     </para>
    </step>
    <step>
     <para>
      根据需要配置 MariaDB 数据库。<emphasis>不要</emphasis>使用以前的配置文件和目录，只是将其用作提醒，并对其进行改编。
     </para>
    </step>
    <step>
     <para>
      确保启动 MariaDB 服务器：
     </para>
<screen><prompt>root # </prompt><command>systemctl</command> start mysql</screen>
     <para>
      如果您希望每次引导时都启动 MariaDB 服务器，请启用以下服务：
     </para>
<screen><prompt>root # </prompt><command>systemctl</command> enable mysql</screen>

    </step>
    <step>
     <para>
      通过连接数据库来校验 MariaDB 是否正常运行：
     </para>
<screen><prompt>root # </prompt><command>mysql</command> -u root -p</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-postgresql">
   <title>迁移 PostgreSQL 数据库</title>
   <remark>toms 2015-09-09: FATE#319049</remark>
   <remark>Already reviewd by Reinhard</remark>
   <para>
    SLE11 SP3 和 SLE12 GA 将会通过维护更新获取较新版本的 PostgreSQL 数据库。由于需要完成数据库的迁移工作，因此无法使用自动升级过程。您需要手动完成从一个版本到另一个版本的转移。
   </para>
   <para>
    迁移过程通过使用 <command>pg_upgrade</command> 命令执行，这种方法可替代传统的转储和重新装载。与<quote>转储并重新装载</quote>方法相比，<command>pg_upgrade</command> 可以减少迁移耗费的时间。
   </para>
   <para>
    每个 PostgreSQL 版本将其文件储存在与版本相关的不同目录中。更新后，目录将更改为：
   </para>
   <variablelist>
    <varlistentry>
     <term>SLE11 SP3/SP4</term>
     <listitem>
      <para>
       从 <filename>/usr/lib/postgresql91/</filename> 更改为 <filename>/usr/lib/postgresql94/</filename>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SLE12 GA</term>
     <listitem>
      <para>
       从 <filename>/usr/lib/postgresql93/</filename> 更改为 <filename>/usr/lib/postgresql94/</filename>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    要进行数据库迁移，请执行以下操作：
   </para>
   <procedure>
    <step>
     <para>
      确保满足以下先决条件：
     </para>
     <itemizedlist>
      <listitem>
       <para>
        如果尚未通过维护更新将旧 PostgreSQL 版本的任何包升级到最新版本，请执行该操作。
       </para>
      </listitem>
      <listitem>
       <para>
        创建现有数据库的备份。
       </para>
      </listitem>
      <listitem>
       <para>
        安装新 PostgreSQL 主要版本的包。对于 SLE12，这意味着要安装
        <package>postgresql94-server</package>
        及其依赖的所有包。
       </para>
      </listitem>
      <listitem>
       <para>
        安装包
        <package>postgresql94-contrib，</package>
        其中包含命令 <command>pg_upgrade</command>。
       </para>
      </listitem>
      <listitem>
       <para>
        确保 PostgreSQL 数据区域（默认为 <filename>/var/lib/pgsql/data</filename>）中有足够的可用空间。如果空间不足，请对每个数据库使用以下 SQL 命令，以尝试减少大小（这可能需要花费很长时间！）：
       </para>
<screen>VACUUM FULL</screen>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      停止 PostgreSQL 服务器：
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      重命名旧数据目录：
     </para>
<screen><prompt>root # </prompt><command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
    </step>
    <step>
     <para>
      创建新数据目录：
     </para>
<screen><prompt>root # </prompt><command>mkdir</command> -p /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      如果您已更改旧版本中的配置文件，请将文件 <filename>postgresql.conf</filename>、<filename>pg_hba.conf</filename> 复制到新的 <filename>data</filename> 目录：
     </para>
<screen><prompt>root # </prompt><command>cp</command> /var/lib/pgsql/data.old/*.conf \
     /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      使用 <command>initdb</command> 手动初始化新的数据库实例，或者启动再停止 PostgreSQL 让数据库实例自动初始化：
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> start
<prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      开始迁移过程，并将 <replaceable>OLD</replaceable> 占位符替换为旧版本：
     </para>
<screen><prompt>root # </prompt><command>pg_upgrade</command> \
   --old-datadir "/var/lib/pgsql/data.old" \
   --new-datadir "/var/lib/pgsql/data" \
   --old-bindir "/usr/lib/postgresql<replaceable>OLD</replaceable>/bin/" \
   --new-bindir "/usr/lib/postgresql94/bin/"</screen>
    </step>
    <step>
     <para>
      启动新数据库实例：
     </para>
<screen><prompt>root # </prompt><command>/usr/sbin/rcpostgresql</command> start</screen>
    </step>
    <step>
     <para>
      检查迁移是否成功。没有通用的工具可用来自动执行此步骤。此项操作取决于您的用例，以及要测试的数量和内容。
     </para>
    </step>
    <step>
     <para>
      去除所有旧 PostgreSQL 包和旧数据目录：
     </para>
<screen><prompt>root # </prompt><command>zypper</command> search -s postgresql<replaceable>OLD</replaceable> | xargs zypper rm -u
<prompt>root # </prompt><command>rm</command> -rf /var/lib/pgsql/data.old</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-ssl">
   <title>创建用于 Java 应用程序的非 MD5 服务器证书</title>
   <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
   <para>
    从 SP1 更新到 SP2 期间，在安全性修复时禁用了基于 MD5 的证书。如果您之前创建的证书是 MD5 证书，请执行以下步骤重新创建证书：
   </para>
   
   <procedure>
    <step>
     <para>
      打开终端窗口并以 <systemitem class="username">root</systemitem> 身份登录。
     </para>
    </step>
    <step>
     <para>
      创建一个私用密钥：
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> genrsa -out server.key 1024</screen>
     <para>
      如果需要强密钥，请将 <literal>1024</literal> 取代为更大的数字，例如 <literal>4096</literal>。
     </para>
    </step>
    <step>
     <para>
      创建证书签名请求 (CSR)：
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> req -new -key server.key -out server.csr</screen>
    </step>
    <step>
     <para>
      对证书自我签名：
     </para>
     <screen><prompt>root # </prompt><command>openssl</command> x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</screen>
    </step>
    <step>
     <para>
      创建 PEM 文件：
     </para>
     <screen><prompt>root # </prompt><command>cat</command> server.key server.crt &gt; server.pem</screen>
    </step>
    <step>
     <para>将 <filename>server.crt</filename>、<filename>server.csr</filename>、<filename>server.key</filename> 和 <filename>server.pem</filename> 文件放在可在其中找到密钥的相应目录中。例如，对于 Tomcat，此目录为 <filename>/etc/tomcat/ssl/</filename>。
     </para>
    </step>
   </procedure>
  </sect2>
  
  <sect2 xml:id="sec-update-prep-vms">
   <title>关闭虚拟机 Guest</title>
   <para>
    如果您的计算机充当 KVM 或 Xen 的 VM 主机服务器，请确保在更新之前关闭所有正在运行的 VM Guest。否则，更新后您可能无法访问 guest。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-smt">
   <title>检查 SMT 客户端上的 <command>clientSetup4SMT.sh</command> 脚本</title>
   <para>
    要迁移针对 SMT 服务器注册的客户端操作系统，需要检查主机上的 <command>clientSetup4SMT.sh</command> 脚本是否为最新版本。较旧版 SMT 的 <command>clientSetup4SMT.sh</command> 无法管理 SMT 12 客户端。如果您在 SMT 服务器上定期应用软件增补程序，那么位于 <filename>&lt;SMT 主机名&gt;/repo/tools/clientSetup4SMT.sh</filename> 处的 <command>clientSetup4SMT.sh</command> 始终都是最新版本。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-disk">
  <title>磁盘空间</title>

  <para>
   从旧版本到新版本，软件的大小有<quote>增长</quote>的趋势。因此，在进行更新之前，请查看可用分区空间。如果怀疑磁盘空间不足，请在增加可用空间（例如，调整分区大小）之前保证数据安全。对于每个分区应该具有多少空间，没有一般的经验可以借鉴。空间要求取决于特定的分区配置文件和选定的软件。
  </para>

  <note>
   <title>在 YaST 中自动检查是否有足够空间</title>
   <para>
    更新过程中，YaST 会检查可用磁盘空间，并会在安装大小可能超过可用空间时对用户显示警告。在该情况下，执行更新会导致<emphasis>系统不可用</emphasis>！只有在您完全了解自己要进行的操作的情况下（通过事先测试），才能跳过警告继续更新。
   </para>
  </note>

  <sect2 xml:id="sec-update-disk-space">
   <title>检查非 Btrfs 文件系统上的磁盘空间</title>
   <para>
    使用 <command>df</command> 命令可列出可用磁盘空间。例如，在<xref linkend="aus-update-df"/>中，根分区为 <filename>/dev/sda3</filename>（作为 <filename>/</filename> 装入）。
   </para>
   <example xml:id="aus-update-df">
    <title>使用 <command>df -h</command> 列示信息</title>

<screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
   </example>
  </sect2>

  <sect2 xml:id="sec-update-disk-btrfs-on-root">
   <title>检查 Btrfs 根文件系统上的磁盘空间</title>
   <para>
    如果您在计算机上使用 Btrfs 作为根文件系统，请确保有足够的可用空间。可以使用以下两个命令来检查磁盘空间：
   </para>
<screen><prompt>root # </prompt><command>btrfs</command> filesystem df /
<prompt>root # </prompt><command>df</command> /</screen>
   <para>
    这两个命令的结果会显示类似的数字，指出已用了多少磁盘空间。但 Btrfs 和可用空间方面的问题在于，您不知道某个快照中参照或未参照哪些内容，您也无法计算某项更改需要占用多少磁盘空间。
   </para>
   <para>
    在最坏的情况下，升级需要占用当前根文件系统的整个磁盘空间（在不使用 <filename>/.snapshot</filename> 的情况下）。除了所有 Btrfs 文件系统以外，还应检查其他文件系统上的可用空间。以下建议已证实有用：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      包含 Btrfs 在内的所有文件系统需有足够的可用磁盘空间用于下载和安装大型 RPM。旧 RPM 的空间只会在新 RPM 安装之后释放。
     </para>
    </listitem>
    <listitem>
     <para>
      对于包含快照的 Btrfs，至少需要有当前安装任务所需的可用空间。建议在该文件系统上提供两倍于当前安装所需的可用空间。
     </para>
     <para>
      如果没有足够的可用空间，您可以尝试使用 <command>snapper</command> 删除旧快照，例如：
     </para>
<screen><prompt>root # </prompt><command>snapper</command> list
<prompt>root # </prompt><command>snapper</command> delete NUMBER</screen>
     <para>
      但这种做法并不总是有用。在迁移之前，大多数快照只会占用极少的空间。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-proc-prep-paths">
  <title>支持的 SLE 升级路径</title>

  <important>
   <title>不支持跨体系结构升级</title>
   <para>
    <emphasis>不</emphasis>支持跨体系结构升级！例如从 32 位版本的 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 升级到 64 位版本，或者从大字节序升级到小字节序。
   </para>
   <para>
    具体地说，<emphasis>不</emphasis>支持从 SLE 11 on POWER（大字节序）升级到 SLE 12 SP1 on POWER（新增：小字节序）。
   </para>
   <para>
    另外，由于 SUSE Linux Enterprise 12 只有 64 位版本，因此<emphasis>不</emphasis>支持从任何 32 位 SUSE Linux Enterprise 11 系统升级到 SUSE Linux Enterprise 12 和更高版本。
   </para>
  </important>

  <para>
   在执行任何迁移操作之前，请阅读<xref linkend="sec-update-prep"/>。
  </para>

  <variablelist>
   <varlistentry>
    <term>从 SUSE Linux Enterprise 10（任何服务包）升级</term>
    <listitem>
     <para>
      不支持直接迁移到 SUSE Linux Enterprise 12。建议使用全新安装方式。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>从 SUSE Linux Enterprise 11 GA、SP1 或 SP2 升级</term>
    <listitem>
     <para>
      不支持直接迁移到 SUSE Linux Enterprise 12。在升级到 SLE 12 之前，至少需要安装 SLE 11 SP3。
     </para>
     <para>
      如果您无法执行全新安装，则需要先从 SLE 11 GA 更新到 SP1，再从 SLE 11 SP1 更新到 SP2，然后从 SLE 11 SP2 更新到 SP3。<link xlink:href="https://www.suse.com/documentation/sles11/">《SUSE Linux Enterprise 11 部署指南》</link>中说明了这些步骤。
     </para>
     <para>
      然后，继续执行<xref linkend="sec-update-sle12"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>从 SUSE Linux Enterprise 11 SP3 或 SP4 升级</term>
    <listitem>
     <para>
      有关详细信息，请参见<xref linkend="sec-update-sle12"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>从 SUSE Linux Enterprise 12 升级到 SP1</term>
    <listitem>
     <para>
      有关详细信息，请参见<xref linkend="cha-update-spmigration"/>。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-update-sle12">
  <title>支持的 SUSE Linux Enterprise 升级方法</title>

  <remark>toms 2014-02-11: See FATEs #315969 and #313189</remark>

  <para>
   支持使用以下方法之一从 SUSE Linux Enterprise 11 SP3 升级到 SUSE Linux Enterprise 12、从 SUSE Linux Enterprise 11 SP3 升级到 SUSE Linux Enterprise 12 SP1，或者从 SUSE Linux Enterprise 11 SP4 升级到 SUSE Linux Enterprise 12 SP1：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec-update-sle12-manual" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec-update-sle12-automated" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-update-sle12-manual">
  <title>使用安装源从 SLE 11 SP3 手动升级到 SLE 12 SP1</title>

  <para>
   在升级系统之前，请先阅读<xref linkend="sec-update-prep"/>。
  </para>

  <para>
   要以这种方式升级系统，需要像全新安装时那样，从安装源引导。但是，当引导屏幕出现时，您需要选择<guimenu>升级</guimenu>（而不是<guimenu>安装</guimenu>）。要从中引导的安装源可以是下列其中一项：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     本地安装媒体（例如 DVD，或者 USB 大容量储存设备上的 ISO 映像）。有关详细指导，请参见<xref linkend="sec-update-sle12-manual-dvd"/>。
    </para>
   </listitem>
   <listitem>
    <para>
     网络安装源。您可以从本地媒体引导然后选择相应的网络安装类型，或者通过 PXE 引导。有关详细指导，请参见<xref linkend="sec-update-sle12-manual-network"/>。
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec-update-sle12-manual-dvd">
   <title>从安装媒体升级</title>
   <para>
    下面的过程举例说明了如何从 DVD 引导，不过，您也可以使用其他本地安装媒体，例如 USB 大容量储存设备上的 ISO 映像。如何选择引导方法以及从媒体启动系统取决于系统体系结构，以及计算机使用的是传统 BIOS 还是 UEFI。有关细节，请参见以下链接。
   </para>
   <procedure xml:id="pro-update-sle12-manual-dvd">
    <title>使用 DVD 从 SLE 11 SP3 手动升级到 SLE 12 SP1</title>
    <step>
     <para>
      插入 SUSE Linux Enterprise 12 SP1 安装媒体的 DVD 1 并引导计算机。<guimenu>欢迎</guimenu>屏幕即会显示，接着是引导屏幕。
     </para>
    </step>
    <step>
     <para>
      选择相应的引导方法以从媒体启动系统（请参见<xref linkend="sec-i-yast2-method"/>）。
     </para>
    </step>
    <step>
     <para>
      从媒体启动系统（请参见<xref linkend="sec-i-yast2-startup"/>）。
     </para>
    </step>
    <step>
     <para>
      按<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述继续执行升级过程。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-sle12-manual-network">
   <title>从网络安装源升级</title>
   <para>
    如果要从网络安装源开始升级，请确保符合以下要求：
   </para>
   <variablelist>
    <title>从网络安装源升级的要求</title>
    <varlistentry>
     <term>网络安装源</term>
     <listitem>
      <para>
       网络安装源已按照<xref linkend="cha-deployment-instserver"/>所述设置妥当。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>网络连接和网络服务</term>
     <listitem>
      <para>
       安装服务器与目标计算机的网络连接均正常。网络必须提供以下服务：名称服务、DHCP（可选，但通过 PXE 引导时需要）和 OpenSLP（可选）。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>安装媒体</term>
     <listitem>
      <para>
       您已准备好了用于引导目标系统的 SUSE Linux Enterprise DVD 1（或本地 ISO 映像），<emphasis>或者</emphasis>已按<xref linkend="sec-deployment-prep-boot-pxeprep" xrefstyle="HeadingOnPage"/>中所述，准备好了一个已设置为可通过 PXE 引导的目标系统。请参见<xref linkend="cha-deployment-remoteinst"/>，深入了解从远程服务器开始升级的相关信息。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    从网络安装源升级时，您可以从本地媒体引导然后选择相应的网络安装类型，或者通过 PXE 引导。选择所需的方法，并按<xref linkend="pro-update-sle12-manual-network-boot-from-dvd" xrefstyle="select:label"/> 或<xref linkend="pro-update-sle12-manual-network-pxe-boot" xrefstyle="select:label"/> 中所述继续。
   </para>
   <procedure xml:id="pro-update-sle12-manual-network-boot-from-dvd">
    <title>通过网络安装源从 SLE 11 SP3 或 SP4 手动升级到 SLE 12 SP1 - 从 DVD 引导</title>
    <para>
     此过程举例说明了如何从 DVD 引导，不过，您也可以使用其他本地安装媒体，例如 USB 大容量储存设备上的 ISO 映像。如何选择引导方法以及从媒体启动系统取决于系统体系结构，以及计算机使用的是传统 BIOS 还是 UEFI。有关细节，请参见以下链接。
    </para>
    <step>
     <para>
      插入 SUSE Linux Enterprise 12 SP1 安装媒体的 DVD 1 并引导计算机。<guimenu>欢迎</guimenu>屏幕即会显示，接着是引导屏幕。
     </para>
    </step>
    <step>
     <para>
      选择要使用的网络安装源类型（FTP、HTTP、NFS、SMB 或 SLP）。通常可以按 <keycap>F4</keycap> 选择此选项，但是，如果您计算机上装配的是 UEFI 而不是传统 BIOS，则可能需要手动调整引导参数。有关细节，请参见<xref linkend="cha-inst"/>中的<xref linkend="sec-i-yast2-source-net"/>。
     </para>
    </step>
    <step>
     <para>
      按<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述继续执行升级过程。
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-update-sle12-manual-network-pxe-boot">
    <title>通过网络安装源从 SLE 11 SP3 或 SP4 手动升级到 SLE 12 SP1 - 通过 PXE 引导</title>
    <para>
     要使用 PXE Boot 从网络安装源进行升级，请执行以下步骤：
    </para>
    <step>
     <para>
      调整 DHCP 服务器的设置以提供通过 PXE 引导所需的地址信息。有关细节，请参见<xref linkend="sec-deployment-prep-boot-pxeprep"/>。
     </para>
    </step>
    <step>
     <para>
      设置 TFTP 服务器，以保存通过 PXE 引导所需的引导映象。为此，请使用 SUSE Linux Enterprise  12 SP1 安装媒体的 DVD 1，或者遵循<xref linkend="sec-deployment-prep-boot-tftp"/>中的指导。
     </para>
    </step>
    <step>
     <para>
      在目标计算机上准备 PXE Boot 和局域网唤醒。
     </para>
    </step>
    <step>
     <para>
      对目标系统引导进行初始化，并用 VNC 远程连接到此计算机正运行的安装例程上。有关详细信息，请参见<xref linkend="sec-deployment-remoteinst-monitor-vnc"/>。
     </para>
    </step>
    <step>
     <para>
      按<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述继续执行升级过程。
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-sle12-automated">
  <title>从 SLE 11 SP3 或 SP4 自动迁移到 SLE 12 SP1</title>

  <para>
   在升级系统之前，请先阅读<xref linkend="sec-update-prep"/>。要执行自动迁移，请如下操作：
  </para>

  <procedure xml:id="pro-update-sle12-automated">
   <title>从 SUSE Linux Enterprise 11 SP3 自动迁移到 SUSE Linux Enterprise 12SP1</title>
   <remark>toms 2014-03-19: See FATE#315037</remark>
   <remark role="future">toms 2014-03-20: From SLE12 SP1 on, we should probably base
    this example on GRUB2, but not for GA.</remark>
   <remark>jsrain 2015-09-02: This is still the old system; at some point
       of time we should switch to GRUB2, but as long as amjority of
       customers still runs SLE11, I would stay with legacy GRUB. Anyway, we
       could include both op6tions, that would be probably best solution</remark>
   <step>
    <para>
     将第一张安装 DVD 中 <filename>/boot/x86_64/loader/</filename> 目录下的安装内核 <filename>linux</filename> 和 <filename>initrd</filename> 文件复制到系统的 <filename>/boot</filename> 目录：
    </para>
<screen><command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/linux /boot/linux.upgrade
<command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/initrd /boot/initrd.upgrade</screen>
    <para>
     <replaceable>DVDROOT</replaceable> 表示系统装入 DVD 的路径，通常为 <filename>/run/media/$USER/$DVDNAME</filename>。
    </para>
   </step>
   <step>
    <para>
     打开 GRUB 旧配置文件 <filename>/boot/grub/menu.lst</filename>，另外添加一部分。对于其他引导加载程序，编辑相应的配置文件。相应地调整设备名称和 <parameter>root </parameter> 参数。例如：
    </para>
<screen>title Linux Upgrade Kernel
kernel (hd0,0)/boot/linux.upgrade root=/dev/sda1 upgrade=1 <replaceable>OPTIONAL_PARAMETERS</replaceable>
initrd (hd0,0)/boot/initrd.upgrade</screen>
    <para>
     <replaceable>OPTIONAL_PARAMETERS</replaceable> 表示您引导系统和执行升级时可能需要的其他引导参数。它们可能是系统需要的内核参数 - 请确认您是否需要从现有 GRUB 项中查看并复制这些参数。它们还可能是 SUSE <link xlink:href="http://en.opensuse.org/Linuxrc">linuxrc 参数（在线提供了说明）</link>。
    </para>
   </step>
   <step>
    <para>

     如果升级应自动执行，请在 GRUB 配置中 <option>kernel</option> 这行的末尾添加 <literal>autoupgrade=1</literal>。
    </para>
   </step>
   <step>
    <para>
     重引导计算机，并从引导菜单（这里是 <emphasis>Linux 升级内核</emphasis>）中选择新添加的部分。您可以使用 <command>grubonce</command> 预先选择新创建的 GRUB 项，以便以无人照管方式自动重引导到新创建的项。您也可以在命令行中使用 <command>reboot</command> 来启动重引导。
    </para>
   </step>
   <step>
    <para>
     按<xref linkend="sec-update-sle12-start-upgr-after-boot"/>中所述继续执行一般的升级过程。
    </para>
   </step>
   <step>
    <para>
     升级过程成功完成后，去除安装内核和 initrd 文件（<filename>/boot/linux.upgrade</filename> 和 <filename>/boot/initrd.upgrade</filename>）。现在不再需要这些文件。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-sle12-start-upgr-after-boot">
  <title>引导后开始升级过程</title>

  <para>
   <remark>taroth 2014-11-13: argh, the following is terminology hell regarding
     the software strings: "upgrade"/"update" are used intermittently and
     without clear differentiation...</remark>
  </para>

  <procedure>
   <step>
    <para>
     （从安装媒体或网络）引导后，请在引导屏幕上选择<guimenu>升级</guimenu>这一项。
    </para>
    <warning>
     <title>不当的选择可能会导致数据丢失</title>
     <para>
      如果您选择<guimenu>安装</guimenu>而不是<guimenu>升级</guimenu>，之后数据可能会丢失。在全新安装过程中，您需要格外小心，不要损坏数据分区。例如，重新分割磁盘（这可能会损坏现有分区）或重新格式化数据分区（这会清除分区上的所有数据）都会损坏数据分区。
     </para>
     <para>
      请务必在此处选择<guimenu>升级</guimenu>。
     </para>
    </warning>
    <para>
     YaST 将启动安装系统。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>欢迎</guimenu>屏幕上选择<guimenu>语言</guimenu>和<guimenu>键盘</guimenu>，并接受许可协议。单击<guimenu>下一步</guimenu>继续。
    </para>
    <para>
     YaST 将检查您的分区上是否已安装 SUSE Linux Enterprise 系统。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>选择升级</guimenu>屏幕上，选择要升级的分区，然后单击<guimenu>下一步</guimenu>。
    </para>
    <para>
     YaST 将会装入选定的分区，并显示在您要升级的分区上找到的所有储存库。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>以前使用过的储存库</guimenu>屏幕上，调整储存库的状态：启用您要包含在升级过程中的储存库，并禁用不再需要的所有储存库。单击<guimenu>下一步</guimenu>继续。
    </para>
   </step>
   <step>
    <para>
     在<guimenu>注册</guimenu>屏幕上，选择是要立即注册已升级的系统（输入您的注册数据并单击<guimenu>下一步</guimenu>），还是要<guimenu>跳过注册</guimenu>。有关注册系统的细节，请参见<xref linkend="sec-update-registersystem"/>。
    </para>
   </step>
   <step>
    <para>
     复查有关升级的<guimenu>安装设置</guimenu>，尤其是<guimenu>更新选项</guimenu>。在以下选项之间进行选择：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <guimenu>仅更新已安装的包</guimenu>，如果选择此选项，您可能会失去最新 SUSE Linux Enterprise 版本随附的新功能。
      </para>
     </listitem>
     <listitem>
      <para>
       <guimenu>安装新软件和功能以执行更新</guimenu>。如果要根据具体需要启用或禁用模式与包，请单击<guimenu>选择模式</guimenu>。
      </para>
     </listitem>
    </itemizedlist>

    <note>
     <title>桌面选择</title>
     <para>
      如果在升级到 SUSE Linux Enterprise 12 之前，您使用的是 KDE<varname>（</varname> <filename>/etc/sysconfig/windowmanager</filename> 中的 DEFAULT_WM 设置为 <literal>kde*</literal>），则在升级后，您的桌面环境将被自动替换为 GNOME。默认情况下，KDM 显示管理器将被替换为 GDM。
     </para>
     <para>
      要更改使用的桌面环境或窗口管理器，请单击<guimenu>选择模式</guimenu>来调整软件选择。
     </para>
    </note>
   </step>
   <step>
    <para>
     如果所有设置都符合您的需要，请单击<guimenu>更新</guimenu>开始安装与去除过程。
    </para>
   </step>
   <step>
    <para>
     升级过程成功完成后，检查是否存在任何<quote>孤立的包</quote>。孤立的包是指不再属于活动储存库的包。以下命令可以列出这些包：
    </para>
<screen>zypper packages --orphaned</screen>
    <para>
     借助该列表，您可以决定是仍需要该包还是可以将其安全卸装。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-sle12-manager">
  <title>通过 SUSE Manager 更新</title>

  <para>
   SUSE Manager 是一个服务器解决方案，用于提供适用于 SUSE Linux Enterprise 客户端的更新、增补程序和安全修复。它随附了一套工具和基于 Web 的用户界面，用于执行管理任务。有关详细信息，请参见<link xlink:href="https://www.suse.com/products/suse-manager/"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-reg-status-after-rollback">
  <title>回滚后更新注册状态</title>

  <para>
   执行服务包迁移时，必须更改注册服务器上的配置才能提供对新储存库的访问。如果迁移过程中断或还原（通过从备份或快照恢复），注册服务器上的信息就会与系统状态不一致。这样可能会导致您无法访问更新储存库，或是在客户端上使用错误的储存库。
  </para>

  <para>
   如果回滚是通过 Snapper 完成的，系统会通知注册服务器以确保在引导过程中设置对正确储存库的访问信息。如果系统用任何其他方式恢复，或出于某种原因与注册服务器的通讯失败（例如，由于服务器因网络问题而无法访问），请调用以下命令在客户端上手动触发回滚：
  </para>

<screen><command>snapper</command> rollback</screen>

  <para>
   我们建议始终检查系统上是否设置了正确的储存库，特别是使用以下命令刷新服务后：
  </para>

<screen><command>zypper</command> ref -s</screen>

  <para>
   此功能在
   <package>rollback-helper</package>
   包中提供。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-registersystem">


  <title>注册您的系统</title>

  <para>
   如果您在安装期间跳过了注册步骤，以后可随时使用 YaST 中的<guimenu>产品注册</guimenu>模块来注册您的系统。
  </para>

  <para>
   注册系统可以获得以下优势：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     获取支持
    </para>
   </listitem>
   <listitem>
    <para>
     获取安全更新和 Bug 修复
    </para>
   </listitem>
   <listitem>
    <para>
     访问 SUSE Customer Center
    </para>
   </listitem>
  </itemizedlist>

  <procedure>
   <step>
    <para>
     启动 YaST 并选择<menuchoice><guimenu>软件</guimenu> <guimenu>产品注册</guimenu></menuchoice>以打开<guimenu>注册</guimenu>对话框。
    </para>
   </step>
   <step>
    <para>
     提供与您或您的组织管理订阅时所用的 SUSE 帐户关联的<guimenu>电子邮件</guimenu>地址。如果您没有 SUSE 帐户，请转到 SUSE Customer Center 主页 (<link xlink:show="new" xlink:href="https://scc.suse.com/"/>) 创建一个帐户。
    </para>
   </step>
   <step>
    <para>
     输入与 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 副本一同收到的<guimenu>注册代码</guimenu>。
    </para>
   </step>
   <step xml:id="step-y2-register-final">
    <para>
     单击<guimenu>下一步</guimenu>继续，启动注册过程。如果您的网络中有一个或多个本地注册服务器可用，您可以从列表中选择一个。或者，可以选择<guimenu>取消</guimenu>忽略本地注册服务器，使用默认的 SUSE 注册服务器注册。
    </para>
    <para>
     注册过程中，联机更新储存库会添加到您的升级设置中。此过程完成后，您可以选择是否安装来自更新储存库的最新可用包版本。这会为所有包提供一个干净的升级路径，并确保 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 通过最新的可用安全更新进行升级。如果您选择<guimenu>否</guimenu>，则所有包都是从安装媒体安装。单击<guimenu>下一步</guimenu>继续。
    </para>
    <para>
     成功注册后，YaST 会列出系统可用的扩展、外接式附件和模块。要选择并安装所列的项，请继续<xref linkend="sec-add-ons-extensions"/>。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-sle12-multiversion">
  <title>保留内核包</title>

  <remark>toms 2015-08-26: bsc#753809</remark> <remark>toms 2015-08-26: some parts are taken ("stolen") from the
      wiki at https://en.opensuse.org/SDB:Keep_multiple_kernel_versions
      and adapted
    </remark> <indexterm> <primary>多版本内核</primary> </indexterm>

  <para>
   使用 YaST 或 Zypper 安装新内核时，SUSE Linux Enterprise 将保留最后两个内核和正在运行的内核。通常这样就足够了。
  </para>

  <para>
   但是，在某些情况下，您可能需要保留更多的内核版本（例如用于测试）。为了帮助您实现此目的，SUSE Linux Enterprise 支持<emphasis>多版本内核功能</emphasis>。启用并配置此功能后，默认行为可以更改并配置为：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     仅在使用新内核成功重引导系统之后，才删除旧内核
    </para>
   </listitem>
   <listitem>
    <para>
     保留指定数量的旧内核作为后备
    </para>
   </listitem>
   <listitem>
    <para>
     保留特定的内核版本
    </para>
   </listitem>
  </itemizedlist>

  <para>
   成功重引导之后，有一个脚本会将已安装内核列表与 <filename>/etc/zypp/zypp.conf</filename> 中的设置进行比较，并删除不再需要的内核。
  </para>

  <sect2 xml:id="sec-update-sle12-multiversion-enable">
   <title>启用多版本内核功能</title>
   <para>
    配置文件 <filename>/etc/zypp/zypp.conf</filename> 中定义了默认行为：
   </para>
<screen><prompt>root # </prompt><command>grep</command> ^multiversion /etc/zypp/zypp.conf
multiversion = provides:multiversion(kernel)
multiversion.kernels = latest,latest-1,running</screen>
   <para>
    去除上面 <literal>multiversion</literal> 行前面的井号标记 (#) 即可启用此功能（默认情况下应已去除）。第二行用于配置需要保留<emphasis>哪些</emphasis>内核。这两行都需要启用，否则系统将保留<emphasis>所有</emphasis>内核，这会填满您的硬盘。
   </para>
   <para>
    <literal>multiversion.kernels</literal> 行可以包含采用不同组合方式与顺序的多个关键字：
   </para>
   <variablelist>
    <varlistentry>
     <term><option>最新</option>
     </term>
     <listitem>
      <para>
       保留具有最高版本号的内核
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>latest-<replaceable>N</replaceable></option>
     </term>
     <listitem>
      <para>
       保留版本号为第 <replaceable>N</replaceable> 高的内核；<replaceable>N</replaceable> 是从 1 开始的编号
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>运行</option>
     </term>
     <listitem>
      <para>
       保留当前正在运行的内核
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>oldest</option>
     </term>
     <listitem>
      <para>
       保留具有最低版本号的内核（所发布产品上的内核）
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>oldest-<replaceable>N</replaceable></option>
     </term>
     <listitem>
      <para>
       保留版本号为第 <replaceable>N</replaceable> 低的内核
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>3.12.28-4.6</option>
     </term>
     <listitem>
      <para>
       保留这个特定的内核版本
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-update-sle12-multiversion-deleteoldkernel">
   <title>用例：仅在重引导后删除旧内核</title>
   <para>
    您想要确保只在系统成功重引导新内核之后才删除旧内核。
   </para>
   <para>
    更改 <filename>/etc/zypp/zypp.conf</filename> 中的下面一行：
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    上面的参数告知系统要保留最新内核以及正在运行的内核（前提是两者不同）。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-sle12-multiversion-fallback">
   <title>用例：保留旧内核作为后备</title>
   <para>
    您想要保留一个或多个内核版本，以便有一个或多个<quote>备用的</quote>内核。
   </para>
   <para>
    如果您需要使用内核进行测试，这种用例可能十分有用。如果出现了某个故障（例如，您的计算机不能引导），您仍可以使用一个或多个已知正常的内核版本。
   </para>
   <para>
    更改 <filename>/etc/zypp/zypp.conf</filename> 中的下面一行：
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    在安装新内核后重引导系统时，系统将保留三个内核：新的且正在运行的内核（配置为 <literal>latest,running</literal>）、新内核的前一内核版本（配置为 <literal>latest-1</literal>）以及前一内核版本的前一版本（配置为 <literal>latest-2</literal>）。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-sle12-multiversion-specificversion">
   <title>用例：保留特定的内核版本</title>
   <para>
    您要执行定期系统更新和安装新的内核版本。但是，出于各种原因，您还要编译自己的内核版本，并想要确保系统保留该版本。
   </para>
   <para>
    更改 <filename>/etc/zypp/zypp.conf</filename> 中的下面一行：
   </para>
<screen>multiversion.kernels = latest,3.12.28-4.20,running</screen>
   <para>
    在安装新内核后重引导系统时，系统将保留两个内核：新的且正在运行的内核（配置为 <literal>latest,running</literal>），以及您自己编译的内核（配置为 <literal>3.12.28-4.20</literal>）。
   </para>
  </sect2>
 </sect1>
</chapter>
