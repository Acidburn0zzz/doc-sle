<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="tuning_multikernel.xml" id="cha.tuning.multikernel">
 <title>Instalación de varias versiones del núcleo</title>
 <abstract>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> admite la instalación en paralelo de varias versiones del núcleo. Al instalar un segundo núcleo, se crean automáticamente una entrada de arranque y un initrd, por lo que no es necesaria realizar más configuración manual. Al rearrancar el equipo, el núcleo recién añadido estará disponible como opción de arranque adicional.
  </para>

  <para>
   Mediante esta función, es posible probar con seguridad las actualizaciones del núcleo y volver en cualquier momento al núcleo anterior. Para ello, no debe usar las herramientas de actualización (como YaST Online Update o el applet de actualización), sino que debe seguir el proceso descrito en este capítulo.
  </para>
 </abstract>
 <warning>

  <title>derecho de asistencia técnica</title>
  <para>
   Tenga en cuenta que perderá todo el derecho de asistencia técnica para el equipo al instalar un núcleo autocompilado o de otros fabricantes. Solo se admiten los núcleos incluidos con <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> y los núcleos proporcionados a través de los canales de actualización oficiales para <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>.
  </para>
 </warning>
 <tip>
  <title>compruebe el núcleo de configuración del cargador de arranque</title>
  <para>
   Se recomienda comprobar la configuración del cargador de arranque después de instalar otro núcleo a fin de establecer la entrada de arranque por defecto deseada. Consulte la <xref linkend="sec.grub2.yast2.config"/> para obtener más información. 
  </para>
 </tip>
 <sect1 id="cha.tuning.multikernel.enable">
  <title>Habilitación y configuración de la compatibilidad multiversión</title>

  
  <para>
   La instalación de varias versiones de un paquete de software (compatibilidad multiversión) no está habilitada por defecto en SUSE Linux Enterprise 12. Para verificar este valor, realice este procedimiento:
  </para>

  <procedure>
   <step performance="required">
    <para>
     Abra <filename>/etc/zypp/zypp.conf</filename> con el editor que desee como usuario <systemitem class="username">Root</systemitem>.
    </para>
   </step>
   <step performance="required">
    <para>
     Busque la cadena <literal>multiversion</literal>. Si la multiversión está habilitada para todos los paquetes de núcleo compatibles con esta función, se muestra la siguiente línea sin marcas de comentario:
    </para>
<screen>multiversion = provides:multiversion(kernel)</screen>
   </step>
   <step performance="required">
    <para>
     Para restringir la compatibilidad multiversión a versiones concretas del núcleo, añada los nombres de paquetes en forma de lista separada por comas a la opción <literal>multiversion</literal> de <filename>/etc/zypp/zypp.conf</filename>; por ejemplo:
    </para>
<screen>multiversion = kernel-default,kernel-default-base,kernel-source</screen>
   </step>
   <step performance="required">
    <para>
     Guarde los cambios.
    </para>
   </step>
  </procedure>

  <warning>
   <title>Paquetes de módulo de núcleo (KMP)</title>
   <para>
    Asegúrese de que los módulos de núcleo necesarios proporcionados por el proveedor (los paquetes de módulo de núcleo) también están instalados para el nuevo núcleo actualizado. El proceso de actualización del núcleo no advierte sobre si faltan módulos del núcleo, ya que el núcleo anterior que permanece en el sistema sigue cumpliendo los requisitos del paquete.
   </para>
  </warning>

  <sect2 id="cha.tuning.multikernel.enable.keep">
   <title>Supresión automática de núcleos no utilizados</title>
   <para>
    Si se prueban con frecuencia nuevos núcleos con la compatibilidad multiversión habilitada, el menú de arranque no tarda en empezar a confundirse. Dado que la partición <filename>/boot</filename> suele disponer de espacio limitado, también puede haber problemas de desbordamiento de <filename>/boot</filename>. Aunque es posible suprimir versiones no utilizadas del núcleo de forma manual con YaST o Zypper (como se describe más abajo), también puede configurar <systemitem class="library">libzypp</systemitem> para suprimir de forma automática núcleos que ya no se usen. Por defecto, no se suprime ningún núcleo.
   </para>
   <procedure>
    <step performance="required">
     <para>
      Abra <filename>/etc/zypp/zypp.conf</filename> con el editor que desee como usuario <systemitem class="username">Root</systemitem>.
     </para>
    </step>
    <step performance="required">
     <para>
      Busque la cadena <literal>multiversion.kernels</literal> y active esta opción quitando la marca de comentario de la línea. Esta opción recibe una lista separada por comas de los siguientes valores:
     </para>
     <formalpara>
      <title><literal><replaceable>3.12.24-7.1</replaceable></literal>:</title>
      <para>
       conserva el núcleo con el número de versión especificado.
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest</literal>:</title>
      <para>
       conserva el núcleo con el número de versión más alto.
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest-N</literal>:</title>
      <para>
       conserva el núcleo con el enésimo (N) número de versión más alto.
      </para>
     </formalpara>
     <formalpara>
      <title><literal>running</literal>:</title>
      <para>
       conserva el núcleo en ejecución.
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest</literal>:</title>
      <para>
       conserva el núcleo con el número de versión más bajo (el que se incluía de forma original con <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>).
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest+N</literal></title>
      <para>
       conserva el núcleo con el enésimo (N) número de versión más bajo.
      </para>
     </formalpara>
     <para>
      Estos son algunos ejemplos:
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,running</literal>
       </term>
       <listitem>
        <para>
         Conserva el núcleo más reciente y el que se está ejecutando actualmente. Es similar a no habilitar la función de multiversión, excepto en que el núcleo antiguo se elimina <emphasis>después del próximo rearranque</emphasis> y no inmediatamente después de la instalación.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,latest-1,running</literal>
       </term>
       <listitem>
        <para>
         Conserva los dos núcleos más recientes y el que se está ejecutando actualmente.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal> multiversion.kernels = latest,running,<replaceable>3.12.25.rc7-test</replaceable></literal>
       </term>
       <listitem>
        <para>
         Conserva el núcleo más reciente, el que se está ejecutando y la versión <replaceable>3.12.25.rc7-test</replaceable>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <tip>
      <title>conservación del núcleo <literal>en ejecución</literal></title>
      <para>
       a no ser que use configuraciones especiales, es probable que desee conservar siempre el núcleo <literal>en ejecución.</literal> Si no va a conservar el núcleo en ejecución, se suprimirá si se actualiza el núcleo. Esto, a su vez, obliga a que se reinicie el sistema de inmediato después de la actualización, ya que los módulos del núcleo que se está ejecutando ya no se pueden cargar al haberse suprimido.
      </para>
     </tip>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 id="cha.tuning.multikernel.yast">
  <title>Instalación y eliminación de varias versiones del núcleo con YaST</title>

  <procedure>
   <step performance="required">
    <para>
     Inicie YaST y abra el gestor de software con la opción <menuchoice> <guimenu>Software</guimenu> <guimenu>Gestión de software</guimenu> </menuchoice>.
    </para>
   </step>
   <step performance="required">
    <para>
     Muestre todos los paquetes que admiten varias versiones. Para ello, seleccione <menuchoice> <guimenu>Ver</guimenu> <guimenu>Grupos de paquetes</guimenu> <guimenu>Paquetes multiversión</guimenu> </menuchoice>.
    </para>
    <figure>
     <title>gestor de software de YaST, vista multiversión</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step performance="required">
    <para>
     Seleccione un paquete y abra su pestaña <guimenu>Versión</guimenu> en el panel de abajo a la izquierda.
    </para>
   </step>
   <step performance="required">
    <para>
     Para instalar un paquete, haga clic en su casilla de verificación. Una marca de verificación verde indica que está seleccionado para instalarse.
    </para>
    <para>
     Para eliminar un paquete ya instalado (marcado con una marca de verificación blanca), haga clic en su casilla de verificación hasta que aparezca una <literal>X</literal> roja que indica que se ha seleccionado para eliminarse.
    </para>
   </step>
   <step performance="required">
    <para>
     Haga clic en <guimenu>Aceptar</guimenu> para iniciar la instalación.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="cha.tuning.multikernel.zypper">
  <title>Instalación y eliminación de varias versiones del núcleo con Zypper</title>

  <procedure>
   <step performance="required">
    <para>
     Use el comando <command>zypper se -s 'kernel*'</command> para mostrar una lista de todos los paquetes de núcleos disponibles:
    </para>
<screen><?dbsuse-fo font-size="7pt"?>

S | Name           | Type       | Version         | Arch   | Repository        
--+----------------+------------+-----------------+--------+-------------------
v | kernel-default | package    | 2.6.32.10-0.4.1 | x86_64 | Alternative Kernel
i | kernel-default | package    | 2.6.32.9-0.5.1  | x86_64 | (System Packages) 
  | kernel-default | srcpackage | 2.6.32.10-0.4.1 | noarch | Alternative Kernel
i | kernel-default | package    | 2.6.32.9-0.5.1  | x86_64 | (System Packages)
...</screen>
   </step>
   <step performance="required">
    <para>
     Especifique la versión exacta durante la instalación:
    </para>
<screen>zypper in kernel-default-2.6.32.10-0.4.1</screen>
   </step>
   <step performance="required">
    <para>
     Para desinstalar un núcleo, use los comandos <command>zypper se -si 'kernel*'</command> para mostrar todos los núcleos instalados y <command>zypper rm <replaceable>NOMBREPAQUETE-VERSIÓN</replaceable></command> para eliminar el paquete.
    </para>
   </step>
  </procedure>
 </sect1>
</chapter>
