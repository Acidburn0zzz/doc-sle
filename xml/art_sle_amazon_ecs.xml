<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>

<!DOCTYPE article 
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>

<article xml:id="article.vt.best.practices" xml:lang="en" version="5.0"
  xmlns="http://docbook.org/ns/docbook" 
  xmlns:xi="http://www.w3.org/2001/XInclude" 
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <?suse-quickstart color="suse"?>
 <title>SUSE Linux Enterprise in the Public Cloud</title>
 <subtitle>Amazon EC2 Container Service</subtitle>
 <info>
  <productnumber>&productnumber;</productnumber><productname>&productname;</productname><date>
  <?dbtimestamp format="B d, Y" ?></date>
 <abstract>
   <para>
    <link xlink:href="https://aws.amazon.com/ecs/">Amazon EC2 Container Service (ECS)</link>
    is a container management service that provides a set of APIs for
    scheduling container workloads across EC2 clusters.
   </para>
   <para>
    SUSE Linux Enterprise 12 images with the
    <emphasis role="strong">ecs</emphasis> TLA in the image name are designed
    to integrate with the Amazon EC2 Container service. The image contains
    an agent that interacts with Docker to start/stop new containers and
    gather information about running containers. The agent is fully
    integrated with SUSE Linux Enterprise.
   </para>
 </abstract>
 </info>

 <sect1 xml:id="cluster-setup">
    <title>Cluster setup</title>
    <para>
      Creating a new ECS cluster in Amazon is accomplished by using the
      <link xlink:href="https://console.aws.amazon.com/ecs/home#/firstRun">First
      Run Wizard.</link> Alternatively you may use the
      <emphasis role="strong">aws</emphasis> command line tools to
      <link xlink:href=http://docs.aws.amazon.com/cli/latest/reference/ecs/create-cluster.html">create</link>
      the cluster. In the First Run Wizard select
      <emphasis role="strong">Custom</emphasis> if you want to create a
      setup unique to your own needs. The
      <emphasis role="strong">Amazon ECS sample</emphasis> selection creates
      a pre-defined web application setup, that may be customized. By default
      the First Run Wizard selects the Amazon ECS AMI, we will change this
      later. Note that using the First Run Wizard also creates an autoscaling
      group. This implies that at least one instance (default setting) is
      always running and a new instance will be started by the autoscaling
      group if the running instance should be stopped or terminated.
    </para>
    <para>
      We recommend retaining the default cluster name
      <emphasis role="strong">default</emphasis>. When the cluster is named
      <emphasis role="strong">default</emphasis> an ECS instance will
      automatically attach itself to the cluster without additional
      configuration steps. Selecting a custom name for the cluster
      requires the instance to be configured as outlined in the
      <xref linkend="alternative-cluster-name"/> section below.
    </para>
 </sect1>
 <sect1 xml:id="ecs-instance-role">
    <title>ECS instance role</title>
    <para>
      Use of the Amazon EC2 Container Service requires permissions that
      are not enabled by default in the Identity and Access Management
      (IAM) functionality. Therefore it is necessary to create a policy
      that provides users that are intended to use ECS with the proper
      permissions. We recommend the following policy:
    </para>
    <screen>{
      "Version": "2012-10-17",
      "Statement": [
          {
              "Effect": "Allow",
              "Action": [
                  "ecs:CreateCluster",
                  "ecs:DeregisterContainerInstance",
                  "ecs:DiscoverPollEndpoint",
                  "ecs:Poll",
                  "ecs:RegisterContainerInstance",
                  "ecs:Submit*",
                  "ecs:StartTask",
                  "ecs:DescribeTasks",
                  "ecs:StopTask",
                  "ecs:RegisterTaskDefinition",
                  "ecs:DescribeTaskDefinition",
                  "ecs:DescribeContainerInstances",
                  "ecs:StartTelemetrySession"
              ],
              "Resource": [
                  "*"
              ]
          }
      ]
    }
    </screen>
    <para>
      For additional information about IAM policies please refer to the
      Amazon documentation: <link xlink:href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/IAM_policies.html">IAM Policies</link>
    </para>
    <para>
      Once the policy is created attach it to a role named
      <emphasis role="strong">ecsInstanceRole</emphasis>. Details about
      ECS specific policies and roles can be found in the Amazon documentation:
      <link xlink:href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/instance_IAM_role.html">IAM Role</link>
    </para>
    <para>
      Note that the policy given above is more permissive than the
      policy example provided in the Amazon documentation.
    </para>
 </sect1>
 <sect1 xml:id="attach-sles12-ecs-instances-to-the-cluster">
    <title>Attach SLES12 ECS instances to the cluster</title>
    <para>
      Once the cluster is up and running and your AWS account provides a
      permissive IAM role for ECS, you can continue to run ECS instances
      as follows:
    </para>
    <orderedlist>
      <listitem>
        <para>
          Find the latest SLES12 ECS ami using
          <link xlink:href="https://www.suse.com/communities/conversations/tag/pint"
            >pint</link>
        </para>
        <screen>$ pint amazon images --active --filter 'name~ecs'</screen>
      </listitem>
      <listitem>
        <para>
          Run as many instances of the above ami as required for your
          cluster. Remember to select the ECS role when launching the
          instance.
        </para>
        <para>
          You may use the Amazon EC2 Web Console to launch instances.
          The SUSE Linux Enterprise Server ECS images are found in the
          so called General Catalog. From the
          <emphasis role="strong">Instances</emphasis> view select
          <emphasis role="strong">Launche Instance</emphasis>. In the left
          column select the <emphasis role="strong">Community AMIs</emphasis>
          tab. Check the <emphasis role="strong">SUSE Linux</emphasis> box
          on the left and enter <emphasis role="strong">ecs</emphasis> into
          the search box. When configuring the instance parameters in the
          <emphasis role="strong">Configure Instance Details</emphasis> view
          select the <emphasis role="strong">ecsInstanceRole</emphasis> as
          the IAM role. Then launch the instance.
        </para>
        <para>
          Alternatively you can use the aws command line tool to
          <link xlink:href="http://docs.aws.amazon.com/cli/latest/reference/ec2/run-instances.html">run</link>
          instances.
        </para>
        <screen>$ aws ec2 run-instances --image-id IMAGE_ID_SEE_PINT_OUTPUT --region EC2_REGION_NAME --key-name SSH_KEY_PAIR_NAME --instance-type DESIRED_INSTANCE_TYPE --subnet-id SUBNET_ID --iam-instance-profile 'Arn=PROFILE_PATH'</screen>
        <para>
          The PROFILE_PATH may be obtained by querying the IAM service.
        <para>
        <screen>$ aws iam list-instance-profiles</screen>
        <para>
          The SUBNET_ID will depend on your network configuration. If you
          created your setup using the First Run Wizard you will most likely
          want the instance to run in the subnet created by the wizard. Thus,
          you can obtain the value by inspecting the properties of the running
          ECS Instance.
        </para>
        <para>
          Once the instance is running and if your cluster is named
          <emphasis role="strong">default</emphasis> you can confirm that
          the instance has attached itself to the cluster as follows:
        </para>
        <screen>$ aws ecs describe-clusters</screen>
        <para>
          The <emphasis role="strong">registeredContainerInstancesCount</emphasis>
          entry in the output provides the number of instances considered to
          be part of the cluster. If you used the First Run Wizard to create
          the cluster the number should be at least 2 after you launch the
          SUSE Linux Enterprise Server ECS instance.
        </para>
      </listitem>
      <listitem>
        <para>
          If you used the First Run Wizard you already have an
          <link xlink:href="https://aws.amazon.com/autoscaling/>Auto Scaling</link>
          group. You can
          <link xlink:href="http://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-instances.html">add</link>
          the running SUSE Linux Enterprise Server instance to the existing
          group, or simply remove the default group. Removing the group
          created by the ECS First Run Wizard will also terminate the
          ECS Amazon AMI and you will be left with the running SUSE Linux
          Enterprise Server ECS optimized instance launched above.
        </para>
        <para>
          The autoscaling feature provides parallel functionality that is not
          strictly necessary for operating container instances. The First Run
          Wizard creates an autoscaling group as a good practice to ensure
          that at least always 1 container host is running.
        </para>
      </listitem>
    </orderedlist>
    <sect2 xml:id="alternative-cluster-name">
      <title>Alternative cluster name</title>
      <para>
        If you chose a name other than
        <emphasis role="strong">default</emphasis> for your cluster it is
        necessary to configure the instance to attach itself to this
        cluster. The configuration consists of setting the
        <emphasis role="strong">ECS_CLUSTER</emphasis>
        variable as follows:
      </para>
      <orderedlist>
        <listitem>
          <para>
            Login to the running ECS instance via ssh.
          </para>
        </listitem>
        <listitem>
          <para>
            Edit the environment file
            <filename>/etc/ecs/ecs.config</filename>
            and add an entry of the form:
          </para>
          <para>
            ECS_CLUSTER=name
          </para>
          <para>
            The amazon ECS init launcher will read in the environment
            file and populate the information into the environment prior
            to starting the ECS agent. A complete list of configuration
            options can be found at: <link xlink:href="https://github.com/aws/amazon-ecs-agent#environment-variables">Agent Configuration Variables</link>
          </para>
        </listitem>
        <listitem>
          <para>
            Restart the service with:
          </para>
          <screen>$ sudo systemctl restart amazon-ecs-init</screen>
          <para>
            The current instance will be detached from the default
            cluster and will be re-attached to the configured cluster
            name.
          </para>
          <para>
            Watching <filename>/var/log/ecs/ecs-agent.log.*</filename>
            will tell you if the expected cluster is used.
          </para>
        </listitem>
      </orderedlist>
    </sect2>
 </sect1>
 <sect1 xml:id="caveats">
    <title>Additional Considerations</title>
    <para>
      The integrated ECS service requires access to Amazon S3 to download a
      pre-built container. This implies that if you start an ECS instance that
      has no route to reach Amazon S3 the initialization will fail and the
      container host instance will not be able to attach itself to your
      cluster. Should you end up in a situation where the instance does not
      attach itself to your <emphasis role="strong">default</emphasis>
      cluster, you can modify your network configuration to ensure a route
      to Amazon S3 and then simply log into your container instance as start
      the service as follows:
    </para>
    <screen>$ systemctl start amazon-ecs.service</screen>
 </sect1>
 <sect1 xml:id="using sles containers">
    <title>Using SUSE Linux Enterprise Server Containers</title>
    <para>
      SUSE Linux Enterprise Server Docker images are not available on
      Docker Hub. However, SUSE provides pre-build docker images as
      packages in the SLE-Module-Containers12-Updates repository. Given
      that your launched instance has a route to the Internet and that
      the traffic originates with an IP address assigned by EC2 the
      instance will automatically register with an update server and
      the SLE-Module-Containers12-Updates repository will be configured.
      Once configured installing the docker image is simple:
    </para>
    <screen>$ zypper se docker-image</system>
    <para>
      Install the image you are interested in, the SUSE Linux Enterprise
      Server 12 image for example:
    </para>
    <screen>$ zypper in sles12-docker-image</screen>
    <para>
      The SUSE Linux Enterprise Server EULA does not allow you to push this
      image to a public docker registry. However you can use the Amazon
      hosted private
      <link xlink:href="https://aws.amazon.com/ecr/">Container Registry</link>
      to store SUSE Linux Enterprise Server containers.
    </para>
 </sect1>
</article>

