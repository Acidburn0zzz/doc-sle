<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha.update.background"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Basic Principles</title>
  <info>
      <abstract>
        <para>If you are not familiar with &sle; updates, upgrades and
        service packs in general, this chapter will give you some background
        information on terminology, &suse; product lifecycles and Service
        Pack releases, and recommended upgrade policies.</para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec.update.terminology">
    <title>Terminology</title>

    <para> This section uses several terms. In order to understand the
      information, read the definitions below: </para>

    <variablelist>
      <varlistentry xml:id="sec.update.term.backporting">
        <term>Backporting</term>
        <listitem>
          <para> Backporting is the act of adapting specific changes
            from a newer version of software and applying it to an older
            version. The most commonly used case is fixing security
            holes in older software components. Usually it is also part
            of a maintenance model to supply enhancements or (less
            commonly) new features. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.deltarpm">
        <!-- Taken from yast2_sw.xml -->
        <term>Delta RPM</term>
        <listitem>
          <para> A delta RPM consists only of the binary diff between
            two defined versions of a package, and therefore has the
            smallest download size. Before being installed, the full RPM
            package is rebuilt on the local machine. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.downstream">
        <term>Downstream</term>
        <listitem>
          <para> A metaphor of how software is developed in the open
            source world (compare it with
            <emphasis>upstream</emphasis>). The term
              <emphasis>downstream</emphasis> refers to people or
            organizations like &suse; who integrate the source code from
            upstream with other software to build a distribution which
            is then used by end users. Thus, the software flows
            downstream from its developers via the integrators to the
            end users. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.extensions">
        <term>Extensions</term>
        <term>Add-On Products</term>
        <listitem>
          <para>
            Extensions and third party add-on products provide additional
            functionality of product value to &productname;. They are
            provided by &suse; and by &suse; partners, and they are
            registered and installed on top of the base product
            &productname;. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.majorrelease">
        <term>Major Release</term>
        <term>General Availability (GA) Version</term>
        <listitem>
          <para> The Major Release of &sle; (or any software product) is
            a new version which brings new features and tools,
            decomissions previously deprecated components and comes with
            backwards incompatible changes. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.migration">
        <term>Migration</term>
        <listitem>
          <para> Updating to a Service Pack (SP) by using the online
            update tools or an installation media to install
            the respective patches. It updates all packages of the
            installed system to the latest state. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.migration.targets">
        <term>Migration Targets</term>
        <listitem>
          <para>Set of compatible products to which a system can be migrated,
            containing the version of the products/extensions and the URL
            of the repository. Migration targets can change over time and
            depend on installed extensions.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.modules">
        <term>Modules</term>
        <listitem>
          <!-- XPointers are currently not proven to work well with our
          locdrop procedures. Disable for now. -->
          <!-- <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="inst_yast2.xml"
       xpointer="element(ann.i.yast2.inst_mode.add-on.modules/2)"/> -->
          <para> Modules are fully supported parts of &productname; with
            a different life cycle. They have a clearly defined scope
            and are delivered via online channel only. Registering at
            the &scc;, &smt; (&smtool;), or &susemgr; is a prerequisite 
            for being able to subscribe to these channels. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.package">
        <!-- Taken from yast2_sw.xml -->
        <term>Package</term>
        <listitem>
          <para> A package is a compressed file in
              <literal>rpm</literal> format that contains all files for
            a particular program, including optional components like
            configuration, examples, and documentation. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.patch">
        <!-- Taken from yast2_sw.xml -->
        <term>Patch</term>
        <listitem>
          <para> A patch consists of one or more packages and may be
            applied by means of delta RPMs. It may also introduce
            dependencies to packages that are not installed yet. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.servicepacks">
        <term>Service Packs (SP)</term>
        <listitem>
          <para> Combines several patches into a form which is easy to
            install or deploy. Service packs are numbered and usually
            contain security fixes, updates, upgrades, or enhancements
            of programs. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.upstream">
        <term>Upstream</term>
        <listitem>
          <para> A metaphor of how software is developed in the open
            source world (compare it with
              <emphasis>downstream</emphasis>). The term
              <emphasis>upstream</emphasis> refers to the original
            project, author or maintainer of a software that is
            distributed as source code. Feedback, patches, feature
            enhancements, or other improvements flow from end users or
            contributors to upstream developers. They decide if the
            request will be integrated or rejected. </para>
          <para> If the project members decide to integrate the request,
            it will show up in newer versions of the software. An
            accepted request will benefit all parties involved. </para>
          <para> If a request is not accepted, it may be for different
            reasons. Either it is in a state which is not compliant with
            the project's guidelines, it is invalid, it is already
            integrated, or it is not in the interest or roadmap of the
            project. An unaccepted request makes it harder for upstream
            developers as they need to synchronize their patches with
            the upstream code. This practice is generally avoided, but
            sometimes it is still needed. </para>
        </listitem>
      </varlistentry>
      <!-- Taken from FATE#308189, see also bnc#711791 -->
      <varlistentry xml:id="sec.update.term.update">
        <term>Update</term>
        <listitem>
          <para> Installation of a newer <emphasis>minor</emphasis>
            version of a package, which usually contains security or bug
            fixes.</para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.upgrade">
        <term>Upgrade</term>
        <listitem>
          <para> Installation of a newer <emphasis>major</emphasis>
            version of a package or distribution, which brings
              <emphasis>new features</emphasis>. </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 xml:id="sec.update.prep">
    <title>General Preparations</title>

    <para> Before starting the update procedure, make sure your system
      is properly prepared. Among others, preparation involves backing
      up data and checking the release notes. </para>

    <sect2 xml:id="sec.update.prep.disks">
      <title>Partitioning and Disk Space</title>
      <para> Before starting your update, make note of the root
        partition. The command <command>df&nbsp;/</command> lists the
        device name of the root partition. For example, in <xref
          linkend="aus.update.df"/>, the root partition to write down is
        <filename>/dev/sda3</filename> (mounted as
        <filename>/</filename>). </para>
      <example xml:id="aus.update.df">
        <title>List with <command>df -h</command></title>
        <screen os="sled">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       39G  1.6G   37G   4% /windows/C
/dev/sda2      4.6G  2.6G  2.1G  57% /windows/D</screen>
        <screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
      </example>
      <para> Software tends to <quote>grow</quote> from version to
        version. Therefore, take a look at the available partition space
        with <command>df</command> before updating. If you suspect you
        are running short of disk space, secure your data before
        updating and repartitioning your system. There is no general
        rule regarding how much space each partition should have. Space
        requirements depend on your particular partitioning profile and
        the software selected. </para>
    </sect2>

    <sect2 xml:id="sec.update.prep.btrfs-on-root">
      <title>Check Space on Btrfs Root File Systems</title>
      <para>If you use Btrfs as root file systems on your machine,
        make sure there is enough free space. Getting disk space can be
        done with these two commands:      
      </para>
      <screen>&prompt.root;<command>btrfs</command> filesystem df /
&prompt.root;<command>df</command> /</screen>
      <para>The result of the two commands show similar numbers of how
        much disk space is used. However, the problem with Btrfs and free
        space is, you do not know what is referenced in a snapshot and what is
        not; you cannot calculate how much disk space a change would
        need.</para>
      <para>In the worst case, an upgrade needs as much disk space
        as the current root file system (without
        <filename>/.snapshot</filename>).
        Besides any Btrfs file systems, check for free space on other
        file systems as well. The following recommendation has been
        proven:
      </para>
      
      <itemizedlist>
        <listitem>
          <para>For all filesystems including Btrfs you need enough free
            disk space to download and install big RPMs.
            The space of old RPMs are only freed after new RPMs are being
            installed.</para>
        </listitem>
        <listitem>
          <para>For Btrfs with snapshots, you need at minimum as much free
            space as your current installation takes. It is recommended to
            have twice as much free space as the current installation.
          </para>
          <para>If you do not have enough free space, you can try to 
            delete old snapshots with <command>snapper</command> like this:
          </para>
          <screen>&prompt.root;<command>snapper</command> list
&prompt.root;<command>snapper</command> delete NUMBER</screen>
          <para>However, this may not help in all cases. Before migration,
            most snapshots occupy only few space.</para>
        </listitem>
      </itemizedlist>
      
      <para>If you want to remove old snapshots, use the
        <command>snapper</command> command:</para>
      
    </sect2>

    <sect2 xml:id="sec.update.prep.relnotes">
      <title>Check the Release Notes</title>
      <para> In the release notes you can find additional information on
        what has changed since the previous release of &sle;. Please
        verify there if your specific hardware or set up needs special
        considerations, which of your favorite specific software
        packages have changed significantly, and which precautions you
        should take in addition to the general recommendations of this
        section. The release notes also provide last minute information
        and known issues, that couldn't make it to the manual on time. </para>
      <para> The current version of the release notes document
        containing the latest information on &productname; can be read
        online at <link xlink:href="http://www.suse.com/doc/"/>. </para>
    </sect2>

    <sect2 xml:id="sec.update.prep.backup">
      <title>Make a Backup</title>
      <para> Before updating, copy existing configuration files to a
        separate medium (such as tape device, removable hard disk, etc.)
        to back up the data. This primarily applies to files stored in
          <filename>/etc</filename> as well as some of the directories
        and files in <filename>/var</filename> and
          <filename>/opt</filename>. You may also want to write the user
        data in <filename>/home</filename> (the <envar>HOME</envar>
        directories) to a backup medium. Back up this data as
        &rootuser;. Only &rootuser; has read permissions for all local
        files. </para>
      <para> If you have selected <guimenu>Update an Existing
          System</guimenu> as the installation mode in &yast;, you can
        choose to do a (system) backup at a later point in time. You can
        choose to include all modified files and files from the
          <filename>/etc/sysconfig</filename> directory. However, this
        is not a complete backup, as all the other important directories
        mentioned above are missing. Find the backup in the
          <filename>/var/adm/backup</filename> directory. </para>
    </sect2>

    <sect2 xml:id="sec.update.prep.mariadb">
      <title>Migrate your MySQL Database</title>
      <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
      <para>Since &sle; 12, &suse; switched from MySQL to MariaDB. Before
        you start any upgrade, it is highly recommended to backup your
        database.
      </para>
      <para>If you are familiar with the <command>mysql_upgrade</command>
        tool, you do not need to call it explicitly. This command is called
        during the installation of MariaDB.</para>
      <para>In order to perform the database migration, do the following:</para>

      <procedure>
        <step>
          <para>Log in to your &sle; 11 machine.</para>
        </step>
        <step>
          <para>Create a dump file:</para>
          <screen>&prompt.root;<command>mysqldump</command> -u root -p --all-databases &gt; mysql_backup.sql</screen>
          <para>By default, <command>mysqldump</command> does not dump
            the <literal>INFORMATION_SCHEMA</literal> or
            <literal>performance_schema</literal> database.
            For more details refer to
            <link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>.
          </para>
        </step>
        <step>
          <para>Store your dump file, the configuration file
              <filename>/etc/my.cnf</filename>, and the directory
              <filename>/etc/mysql/</filename> for later investigation
              (<emphasis>NOT</emphasis> installation!) on a safe
            place.</para>
        </step>
        <step>
          <para>Perform your upgrade. After the upgrade, your former
            configuration file <filename>/etc/my.cnf</filename> is still
            intact. You can find the new configuration in the file
              <filename>/etc/my.cnf.rpmnew</filename>.</para>
        </step>
        <step>
          <para>Configure your MariaDB database to your needs. Do
            <emphasis>NOT</emphasis> use the former configuration file and
            directory, but use it as a reminder and adapt it.</para>
        </step>
        <step>
          <para>Make sure you start the MariaDB server:</para>
          <screen>&prompt.root;<command>systemctl</command> start mysql</screen>
          <para>If you want to start the MariaDB server on every boot,
            enable the service:</para>
          <screen>&prompt.root;<command>systemctl</command> enable mysql</screen>
          <!--<para>If you want to test the server, install the package
          <package>mariadb-test</package>.</para>-->
        </step>
        <step>
          <para>Verify that MariaDB is running properly by connecting to the
             database:</para>
          <screen>&prompt.root;<command>mysql</command> -u root -p</screen>
        </step>
      </procedure>
    </sect2>

    <sect2 xml:id="sec.update.prep.postgresql">
      <title>Migrate your &postgresql; Database</title>
      <remark>toms 2015-09-09: FATE#319049</remark>
      <remark>Already reviewd by Reinhard</remark>
      <para>&slea;11 SP3 and &slea;12 GA get a newer version of the
        &postgresql; database as a maintenance update. Due to the
        required migration work of the database, there is no automatic
        upgrade process. As such, the switch from one version to another
        has to be done manually. </para>
      <para>The migration process is conducted by the
          <command>pg_upgrade</command> command which is an alternative
        method of the classical dump and reload. In comparison with the
        <quote>dump &amp; reload</quote> method, <command>pg_upgrade</command>
        makes the migration less time-consuming.
      </para>
      <para>Each &postgresql; version stores its files in different,
        version dependant directories. After the update the directories
        will change to:</para>
      <variablelist>
        <varlistentry>
          <term>&slea;11 SP3/SP4</term>
          <listitem>
            <para><filename>/usr/lib/postgresql91/</filename> to 
              <filename>/usr/lib/postgresql94/</filename></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>&slea;12 GA</term>
          <listitem>
            <para>
              <filename>/usr/lib/postgresql93/</filename> to
              <filename>/usr/lib/postgresql94/</filename>
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>In order to perform the database migration, do the
        following:</para>
      <procedure>
        <step>
          <para>Make sure the following preconditions are
            fulfilled:</para>
          <itemizedlist>
            <listitem>
              <para>If not already done, upgrade any package of the old
                &postgresql; version to the latest release through a
                maintenance update.</para>
            </listitem>
            <listitem>
              <para>Create a backup of your existing database.</para>
            </listitem>
            <listitem>
              <para>Install the packages of the new &postgresql; major
                version. For &slea;12 this means to install
                  <package>postgresql94-server</package> and all the
                packages it depend on.</para>
            </listitem>
            <listitem>
              <para>Install the package
                  <package>postgresql94-contrib</package> which contains
                the command <command>pg_upgrade</command>. </para>
            </listitem>
            <listitem>
              <para>Make sure you have enough free space in your
                &postgresql; data area, which is 
                  <filename>/var/lib/pgsql/data</filename> by default.
                If space is tight, try to reduce size with the following
                SQL command on each database (can take very long!): </para>
              <screen>VACUUM FULL</screen>
            </listitem>
          </itemizedlist>
        </step>
        <step>
          <para>Stop the &postgresql; server</para>
          <screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> stop</screen>
        </step>
        <step>
          <para>Rename your old data directory:</para>
          <screen>&prompt.root;<command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
        </step>
        <step>
          <para>Create a new data directory:</para>
          <screen>&prompt.root;<command>mkdir</command> -p /var/lib/pgsql/data</screen>
        </step>
        <step>
          <para>If you have changed your configuration files in the old
            version, copy the files <filename>postgresql.conf</filename>
            <filename>pg_hba.conf</filename> to your new <filename>data</filename>
            directory:
            <screen>&prompt.root;<command>cp</command> /var/lib/pgsql/data.old/*.conf \
     /var/lib/pgsql/data</screen>
          </para>
        </step>
        <step>
          <para>Initialize your new database instance either manually with 
            <command>initdb</command> or by starting and stopping &postgresql;,
            which will do it automatically:
          </para>
          <screen>&prompt.root;/usr/sbin/rcpostgresql start
&prompt.root;/usr/sbin/rcpostgresql stop</screen>
        </step>
        <step>
          <para>Start the migration process and replace the
              <replaceable>OLD</replaceable> placeholder with the older
            version:</para>
          <screen>&prompt.root;<command>pg_upgrade</command> \
   --old-datadir "/var/lib/pgsql/data.old" \
   --new-datadir "/var/lib/pgsql/data" \
   --old-bindir "/usr/lib/postgresql<replaceable>OLD</replaceable>/bin/" \
   --new-bindir "/usr/lib/postgresql94/bin/"</screen>
        </step>
        <step>
          <para>Start your new database instance:</para>
          <screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> start</screen>
        </step>
        <step>
          <para>Check if the migration was successful. There is no general
            tool do automate this step. It depends on your use case how much
            and want to test.</para>
        </step>
        <step>
          <para>Remove any old &postgresql; packages and your old data directory:</para>
          <screen>&prompt.root;<command>zypper</command> search -s postgresql<replaceable>OLD</replaceable> | xargs zypper rm -u
&prompt.root;rm -rf /var/lib/pgsql/data.old</screen>
        </step>
      </procedure>
    </sect2>
    <sect2 xml:id="sec.update.prep.vms">
      <title>Shut Down Virtual Machine Guests</title>
      <para> If your machine serves as a &vmhost; for &kvm; or &xen;,
        make sure to properly shut down all running &vmguest;s prior to
        the update. Otherwise you may not be able to access the guests
        after the update. </para>
    </sect2>
  </sect1>

</chapter>
