<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter version="5.0" xml:id="cha.update.background"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Basic Principles</title>
  <info>
    <abstract>
      <para>If you are not familiar with &sle; updates, upgrades and
        service packs in general, this chapter will give you some background
        information on terminology, &suse; product lifecycles and Service
        Pack releases, recommended upgrade policies, and supported upgrade
        paths.</para>
    </abstract>
  </info>

  <sect1 xml:id="sec.update.terminology">
    <title>Terminology</title>

    <para> This section uses several terms. In order to understand the
      information, read the definitions below: </para>

    <variablelist>
      <varlistentry xml:id="sec.update.term.backporting">
        <term>Backporting</term>
        <listitem>
          <para> Backporting is the act of adapting specific changes
            from a newer version of software and applying it to an older
            version. The most commonly used case is fixing security
            holes in older software components. Usually it is also part
            of a maintenance model to supply enhancements or (less
            commonly) new features. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.deltarpm">
        <!-- Taken from yast2_sw.xml -->
        <term>Delta RPM</term>
        <listitem>
          <para> A delta RPM consists only of the binary diff between
            two defined versions of a package, and therefore has the
            smallest download size. Before being installed, the full RPM
            package is rebuilt on the local machine. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.downstream">
        <term>Downstream</term>
        <listitem>
          <para> A metaphor of how software is developed in the open
            source world (compare it with
            <emphasis>upstream</emphasis>). The term
              <emphasis>downstream</emphasis> refers to people or
            organizations like &suse; who integrate the source code from
            upstream with other software to build a distribution which
            is then used by end users. Thus, the software flows
            downstream from its developers via the integrators to the
            end users. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.extensions">
        <term>Extensions</term>
        <term>Add-On Products</term>
        <listitem>
          <para>
            <remark>froh 2014-06-03: review</remark> Extensions (also
            known as add-on products) provide additional functionality
            of product value to &productname;. They are provided by SUSE
            and by SUSE partners, and they are registered and installed
            on top of the base product &productname;. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.modules">
        <term>Modules</term>
        <listitem>
          <!-- XPointers are currently not proven to work well with our
          locdrop procedures. Disable for now. -->
          <!-- <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="inst_yast2.xml"
       xpointer="element(ann.i.yast2.inst_mode.add-on.modules/2)"/> -->
          <para> Modules are fully supported parts of &productname; with
            a different life cycle. They have a clearly defined scope
            and are delivered via online channel only. Registering at
            the &scc; is a prerequisite for being able to subscribe to
            these channels. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.onlinemigration">
        <term>Online Migration</term>
        <listitem>
          <para> Updating to a Service Pack (SP) by using the online
            update tools (rather than the installation media) to install
            the respective patches. It updates all packages of the
            installed system to the latest state&mdash;including
            updates&mdash;of SP3 plus SP2 updates. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.package">
        <!-- Taken from yast2_sw.xml -->
        <term>Package</term>
        <listitem>
          <para> A package is a compressed file in
              <literal>rpm</literal> format that contains all files for
            a particular program, including optional components like
            configuration, examples, and documentation. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.patch">
        <!-- Taken from yast2_sw.xml -->
        <term>Patch</term>
        <listitem>
          <para> A patch consists of one or more packages and may be
            applied by means of delta RPMs. It may also introduce
            dependencies to packages that are not installed yet. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.majorrelease">
        <term>Major Release</term>
        <term>General Availability (GA) Version</term>
        <listitem>
          <para> The Major Release of &sle; (or any software product) is
            a new version which brings new features and tools,
            decomissions previously deprecated components and comes with
            backwards incompatible changes. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.servicepacks">
        <term>Service Packs (SP)</term>
        <listitem>
          <para> Combines several patches into a form which is easy to
            install or deploy. Service packs are numbered and usually
            contain security fixes, updates, upgrades, or enhancements
            of programs. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.upstream">
        <term>Upstream</term>
        <listitem>
          <para> A metaphor of how software is developed in the open
            source world (compare it with
              <emphasis>downstream</emphasis>). The term
              <emphasis>upstream</emphasis> refers to the original
            project, author or maintainer of a software that is
            distributed as source code. Feedback, patches, feature
            enhancements, or other improvements flow from end users or
            contributors to upstream developers. They decide if the
            request will be integrated or rejected. </para>
          <para> If the project members decide to integrate the request,
            it will show up in newer versions of the software. An
            accepted request will benefit all parties involved. </para>
          <para> If a request is not accepted, it may be for different
            reasons. Either it is in a state which is not compliant with
            the project's guidelines, it is invalid, it is already
            integrated, or it is not in the interest or roadmap of the
            project. An unaccepted request makes it harder for upstream
            developers as they need to synchronize their patches with
            the upstream code. This practice is generally avoided, but
            sometimes it is still needed. </para>
        </listitem>
      </varlistentry>
      <!-- Taken from FATE#308189, see also bnc#711791 -->
      <varlistentry xml:id="sec.update.term.update">
        <term>Update</term>
        <listitem>
          <para> Installation of a newer <emphasis>minor</emphasis>
            version of a package. </para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="sec.update.term.upgrade">
        <term>Upgrade</term>
        <listitem>
          <para> Installation of a newer <emphasis>major</emphasis>
            version of a package or distribution, which brings
              <emphasis>new features</emphasis>. </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 xml:id="sec.update.proc.prep.paths">
    <title>Supported Upgrade Paths for &slea;</title>

    <important>
      <title>Cross-architecture Upgrades Are Not Supported</title>
      <para> Cross-architecture upgrades, such as upgrading from a
        32-bit version of &productname; to the 64-bit version, or
        upgrading from big endian to little endian are
          <emphasis>not</emphasis> supported! </para>
      <para> Specifically, &slea; 11 SP3 on &ppc; (big endian) to &slea;
        12 on &ppc; (new: little endian!), is <emphasis>not</emphasis>
        supported. </para>
      <para> Also, as &sle; 12 is 64bit only, upgrades from any 32bit
        &sle; 11 systems to &sle; 12 are <emphasis>not</emphasis>
        supported. </para>
    </important>

    <variablelist>
      <varlistentry>
        <term>Upgrading from &sle; 10 (any Service Pack)</term>
        <listitem>
          <para> There is no supported direct migration path to &sle;
            12. A fresh installation is recommended instead. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Upgrading from &sle; 11 GA or &sle; 11 SP1</term>
        <listitem>
          <para> There is no supported direct migration path to &sle;
            12. </para>
          <para> If you cannot do a fresh install, you need to first
            update from &sle; 11 GA to SP1, and then from &sle; 11 SP1
            to SP2, before you can proceed. These steps are described in
            the <link
              xlink:href="https://www.suse.com/documentation/sles11/"
              >&sle; 11 Deployment Guide</link>. </para>
          <para> Then proceed with the next step: </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Upgrading from &sle; 11 SP2</term>
        <listitem>
          <para> There is no supported direct migration path to &sle;
            12. </para>
          <para> If you cannot do a fresh install, you need to upgrade
            from &sle; 11&nbsp;SP2 to SP3, before you can proceed. These
            steps are described in the <link
              xlink:href="https://www.suse.com/documentation/sles11/"
              >&sle; 11 Deployment Guide</link>. </para>
          <para> Then proceed with the next step: </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Upgrading from &sle; 11 SP3 to &sle; 12</term>
        <listitem>
          <para> Refer to <xref linkend="sec.update.sle12"/> for
            details. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Upgrading from &sle; 11 SP4 to &sle; 12</term>
        <listitem>
          <para> Refer to <xref linkend="sec.update.sle12"/> for
            details. </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec.update.prep">
    <title>General Preparations</title>

    <para> Before starting the update procedure, make sure your system
      is properly prepared. Among others, preparation involves backing
      up data and checking the release notes. </para>

    <sect2 xml:id="sec.update.prep.btrfs-on-root">
      <title>Check Space on Btrfs Root File Systems</title>
      <para>If you use Btrfs as root file systems on your machine,
        make sure there is enough free space. Check for the device
        that is mounted on <filename>/</filename>. As Btrfs does not really
        provide useful information on free space, it is recommended to
        remove old snapshots with <command>snapper</command>:</para>
      <screen>&prompt.root;<command>snapper</command> list
&prompt.root;<command>snapper</command> delete NUMBER</screen>
    </sect2>

    <sect2 xml:id="sec.update.prep.relnotes">
      <title>Check the Release Notes</title>
      <para> In the release notes you can find additional information on
        what has changed since the previous release of &sle;. Please
        verify there if your specific hardware or set up needs special
        considerations, which of your favorite specific software
        packages have changed significantly, and which precautions you
        should take in addition to the general recommendations of this
        section. The Release Notes also provide last minute information
        and known issues, that couldn't make it to the manual on time. </para>
      <para> The current version of the release notes document
        containing the latest information on &productname; can be read
        online at <link xlink:href="http://www.suse.com/doc/"/>. </para>
    </sect2>

    <sect2 xml:id="sec.update.prep.backup">
      <title>Make a Backup</title>
      <para> Before updating, copy existing configuration files to a
        separate medium (such as tape device, removable hard disk, etc.)
        to back up the data. This primarily applies to files stored in
          <filename>/etc</filename> as well as some of the directories
        and files in <filename>/var</filename> and
          <filename>/opt</filename>. You may also want to write the user
        data in <filename>/home</filename> (the <envar>HOME</envar>
        directories) to a backup medium. Back up this data as
        &rootuser;. Only &rootuser; has read permissions for all local
        files. </para>
      <para> If you have selected <guimenu>Update an Existing
          System</guimenu> as the installation mode in &yast;, you can
        choose to do a (system) backup at a later point in time. You can
        choose to include all modified files and files from the
          <filename>/etc/sysconfig</filename> directory. However, this
        is not a complete backup, as all the other important directories
        mentioned above are missing. Find the backup in the
          <filename>/var/adm/backup</filename> directory. </para>
    </sect2>

    <sect2 xml:id="sec.update.prep.disks">
      <title>Partitioning and Disk Space</title>
      <para> Before starting your update, make note of the root
        partition. The command <command>df&nbsp;/</command> lists the
        device name of the root partition. For example, in <xref
          linkend="aus.update.df"/>, the root partition to write down is
          <filename>/dev/sda3</filename> (mounted as
          <filename>/</filename>). </para>
      <example xml:id="aus.update.df">
        <title>List with <command>df -h</command></title>
        <screen os="sled">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       39G  1.6G   37G   4% /windows/C
/dev/sda2      4.6G  2.6G  2.1G  57% /windows/D</screen>
        <screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
      </example>
      <para> Software tends to <quote>grow</quote> from version to
        version. Therefore, take a look at the available partition space
        with <command>df</command> before updating. If you suspect you
        are running short of disk space, secure your data before
        updating and repartitioning your system. There is no general
        rule regarding how much space each partition should have. Space
        requirements depend on your particular partitioning profile and
        the software selected. </para>
    </sect2>

    <sect2 xml:id="sec.update.prep.vms">
      <title>Shut Down Virtual Machine Guests</title>
      <para> If your machine serves as a &vmhost; for &kvm; or &xen;,
        make sure to properly shut down all running &vmguest;s prior to
        the update. Otherwise you may not be able to access the guests
        after the update. </para>
    </sect2>
  </sect1>

</chapter>
