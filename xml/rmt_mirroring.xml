<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.rmt_mirroring">
<!-- ==================================================================== -->
 <title>Mirroring Repositories on the &rmt; Server</title>
 <info/>
 <para>
  You can mirror the installation and update repositories on the &rmt;
  server. This way, you do not need to download updates on each machine, which saves time and bandwidth.
 </para>
 <important>
  <title>&sls; 9 Repositories</title>
  <para>
   As &sls; 9 is no longer supported, &rmt; does not mirror &sls; 9
   repositories.
  </para>
 </important>
 <sect1 xml:id="sec.rmt_mirroring.credentials">
  <title>Mirroring Credentials</title>

  <para>
   Before you create a local mirror of the repositories, you need appropriate
   organization credentials. You can obtain the credentials from &scc;.
  </para>

  <para>
   To get the credentials from &scc;, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     Visit &scc; at <link xlink:href="http://scc.suse.com"/> and log in.
    </para>
   </step>
   <step>
    <para>
     If you are member of multiple organizations, chose the organization you
     want to work with from the sidebar on the left.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Organization</guimenu> in the top menu.
    </para>
   </step>
   <step>
    <para>
     Switch to the <guimenu>Organizational credentials</guimenu> section.
    </para>
   </step>
   <step>
    <para>
     To see the password, click <guimenu>Show password</guimenu>.
    </para>
   </step>
  </procedure>

  <para>
   The obtained credentials should be set with the &yast; &rmt; Server
   Configuration module or added directly to the
   <filename>/etc/rmt.conf</filename> file. For more information about the
   <filename>/etc/rmt.conf</filename> file, see
   <xref linkend="sec.rmt_config.rmtconf"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec.rmt_mirroring.synchronization">
  <title>Synchronizing Repository Metadata</title>
  <para>
   The local &rmt; database needs to be updated periodically with the
   information downloaded from &scc;. This includes available products
   and repositories.
  </para>
  <para>
   The synchronization is done with the &systemd; timer
   <literal>rmt-server-sync.timer</literal>. To view the status, for
   example the next running time, use <command>systemctl status</command>:
  </para>
<screen>&prompt.root;<command>systemctl status rmt-server-sync.timer</command>
● rmt-server-sync.timer - RMT Sync timer
   Loaded: loaded (/usr/lib/systemd/system/rmt-server-sync.timer; enabled; vendor preset: disabled)
   Active: active (waiting) since Fri 2018-06-22 04:22:34 EDT; 2h 34min ago
  Trigger: Sat 2018-06-23 03:53:00 EDT; 20h left

Jun 22 04:22:34 d31 systemd[1]: Started RMT Sync timer.</screen>
  <para>
   To update the &rmt; database manually, use the <command>rmt-cli sync</command>
   command. For details, see <xref linkend="sec.rmt.tools.rmt-cli.sync"/>.
  </para>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.mirroring">
  <title>Mirroring Packages</title>
  <para>
   Packages for enabled repositories are mirrored on your &rmt; server.
   The download of the packages is done periodically but can also be
   triggered manually.
  </para>
  <para>
   The periodic mirroring is done by the &systemd; timer
   <literal>rmt-server-mirror.timer</literal>. To show the status, for
   example the next running time, use <command>systemctl
   status</command>:
  </para>
<screen>&prompt.root;<command>systemctl status rmt-server-mirror.timer</command>
● rmt-server-mirror.timer - RMT Mirror timer
   Loaded: loaded (/usr/lib/systemd/system/rmt-server-mirror.timer; enabled; vendor preset: disabled)
   Active: active (waiting) since Fri 2018-06-22 04:22:34 EDT; 2h 34min ago
  Trigger: Sat 2018-06-23 02:17:57 EDT; 19h left

Jun 22 04:22:34 d31 systemd[1]: Started RMT Mirror timer.</screen>
  <para>
   To update the mirrored packages manually, use the <command>rmt-cli
   mirror</command> command. For details, see <xref
   linkend="sec.rmt.tools.rmt-cli.mirror"/>.
  </para>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.enable_disable">
  <title>Enabling and Disabling Repositories</title>
  <para>
   Repositories can be enabled or disabled by specifically or by
   stating a product. To enable or disable repositories, you either
   need the product name or ID, or the repository name or ID. In
   general, enabling or disabling a product is desired, because this
   automatically enables or disables all repositories associated with
   the product.
  </para>
  <sect2 xml:id="sec.rmt_mirroring.enable_disable.product">
   <title>Using Products</title>
   <para>
    To enable or disable all repositories of a product, use the
    <command>rmt-cli product enable
    <replaceable>ID</replaceable></command> and <command>rmt-cli product
    disable <replaceable>ID</replaceable></command> commands. To
    retrieve an ID for a disabled but available product, use the
    <command>rmt-cli product list --all</command> command. To retrieve an
    ID for an enabled product, use the <command>rmt-cli product
    list</command> command.
   </para>
   <para>
    Example:
   </para>
<screen>&prompt.sudo;<command>rmt-cli products list --all</command>
+------+------------------+---------+--------------+----------------------+---------------+---------+---------------+
| ID   | Name             | Version | Architecture | Product string       | Release stage | Mirror? | Last mirrored |
+------+------------------+---------+--------------+----------------------+---------------+---------+---------------+
[...]
| 1743 | SUSE Package Hub | 15      | x86_64       | PackageHub/15/x86_64 | released      | false   |               |
[...]
+------+------------------+---------+--------------+----------------------+---------------+---------+---------------+

&prompt.sudo;<command>rmt-cli product enable 1743</command>
2 repo(s) successfully enabled.

&prompt.sudo;<command>rmt-cli product disable 1743</command>
2 repo(s) successfully disabled.</screen>
  </sect2>
  <sect2 xml:id="sec.rmt_mirroring.enable_disable.repository">
   <title>Using Repositories</title>
   <para>
    To enable or disable specific repositories, use the
    <command>rmt-cli repo enable
    <replaceable>ID</replaceable></command> and <command>rmt-cli repo
    disable <replaceable>ID</replaceable></command> commands. To
    retrieve an ID for a disabled but available repository, use the
    <command>rmt-cli repo list --all</command> command. To retrieve an
    ID for an enabled repository, use the <command>rmt-cli repo
    list</command> command.
   </para>
   <para>
    Example:
   </para>
<screen>&prompt.sudo;<command>rmt-cli repo list --all</command>
+--------+-------------------------+-------------------------------------------+------------+---------+---------------+
| SCC ID | Name                    | Description                               | Mandatory? | Mirror? | Last mirrored |
+--------+-------------------------+-------------------------------------------+------------+---------+---------------+
[...]
| 3061   | SUSE-PackageHub-15-Pool | SUSE-PackageHub-15-Pool for sle-15-x86_64 | true       | false   |               |
[...]
+--------+-------------------------+-------------------------------------------+------------+---------+---------------+

&prompt.sudo;<command>rmt-cli repo enable 3061</command>
Repository successfully enabled.

&prompt.sudo;<command>rmt-cli repo disable 3061</command>
Repository successfully disabled.</screen>
  </sect2>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.delete">
  <title>Deleting Mirrored Data</title>
  <para>
   After you disable a repository or product as described in <xref linkend="sec.rmt_mirroring.enable_disable"/>, the mirrored data still remains on your local hard drive. This includes the mirrored RPM packages.
   To remove the data, manually remove the corresponding directory:
  </para>
  <screen>&prompt.sudo;<command>rm -r /usr/share/rmt/public/repo/SUSE/Products/<replaceable>MODULE</replaceable>/<replaceable>VERSION</replaceable>/<replaceable>ARCHITECTURE</replaceable>/</command></screen>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.custom_repository">
  <title>Creating Custom Repositories</title>
  <para>
   
  </para>
 </sect1>

 <sect1 xml:id="smt.repo.preload">
  <title>Repository Preloading</title>

  <para>
   Deploying multiple &rmt; servers can take time if each new &rmt; server
   must mirror the same repositories.
  </para>

  <para>
   To save time when deploying new &rmt; servers, the repositories can be preloaded
   from another server or disk instead. To do this, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     Enable the repositories to be mirrored with the &rmt;, for example:
    </para>
<screen>&prompt.sudo;smt-repos -e SLES12-Updates sle-12_x86_64</screen>
   </step>
   <step>
    <para>
     Perform a dry run of <command>smt-mirror</command> to create the required repository
     directories:
    </para>
<screen>&prompt.sudo;smt-mirror -d --dryrun -L /var/log/smt/smt-mirror.log</screen>
    <para>
     The following directories are created based on the repository above and the default <option>MirrorTo</option>:
    </para>
<screen>/srv/www/htdocs/repo/repoindex.xml
/srv/www/htdocs/repo/$RCE/SLES12-Updates/sle-12-x86_64/*</screen>
   </step>
   <step>
    <para>
     Then copy the repositories from another &rmt; server, for
     example:
    </para>
<screen>&prompt.sudo;rsync -av 'smt12:/srv/www/htdocs/repo/\$RCE/SLES12-Updates/sle-12-x86_64/' \
 '/srv/www/htdocs/repo/$RCE/SLES12-Updates/sle-12-x86_64/'</screen>
   </step>
   <step>
    <para>
     To get the repository data fixed, run the following command:
    </para>
<screen>&prompt.sudo;smt-mirror -d -L /var/log/smt/smt-mirror.log</screen>
   </step>
  </procedure>

  <important>
   <title>Possible Error Messages</title>
   <para>
    Errors, such as <literal>repomd.xml is the same, but repo is
    not valid. Start mirroring.</literal>, are considered normal.
 They occur because the metadata of the preloaded repositories in
 the server's database remains incorrect until the initial mirror of the repositories has completed.
   </para>
  </important>
 </sect1>
</chapter>
