<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.lvm" lang="en">
  <title>LVM Configuration</title>
  <para>
   This section briefly describes the principles behind Logical Volume
   Manager (LVM) and its basic features that make it useful under many
   circumstances. The &yast; LVM configuration can be reached from the &yast;
   Expert Partitioner. This partitioning tool enables you to edit and delete
   existing partitions and create new ones that should be used with LVM.
  </para>
  <warning>
   <title>Risks</title>
   <para>
    Using LVM might be associated with increased risk, such as data loss.
    Risks also include application crashes, power failures, and faulty
    commands. Save your data before implementing LVM or reconfiguring
    volumes. Never work without a backup.
   </para>
  </warning>
  <sect1 id="sec.lvm.explained">
   <title>Understanding the Logical Volume Manager</title>

   <para>
    LVM enables flexible distribution of hard disk space over several physical
    volumes (hrad disks, partitions, LUNs). It was developed because the need
    to change the segmentation of hard disk space might arise only after the
    initial partitioning has already been done during installation. Because it
    is difficult to modify partitions on a running system, LVM provides a
    virtual pool (volume group or VG) of memory space from which logical
    volumes (LVs) can be created as needed. The operating system accesses
    these LVs instead of the physical partitions. Volume groups can span more
    than one disk, so that several disks or parts of them can constitute one
    single VG. In this way, LVM provides a kind of abstraction from the
    physical disk space that allows its segmentation to be changed in a much
    easier and safer way than through physical repartitioning.
   </para>

   <para role="intro">
    <xref linkend="bo1t1qx" xrefstyle="FigureXRef"/> compares physical
    partitioning (left) with LVM segmentation (right). On the left side, one
    single disk has been divided into three physical partitions (PART), each
    with a mount point (MP) assigned so that the operating system can access
    them. On the right side, two disks have been divided into two and three
    physical partitions each. Two LVM volume groups (VG&nbsp;1 and
    VG&nbsp;2) have been defined. VG&nbsp;1 contains two partitions from
    DISK&nbsp;1 and one from DISK&nbsp;2. VG&nbsp;2 contains the remaining
    two partitions from DISK&nbsp;2.
   </para>

   <figure pgwide="0" id="bo1t1qx">
    <title>Physical Partitioning versus LVM</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="lvm.svg" width="445pt" format="SVG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="lvm.png" width="445pt" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>

   <para>
    In LVM, the physical disk partitions that are incorporated in a volume
    group are called physical volumes (PVs). Within the volume groups in
    <xref linkend="bo1t1qx" xrefstyle="FigureXRef"/>, four logical volumes
    (LV&nbsp;1 through LV&nbsp;4) have been defined, which can be used by
    the operating system via the associated mount points (MP). The border between
    different logical volumes need not be aligned with any partition border.
    See the border between LV&nbsp;1 and LV&nbsp;2 in this example.
   </para>

   <para>
    LVM features:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      Several hard disks or partitions can be combined in a large logical
      volume.
     </para>
    </listitem>
    <listitem>
     <para>
      Provided the configuration is suitable, an LV (such as
      <filename>/usr</filename>) can be enlarged when the free space is
      exhausted.
     </para>
    </listitem>
    <listitem>
     <para>
      Using LVM, it is possible to add hard disks or LVs in a running
      system. However, this requires hot-swappable hardware that is capable
      of such actions.
     </para>
    </listitem>
    <listitem>
     <para>
      It is possible to activate a <emphasis>striping mode</emphasis> that
      distributes the data stream of a logical volume over several physical
      volumes. If these physical volumes reside on different disks, this can
      improve the reading and writing performance like RAID&nbsp;0.
     </para>
    </listitem>
    <listitem>
     <para>
      The snapshot feature enables consistent backups (especially for
      servers) in the running system.
     </para>
    </listitem>
   </itemizedlist>

   <para>
    With these features, using LVM already makes sense for heavily used home
    PCs or small servers. If you have a growing data stock, as in the case
    of databases, music archives, or user directories, LVM is especially
    useful. It allows file systems that are larger than the physical hard
    disk. Another advantage of LVM is that up to 256 LVs can be added.
    However, keep in mind that working with LVM is different from working
    with conventional partitions.
   </para>

<!-- fs 2014-12-05: Sounds like this information is no longer needed
   <para>
    Starting from kernel version&nbsp;2.6, LVM version&nbsp;2 is available,
    which is downward-compatible with the previous LVM and enables the
    continued management of old volume groups. When creating new volume
    groups, decide whether to use the new format or the downward-compatible
    version. LVM&nbsp;2 does not require any kernel patches. It makes use of
    the device mapper integrated in kernel 2.6. This kernel only supports
    LVM version&nbsp;2. Therefore, when talking about LVM, this section
    always refers to LVM version&nbsp;2.
   </para>
-->
   <para>
    You can manage new or existing LVM storage objects by using the &yast;
    Partitioner. Instructions and further information about configuring LVM
    is available in the official
    <ulink url="http://tldp.org/HOWTO/LVM-HOWTO/"><citetitle>LVM
    HOWTO</citetitle></ulink>.
   </para>

   <important>
    <title>Adding Multipath Support upon an Existing LVM Configuration</title>
    <para>
     If you add multipath support after you have configured LVM, you must
     modify the <filename>/etc/lvm/lvm.conf</filename> file to scan only the
     multipath device names in the <filename>/dev/disk/by-id</filename>
     directory as described in
     <xref linkend="mpiousinglvm" xrefstyle="SectTitleOnPage"/>, then reboot
     the server.
    </para>
   </important>
  </sect1>
  <sect1 id="sec.lvm.vg">
   <title>Creating Volume Groups</title>

   <para>
    An LVM volume group (VG) organizes the Linux LVM partitions into a logical
    pool of space. You can carve out logical volumes from the available space
    in the group. The Linux LVM partitions in a group can be on the same or
    different disks. You can add partitions or entire disks to expand the size
    of the group. If you want to use an entire disk, it must not contain any
    partitions. If using partitions, they must not be mounted. &yast; will
    automatically change their partition type to <literal>0x8E Linux
    LVM</literal> when adding them to a VG.
   </para>

   <procedure>
    <step>
     <para>
      Launch &yast; and open the <guimenu>Partitioner</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In case you need to reconfigure your existing partitioning setup,
      proceed as follows. Refer to <xref
      linkend="sec.yast2.i_y2_part_expert"/> for details. Note that all
      existing data will be lost. Skip this step if you only want to make use
      of unused disks or partitions that already exist.
     </para>
     <substeps>
      <step>
       <para>
	To use an entire hard disk that already contains partitions, delete
	all partitions on that disk. 
       </para>
      </step>
      <step>
       <para>
	To use a partition that is currently mounted, unmount it.
       </para>
      </step>
      <step>
       <para>
	To use unpartitioned, free space on a hard disk, create a new primary
	or logical partition on	that disk. Set it's type to <literal>0x8E
	Linux LVM</literal>. Do not format or mount it.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      In the left panel, select <guimenu>Volume Management</guimenu>.
     </para>
     <para>
      A list of existing Volume Groups are listed in the right panel.
     </para>
    </step>
    <step>
     <para>
      At the lower left of the Volume Management page, click
      <menuchoice><guimenu>Add</guimenu> <guimenu>Volume
      Group</guimenu></menuchoice>.
     </para>
     <informalfigure pgwide="0">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_lvm4_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_lvm4_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>Define up the volume group as follows:</para>
     <substeps>
      <step>
       <para>
	Specify the <guimenu>Volume Group Name</guimenu>.
       </para>
       <para>
	If you are creating a volume group at install time, the name
	<literal>system</literal> is suggested for a volume group that will
	contain the &productname; system files.
       </para>
      </step>
      <step>
       <para>
	Specify the <guimenu>Physical Extent Size</guimenu>.
       </para>
       <para>
	The <guimenu>Physical Extent Size</guimenu> defines the size of a
	physical block in the volume group. All the disk space in a volume
	group is handled in chunks of this size. Values can be from 1 KB to 16
	GB in powers of 2. This value is normally set to 4&nbsp;MB.
       </para>
       <para>
	In LVM1, a 4 MB physical extent allowed a maximum LV size of 256 GB
	because it supports only up to 65534 extents per LV. LVM2, which is used
	on &productname; does not restrict the number of physical
	extents. Having a large number of extents has no impact on I/O
	performance to the logical volume, but it slows down the LVM tools.
       </para>
       <important>
	<title>Physical Extent Sizes</title>
	<para>
	 Different physical extent sizes should not be mixed in a single VG.
	 The extent should not be modified after the initial setup.
	</para>
       </important>
      </step>
      <step>
       <para>
	In the <guimenu>Available Physical Volumes</guimenu> list, select the
	Linux LVM partitions that you want to make part of this volume group,
	then click <guimenu>Add</guimenu> to move them to the
	<guimenu>Selected Physical Volumes</guimenu> list.
       </para>
      </step>
      <step>
       <para>
	Click <guimenu>Finish</guimenu>.
       </para>
       <para>
	The new group appears in the <guimenu>Volume Groups</guimenu> list.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      On the Volume Management page, click <guimenu>Next</guimenu>, verify
      that the new volume group is listed, then click
      <guimenu>Finish</guimenu>.
     </para>
    </step>
    <step>
     <para>
      To check which physical devices are part of the volume group, open the
      &yast; Partitioner at any time in the running system and click
      <menuchoice> <guimenu>Volume Management</guimenu>
      <guimenu>Edit</guimenu> <guimenu>Physical
      Devices</guimenu></menuchoice>. Leave this screen with
      <guimenu>Abort</guimenu>. 
     </para>
     <figure id="fig.yast2.lvm.physical_volumes">
      <title>Physical Volumes in the Volume Group Named DATA</title>
      <mediaobject>
       <imageobject role="fo">
	<imagedata fileref="yast2_lvm5_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
	<imagedata fileref="yast2_lvm5_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
   </procedure>
  </sect1>

  <sect1 id="sec.lvm.lv">
   <title>Creating Logical Volumes</title>
   <para>
    A logical volume provides a pool of space similar to what a hard disk
    does. To make this space usable, you need to define physical volumes. A
    physical volume is similar to a regular partition&mdash;you can format and
    mount it.  
   </para>
   <para>
    Use The &yast; Partitioner to create logical volumes from an existing
    volume group. Assign at least one logical volume to each volume group. You
    can create new logical volumes as needed until all free space in the
    volume group has been exhausted.
   </para>
   <para>
    An LVM logical volume can optionally be thinly provisioned. Thin
    provisioning allows you to create logical volumes with sizes that overbook
    the available free space. You create a thin pool that contains unused
    space reserved for use with an arbitrary number of thin volumes. A thin
    volume is created as a sparse volume and space is allocated from a thin
    pool as needed. The thin pool can be expanded dynamically when needed for
    cost-effective allocation of storage space. Thinly provisioned volumes
    also support snapshots which can be managed with Snapper&mdash;see <xref
    linkend="cha.snapper"/> for more information.
   </para>

   <important>
    <para>
     To use thinly provisioned volumes in a cluster, the thin pool and the
     thin volumes that use it must be managed in a single cluster resource.
     This allows the thin volumes and thin pool to always be mounted
     exclusively on the same node.
    </para>
   </important>
     <itemizedlist>
      <listitem>
       <formalpara id="b15cmz3f">
        <title>Normal volume:</title>
        <para>
         (Default) The volume’s space is allocated immediately.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara id="b15cmz3g">
        <title>Thin pool:</title>
        <para>
         The logical volume is a pool of space that is reserved for use with
         thin volumes. The thin volumes can allocate their needed space from
         it on demand.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara id="b15cmz3h">
        <title>Thin volume:</title>
        <para>
         The volume is created as a sparse volume. The volume allocates
         needed space on demand from a thin pool.
        </para>
       </formalpara>
      </listitem>
     </itemizedlist>

   <procedure id="pro.lvm.lv">
    <title>Setting Up a Logical Volume</title>
    <step>
     <para>
      Launch &yast; and open the <guimenu>Partitioner</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the left panel, select <guimenu>Volume Management</guimenu>. A list
      of existing Volume Groups opens in the right panel.
     </para>
    </step>
    <step>
     <para>
      Select the volume group in which you would like to create the volume and
      choose <menuchoice> <guimenu>Add</guimenu> <guimenu>Logical
      Volume</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Provide a <guimenu>Name</guimenu> for the volume and choose
      <guimenu>Normal Volume</guimenu> (refer to <xref
      linkend="sec.lvm.lv.thin"/> for setting up thinly provisioned
      volumes). Proceed with <guimenu>Next</guimenu>.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_lvm9_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_lvm9_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Specify the size of the volume and whether to use multiple stripes.
     </para>
     <para>
      Using a striped volume, the data will be distributed among
      several physical volumes. If these physical volumes reside on
      different hard disks, this generally results in a better reading and
      writing performance (like RAID&nbsp;0). The maximum number of available
      stripes is equal to the number of physical volumes. The default
      (<literal>1</literal> is to not use multiple stripes.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_lvm10_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_lvm10_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Choose a <guimenu>Role</guimenu> for the volume. Your choice here
      only affects the default values for the upcoming dialog. They can be
      changed in the next step. If in doubt, choose <guimenu>Raw Volume
      (Unformatted)</guimenu>.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_lvm11_a.png" width="129pt" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_lvm11_a.png" width="129pt" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Under <guimenu>Formatting Options</guimenu>, select
      <guimenu>Format partition</guimenu>, then select the <guimenu>File
      system</guimenu>. The content of the <guimenu>Options</guimenu> menu
      depends on the file system. Usually there is no need to change the defaults.
     </para>
     <para>
      Under <guimenu>Mounting Options</guimenu>, select <guimenu>Mount
      partition</guimenu>, then select the mount point. Click <guimenu>Fstab
      Options</guimenu> to add special mounting options for the volume.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Next</guimenu>, verify that the changes are listed,
      then click <guimenu>Finish</guimenu>.
     </para>
    </step>
   </procedure>
   
   <sect2 id="sec.lvm.lv.thin">
    <title>Thinly Provisioned Logical Volumes</title>
    <para>
     An LVM logical volume can optionally be thinly provisioned. Thin
     provisioning allows you to create logical volumes with sizes that overbook
     the available free space. You create a thin pool that contains unused
     space reserved for use with an arbitrary number of thin volumes. A thin
     volume is created as a sparse volume and space is allocated from a thin
     pool as needed. The thin pool can be expanded dynamically when needed for
     cost-effective allocation of storage space. Thinly provisioned volumes
     also support snapshots which can be managed with Snapper&mdash;see <xref
     linkend="cha.snapper"/> for more information.
    </para>
    <para>
     To set up a thinly provisioned logical volume, proceed as described in
     <xref linkend="pro.lvm.lv"/>. When it comes to choosing the volume
     type, do not choose <guimenu>Normal Volume</guimenu>, but rather
     <guimenu>Thin Volume</guimenu> or <guimenu>Thin Pool</guimenu>.
    </para>
    <variablelist>
     <varlistentry>
      <term><guimenu>Thin pool</guimenu></term>
      <listitem>
        <para>
         The logical volume is a pool of space that is reserved for use with
         thin volumes. The thin volumes can allocate their needed space from
         it on demand.
        </para>
       </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Thin volume</guimenu></term>
      <listitem>
       <para>
        The volume is created as a sparse volume. The volume allocates
        needed space on demand from a thin pool.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

    <important>
     <title>Thinly Provisioned Volumes in a Cluster</title>
     <para>
      To use thinly provisioned volumes in a cluster, the thin pool and the
      thin volumes that use it must be managed in a single cluster resource.
      This allows the thin volumes and thin pool to always be mounted
      exclusively on the same node.
     </para>
    </important>
   </sect2>
  </sect1>


<!-- fs: FIXME
     This definetely doe not apply to SLE 12 anymore
     Clarify whether is can be removed or needs to be replaced with something
     on udev and systemctl

  <sect1 id="lvm_activate_vgs">
   <title>Automatically Activating Non-Root LVM Volume Groups</title>

   <para>
    Activation behavior for non-root LVM volume groups is controlled by
    parameter settings in the <literal>/etc/sysconfig/lvm</literal> file.
   </para>

   <para>
    By default, non-root LVM volume groups are automatically activated on
    system restart by <filename>/etc/rc.d/boot.lvm</filename>, according to
    the setting for the <literal>LVM_VGS_ACTIVATED_ON_BOOT</literal>
    parameter in the <literal>/etc/sysconfig/lvm</literal> file. This
    parameter allows you to activate all volume groups on system restart, or
    to activate only specified non-root LVM volume groups.
   </para>

   <para>
    To activate all non-root LVM volume groups on system restart, ensure
    that the value for the <literal>LVM_VGS_ACTIVATED_ON_BOOT</literal>
    parameter in the <filename>/etc/sysconfig/lvm</filename> file is empty
    (<literal>""</literal>). This is the default setting. For almost all
    standard LVM installations, it can safely stay empty.
   </para>

<screen>
LVM_VGS_ACTIVATED_ON_BOOT="" 
</screen>

   <para>
    To activate only a specified non-root LVM volume group on system
    restart, specify the volume group name as the value for the
    <literal>LVM_VGS_ACTIVATED_ON_BOOT</literal> parameter:
   </para>

<screen>
LVM_VGS_ACTIVATED_ON_BOOT="vg1" 
</screen>

   <para>
    By default, newly discovered LVM volume groups are not automatically
    activated. The <literal>LVM_ACTIVATED_ON_DISCOVERED</literal> parameter
    is disabled in the <filename>/etc/sysconfig/lvm</filename> file:
   </para>

<screen>
LVM_ACTIVATED_ON_DISCOVERED="disable"
</screen>

   <para>
    You can enable the <literal>LVM_ACTIVATED_ON_DISCOVERED</literal>
    parameter to allow newly discovered LVM volume groups to be activated
    via udev rules:
   </para>

<screen>
LVM_ACTIVATED_ON_DISCOVERED="enable"
</screen>
  </sect1>
-->

  <sect1 id="sec.lvm.vg_add">
   <title>Resizing an Existing Volume Group</title>
   <para>
    The space provided by a volume group can be expanded at any time in the
    running system without service interruption by adding more physical
    volumes. It is also possible to reduce the size of the volume group by
    removing physical volumes.
   </para>
   <warning>
    <title>Possible Data Loss</title>
    <para>
     Removing a physical device can result in data loss if the partition is in use
     by a logical volume.
    </para>
   </warning>
   <procedure>
    <step>
     <para>
      Launch &yast; and open the <guimenu>Partitioner</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the left panel, select <guimenu>Volume Management</guimenu>. A list
      of existing Volume Groups opens in the right panel.
     </para>
    </step>
    <step>
     <para>
      Select the volume group you want to change, then click
      <guimenu>Resize</guimenu>.
     </para>
     <informalfigure pgwide="0">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_lvm8_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_lvm8_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Do one of the following:
     </para>
     <itemizedlist>
      <listitem>
       <formalpara>
        <title>Add:</title>
        <para>
         Expand the size of the volume group by moving one or more physical
         volumes (LVM partitions) from the <guimenu>Available Physical
         Volumes</guimenu> list to the <guimenu>Selected Physical
         Volumes</guimenu> list.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara>
        <title>Remove:</title>
        <para>
         Reduce the size of the volume group by moving Lone or more physical
         volumes (LVM partitions) from the <guimenu>Selected Physical
         Volumes</guimenu> list to the <guimenu>Available Physical
         Volumes</guimenu> list.
        </para>
       </formalpara>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Next</guimenu>, verify that the changes are listed,
      then click <guimenu>Finish</guimenu>.
     </para>
    </step>
   </procedure>
  </sect1>

<!-- fs 2014-12-05 Proceed from here -->

  
    <sect1 id="brgqpfy">
   <title>Resizing a Logical Volume</title>

   <procedure id="brgqpvs">
    <step id="brgqsmd">
     <para>
      Launch &yast; as the &rootuser; user.
     </para>
    </step>
    <step id="brgqsme">
     <para>
      In &yast;, open the <guimenu>Partitioner</guimenu>.
     </para>
    </step>
    <step id="brgqsmf">
     <para>
      In the left panel, select Volume Management and expand it to see the
      list of volume groups.
     </para>
    </step>
    <step id="brgqsmg">
     <para>
      Under Volume Management, select the volume group, then click the
      <guimenu>Logical Volumes</guimenu> tab.
     </para>
    </step>
    <step id="brgqsmh">
     <para>
      At the bottom of the page, click <guimenu>Resize</guimenu> to open the
      Resize Logical Volume dialog box.
     </para>
     <informalfigure pgwide="0">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_lvm12_a.png" width="244pt" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_lvm12_a.png" width="244pt" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step id="brgqpvt">
     <para>
      Use the slider to expand or reduce the size of the logical volume.
     </para>
     <warning>
      <para>
       Reducing the size of a logical volume that contains data can cause
       data corruption.
      </para>
     </warning>
    </step>
    <step id="brgqueh">
     <para>
      Click <guimenu>OK</guimenu>.
     </para>
    </step>
    <step id="brgqulm">
     <para>
      Click <guimenu>Next</guimenu>, verify that the change is listed, then
      click <guimenu>Finish</guimenu>.
     </para>
    </step>
   </procedure>
  </sect1>
<sect1 id="brgpmw3">
   <title>Deleting a Volume Group</title>

   <warning>
    <para>
     Deleting a volume group destroys all of the data in each of its member
     partitions.
    </para>
   </warning>

   <procedure id="brgppd6">
    <step id="brgppd7">
     <para>
      Launch &yast; as the &rootuser; user.
     </para>
    </step>
    <step id="brgppd8">
     <para>
      In &yast;, open the <guimenu>Partitioner</guimenu>.
     </para>
    </step>
    <step id="brgppd9">
     <para>
      In the left panel, select Volume Management and expand the list of
      groups.
     </para>
    </step>
    <step id="brgpos4">
     <para>
      Under Volume Management, select the volume group, then click the
      <guimenu>Overview</guimenu> tab.
     </para>
    </step>
    <step id="brgpos5">
     <para>
      At the bottom of the page, click <guimenu>Delete</guimenu>, then click
      <guimenu>Yes</guimenu> to confirm the deletion.
     </para>
    </step>
    <step id="brgpos6">
     <para>
      Click <guimenu>Next</guimenu>, verify that the deleted volume group is
      listed (deletion is indicated by a red colored font), then click
      <guimenu>Finish</guimenu>.
     </para>
    </step>
   </procedure>
  </sect1>
<sect1 id="brgob84">
   <title>Deleting an LVM Partition (Physical Volume)</title>

   <warning>
    <para>
     Deleting a partition destroys all of the data in the partition.
    </para>
   </warning>

   <procedure id="brgobbw">
    <step id="brgobki">
     <para>
      Launch &yast; as the &rootuser; user.
     </para>
    </step>
    <step id="brgobkj">
     <para>
      In &yast;, open the <guimenu>Partitioner</guimenu>.
     </para>
    </step>
    <step id="brgobuj">
     <para>
      If the Linux LVM partition is in use as a member of a volume group,
      remove the partition from the volume group, or
      <link linkend="brgpmw3">delete the volume group</link>.
     </para>
    </step>
    <step id="brgobkk">
     <para>
      In the &yast; Partitioner under <guimenu>Hard Disks</guimenu>, select
      the device (such as <filename>sdc</filename>).
     </para>
    </step>
    <step id="brgobkl">
     <para>
      On the Partitions page, select a partition that you want to remove,
      click <guimenu>Delete</guimenu>, then click <guimenu>Yes</guimenu> to
      confirm the deletion.
     </para>
    </step>
    <step id="brgobkm">
     <para>
      Click <guimenu>Next</guimenu>, verify that the deleted partition is
      listed (deletion is indicated by a red colored font), then click
      <guimenu>Finish</guimenu>.
     </para>
    </step>
   </procedure>
  </sect1>
<sect1 id="btx9jxu">
   <title>Using LVM Commands</title>

   <para>
    For information about using LVM commands, see the man pages for the
    commands described in <xref linkend="btx8b05" xrefstyle="TableXRef"/>.
    Perform the commands as the &rootuser; user.
   </para>

   <table id="btx8b05" frame="topbot" rowsep="1" pgwide="0">
    <title>LVM Commands</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="5001*"/>
     <colspec colnum="2" colname="2" colwidth="5001*"/>
     <thead>
      <row id="btx8b06">
       <entry>
        <para>
         Command
        </para>
       </entry>
       <entry>
        <para>
         Description
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row id="btx8b07">
       <entry>
<screen>
pvcreate <replaceable>&lt;device</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Initializes a device (such as <filename>/dev/sdb</filename>) for
         use by LVLM as a physical volume.
        </para>
       </entry>
      </row>
      <row id="btx8yob">
       <entry>
<screen>
pvdisplay &lt;<replaceable>device</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Displays information about the LVM physical volume, such as whether
         it is currently being used in a logical volume.
        </para>
       </entry>
      </row>
      <row id="btx8b08">
       <entry>
<screen>
vgcreate -c y &lt;<replaceable>vg_name&gt;</replaceable> &lt;<replaceable>dev1</replaceable>&gt; [<replaceable>dev2</replaceable>...]
</screen>
       </entry>
       <entry>
        <para>
         Creates a clustered volume group with one or more specified
         devices.
        </para>
       </entry>
      </row>
      <row id="btx8b09">
       <entry>
<screen>
vgchange -a [ey | n] &lt;<replaceable>vg_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Activates (<literal>-a ey</literal>) or deactivates (<literal>-a
         n</literal>) a volume group and its logical volumes for
         input/output.
        </para>
        <important>
         <para>
          Ensure that you use the <literal>ey</literal> option to
          exclusively activate a volume group on a cluster node. This option
          is used by default in the load script.
         </para>
        </important>
       </entry>
      </row>
      <row id="btx8lez">
       <entry>
<screen>
vgremove &lt;<replaceable>vg_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Removes a volume group. Before using this command, remove the
         logical volumes, then deactivate the volume group.
        </para>
       </entry>
      </row>
      <row id="btx8b0a">
       <entry>
<screen>
vgdisplay &lt;<replaceable>vg_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Displays information about a specified volume group.
        </para>
        <para>
         To find the total physical extent of a volume group, enter
        </para>
<screen>
vgdisplay vg_name | grep "Total PE"
</screen>
       </entry>
      </row>
      <row id="b15cnuq5">
       <entry>
<screen>
lvcreate -L <replaceable>size</replaceable> -n &lt;<replaceable>lv_name</replaceable>&gt; &lt;<replaceable>vg_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Creates a logical volume of the specified size.
        </para>
       </entry>
      </row>
      <row id="btx8b0b">
       <entry>
<screen>
lvcreate -L &lt;size&gt; &lt;-T|--thinpool&gt; &lt;<replaceable>vg_name/thin_pool_name</replaceable>&gt;

lvcreate -virtualsize &lt;size&gt; &lt;-T|--thin&gt; 
&lt;<replaceable>vg_name</replaceable>/<replaceable>thin_pool_name</replaceable>&gt; -n &lt;<replaceable>thin_lv_name</replaceable>&gt;

lvcreate -L &lt;size&gt; -T 
&lt;<replaceable>vg_name</replaceable>/<replaceable>thin_pool_name</replaceable>&gt; 
-virtualsize &lt;size&gt; -n &lt;<replaceable>thin_lv_name</replaceable>&gt;


</screen>
       </entry>
       <entry>
        <para>
         Creates a thin logical volume or a thin pool of the specified size.
        </para>
        <para>
         Creates thin pool or thin logical volume or both. Specifying the
         optional argument --size will cause the creation of the thin pool
         logical volume. Specifying the optional argument --virtualsize will
         cause the creation of the thin logical volume from given thin pool
         volume. Specifying both arguments will cause the creation of both
         thin pool and thin volume using this pool.
        </para>
       </entry>
      </row>
      <row id="b15cmns0">
       <entry>
<screen>
lvcreate -s [-L <replaceable>size</replaceable>] -n <replaceable>&lt;snap_volume</replaceable>&gt; <replaceable>&lt;source_volume_path</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Creates a snapshot volume for the specified logical volume. If the
         size option (-L, --size) is not included, the snapshot is created
         as a thin snapshot.
        </para>
       </entry>
      </row>
      <row id="btx8b0c">
       <entry>
<screen>
lvremove&lt;<replaceable>/dev/vg_name/lv_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Removes a logical volume, such as
         <filename>/dev/vg_name/lv_name</filename>.
        </para>
        <para>
         Before using this command, close the logical volume by dismounting
         it with the <command>umount</command> command.
        </para>
       </entry>
      </row>
      <row id="b15cmns1">
       <entry>
<screen>
lvremove <replaceable>snap_volume_path</replaceable>
</screen>
       </entry>
       <entry>
        <para>
         Removes a snapshot volume.
        </para>
       </entry>
      </row>
      <row id="b15cmns2">
       <entry>
<screen>lvconvert --merge [-b] [-i &lt;<replaceable>seconds</replaceable>&gt;]\
[&lt;<replaceable>snap_volume_path</replaceable>&gt;[...&lt;snapN&gt;]|@&lt;<replaceable>volume_tag</replaceable>&gt;]
</screen>
       </entry>
       <entry>
        <para>
         Reverts (rolls back or merges) the snapshot data into the original
         volume.
        </para>
       </entry>
      </row>
      <row id="btx8b0d">
       <entry>
<screen>
vgextend <replaceable>&lt;vg_name&gt;</replaceable>&lt;<replaceable>device</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Adds a specified physical volume to an existing volume group
        </para>
       </entry>
      </row>
      <row id="btx8b0e">
       <entry>
<screen>
vgreduce <replaceable>&lt;vg_name</replaceable>&gt; &lt;<replaceable>device</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Removes a specified physical volume from an existing volume group.
        </para>
        <important>
         <para>
          Ensure that the physical volume is not currently being used by a
          logical volume. If it is, you must move the data to another
          physical volume by using the <command>pvmove</command> command.
         </para>
        </important>
       </entry>
      </row>
      <row id="btx8b0f">
       <entry>
<screen>
lvextend -L <replaceable>size</replaceable>&lt;<replaceable>/dev/vg_name/lv_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Extends the size of a specified logical volume. Afterwards, you
         must also expand the file system to take advantage of the newly
         available space.
        </para>
       </entry>
      </row>
      <row id="btx8b0g">
       <entry>
<screen>
lvreduce -L <replaceable>size</replaceable> <replaceable>&lt;/dev/vg_name/lv_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Reduces the size of a specified logical volume.
        </para>
        <important>
         <para>
          Ensure that you reduce the size of the file system first before
          shrinking the volume, otherwise you risk losing data.
         </para>
        </important>
       </entry>
      </row>
      <row id="b11lxo1l">
       <entry>
<screen>
lvrename <replaceable>&lt;/dev/vg_name/old_lv_name</replaceable>&gt; <replaceable>&lt;/dev/vg_name/new_lv_name</replaceable>&gt;
</screen>
       </entry>
       <entry>
        <para>
         Renames an existing LVM logical volume in a volume group from the
         old volume name to the new volume name. It does not change the
         volume group name.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>
  <sect1 id="biuz4lz">
   <title>Resizing a Logical Volume with Commands</title>

   <para>
    The <command>lvresize</command>, <command>lvextend</command>, and
    <command>lvreduce</command> commands are used to resize logical volumes.
    See the man pages for each of these commands for syntax and options
    information. To extend an LV there must be enough unallocated space
    available on the VG.
   </para>

   <para>
    The recommended way to grow or shrink a logical volume is to use the &yast;
    Partitioner. When using &yast;, the size of the file system in the volume
    will automatically be adjusted, too.
   </para>

   <para>
    LVs can be extended or shrunk manually while they are being used, but this
    may not be true for a file system on them. Extending or shrinking the LV
    does not automatically modify the size of file systems in the volume.  You
    must use a different command to grow the file system afterwards. For
    information about resizing file systems, see <xref linkend="cha.resize_fs"
    xrefstyle="ChapTitleOnPage"/>.
   </para>

   <para>
    Ensure that you use the right sequence when manually resizing an LV:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      If you extend an LV, you must extend the LV before you attempt to grow
      the file system.
     </para>
    </listitem>
    <listitem>
     <para>
      If you shrink an LV, you must shrink the file system before you
      attempt to shrink the LV.
     </para>
    </listitem>
   </itemizedlist>

   <para>
    To extend the size of a logical volume:
   </para>

   <procedure id="biuz4s4">
    <step id="biuz7nu">
     <para>
      Open a terminal console, log in as the &rootuser;
      user.
     </para>
    </step>
    <step id="biuz81p">
     <para>
      If the logical volume contains file systems that are hosted for a
      virtual machine (such as a &xen; VM), shut down the VM.
     </para>
    </step>
    <step id="biuz7ph">
     <para>
      Dismount the file systems on the logical volume.
     </para>
    </step>
    <step id="biuz4s5">
     <para>
      At the terminal console prompt, enter the following command to grow
      the size of the logical volume:
     </para>
<screen>
lvextend -L +<replaceable>size</replaceable> <replaceable>/dev/vgname/lvname</replaceable>
</screen>
     <para>
      For <replaceable>size</replaceable>, specify the amount of space you
      want to add to the logical volume, such as 10GB. Replace
      <filename><replaceable>/dev/vgname/lvname</replaceable></filename>
      with the Linux path to the logical volume, such as
      <filename>/dev/vg1/v1</filename>. For example:
     </para>
<screen>
lvextend -L +10GB /dev/vg1/v1<replaceable/>
</screen>
    </step>
   </procedure>

   <para>
    For example, to extend an LV with a (mounted and active) ReiserFS on it
    by 10GB:
   </para>

<screen>
lvextend −L +10G <replaceable>/dev/vgname/lvname</replaceable>
resize_reiserfs −s +10GB −f <replaceable>/dev/vg−name/lv−name</replaceable>
</screen>

   <para>
    For example, to shrink an LV with a ReiserFS on it by 5GB:
   </para>

<screen>
umount <replaceable>/mountpoint−of−LV</replaceable>
resize_reiserfs −s −5GB <replaceable>/dev/vgname/lvname</replaceable>
lvreduce <replaceable>/dev/vgname/lvname</replaceable>
mount <replaceable>/dev/vgname/lvname</replaceable> <replaceable>/mountpoint−of−LV</replaceable>
</screen>
  </sect1>
  
  
  

<sect1 id="lvmtagging">
   <title>Tagging LVM2 Storage Objects</title>

   <para role="intro">
    A tag is an unordered keyword or term assigned to the metadata of a
    storage object. Tagging allows you to classify collections of LVM
    storage objects in ways that you find useful by attaching an unordered
    list of tags to their metadata.
   </para>

   <sect2 id="bwkc8pi">
    <title>Using LVM2 Tags</title>
    <para role="intro">
     After you tag the LVM2 storage objects, you can use the tags in
     commands to accomplish the following tasks:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Select LVM objects for processing according to the presence or
       absence of specific tags.
      </para>
     </listitem>
     <listitem>
      <para>
       Use tags in the configuration file to control which volume groups and
       logical volumes are activated on a server.
      </para>
     </listitem>
     <listitem>
      <para>
       Override settings in a global configuration file by specifying tags
       in the command.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     A tag can be used in place of any command line LVM object reference
     that accepts:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       a list of objects
      </para>
     </listitem>
     <listitem>
      <para>
       a single object as long as the tag expands to a single object
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Replacing the object name with a tag is not supported everywhere yet.
     After the arguments are expanded, duplicate arguments in a list are
     resolved by removing the duplicate arguments, and retaining the first
     instance of each argument.
    </para>
    <para>
     Wherever there might be ambiguity of argument type, you must prefix a
     tag with the commercial at sign (@) character, such as
     <literal>@mytag</literal>. Elsewhere, using the <quote>@</quote> prefix
     is optional.
    </para>
   </sect2>

   <sect2 id="bwkc1zg">
    <title>Requirements for Creating LVM2 Tags</title>
    <para role="intro">
     Consider the following requirements when using tags with LVM:
    </para>
    <sect3 id="bwkc4lx">
     <title>Supported Characters</title>
     <para>
      An LVM tag word can contain the ASCII uppercase characters A to Z,
      lowercase characters a to z, numbers 0 to 9, underscore (_), plus (+),
      hyphen (-), and period (.). The word cannot begin with a hyphen. The
      maximum length is 128 characters.
     </para>
    </sect3>
    <sect3 id="bwkc75c">
     <title>Supported Storage Objects</title>
     <para>
      You can tag LVM2 physical volumes, volume groups, logical volumes, and
      logical volume segments. PV tags are stored in its volume group’s
      metadata. Deleting a volume group also deletes the tags in the
      orphaned physical volume. Snapshots cannot be tagged, but their origin
      can be tagged.
     </para>
     <para>
      LVM1 objects cannot be tagged because the disk format does not support
      it.
     </para>
    </sect3>
   </sect2>

   <sect2 id="bwkc1ta">
    <title>Command Line Tag Syntax</title>
    <variablelist>
     <varlistentry id="bwkddun">
      <term>--addtag &lt;<replaceable>tag_info</replaceable>&gt;</term>
      <listitem>
       <para>
        Add a tag to (or <emphasis>tag</emphasis>) an LVM2 storage object.
       </para>
       <formalpara id="bwkdj1p">
        <title>Example</title>
        <para/>
       </formalpara>
<screen>
vgchange --addtag @db1 vg1
</screen>
      </listitem>
     </varlistentry>
     <varlistentry id="bwkdh2t">
      <term>--deltag &lt;<replaceable>tag_info</replaceable>&gt;</term>
      <listitem>
       <para>
        Remove a tag from (or <emphasis>untag</emphasis>) an LVM2 storage
        object.
       </para>
       <formalpara id="bwkdjin">
        <title>Example</title>
        <para/>
       </formalpara>
<screen>
vgchange --deltag @db1 vg1
</screen>
      </listitem>
     </varlistentry>
     <varlistentry id="bwkdh2u">
      <term>--tag &lt;<replaceable>tag_info</replaceable>&gt;</term>
      <listitem>
       <para>
        Specify the tag to use to narrow the list of volume groups or
        logical volumes to be activated or deactivated.
       </para>
       <formalpara id="bwkdg98">
        <title>Example</title>
        <para/>
       </formalpara>
       <para>
        Enter the following to activate it the volume if it has a tag that
        matches the tag provided:
       </para>
<screen>
lvchange -ay --tag @db1 vg1/vol2
</screen>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="bwkepmz">
    <title>Configuration File Syntax</title>
    <para/>
    <sect3 id="bwkcqoj">
     <title>Enabling Hostname Tags in the lvm.conf File</title>
     <para>
      Add the following code to the <filename>/etc/lvm/lvm.conf</filename>
      file to enable host tags that are defined separately on host in a
      <filename>/etc/lvm/lvm_&lt;<replaceable>hostname</replaceable>&gt;.conf</filename>
      file.
     </para>
<screen>
tags {
   # Enable hostname tags
   hosttags = 1
}
</screen>
     <para>
      You place the activation code in the
      <filename>/etc/lvm/lvm_&lt;<replaceable>hostname</replaceable>&gt;.conf</filename>
      file on the host. See
      <xref linkend="bwkctd3" xrefstyle="HeadingOnPage"/>.
     </para>
    </sect3>
    <sect3 id="bwkeuio">
     <title>Defining Tags for Hostnames in the lvm.conf File</title>
<screen>
tags {

   tag1 { }
      # Tag does not require a match to be set.

   tag2 {
      # If no exact match, tag is not set.
      host_list = [ "hostname1", "hostname2" ]
   }
}
</screen>
    </sect3>
    <sect3 id="bwkctd3">
     <title>Defining Activation</title>
     <para>
      You can modify the <filename>/etc/lvm/lvm.conf</filename> file to
      activate LVM logical volumes based on tags.
     </para>
     <para>
      In a text editor, add the following code to the file:
     </para>
<screen>
  activation {
      volume_list = [ "vg1/lvol0", "@database" ]
  }
</screen>
     <para>
      Replace <literal>@database</literal> with the your tag. Use
      <literal>"@*"</literal> to match the tag against any tag set on the
      host.
     </para>
     <para>
      The activation command matches against
      <replaceable>vgname</replaceable>,
      <replaceable>vgname/lvname</replaceable>, or
      @<replaceable>tag</replaceable> set in the metadata of volume groups
      and logical volumes. A volume group or logical volume is activated
      only if a metadata tag matches. The default if there is no match is
      not to activate.
     </para>
     <para>
      If <literal>volume_list</literal> is not present and any tags are
      defined on the host, then it activates the volume group or logical
      volumes only if a host tag matches a metadata tag.
     </para>
     <para>
      If <literal>volume_list</literal> is not present and no tags are
      defined on the host, then it does activate.
     </para>
    </sect3>
    <sect3 id="bwkcwqd">
     <title>Defining Activation in Multiple Hostname Configuration Files</title>
     <para>
      You can use the activation code in a host’s configuration file
      (<filename>/etc/lvm/lvm_&lt;<replaceable>host_tag</replaceable>&gt;.conf</filename>)
      when host tags are enabled in the <filename>lvm.conf</filename> file.
      For example, a server has two configuration files in the
      <filename>/etc/lvm/</filename> folder:
     </para>
     <simplelist>
      <member><filename>lvm.conf</filename>
      </member>
      <member><filename>lvm_&lt;<replaceable>host_tag</replaceable>&gt;.conf</filename>
      </member>
     </simplelist>
     <para>
      At startup, load the <filename>/etc/lvm/lvm.conf</filename> file, and
      process any tag settings in the file. If any host tags were defined,
      it loads the related
      <filename>/etc/lvm/lvm_&lt;<replaceable>host_tag</replaceable>&gt;.conf</filename>
      file.When it searches for a specific configuration file entry, it
      searches the host tag file first, then the <filename>lvm.conf
      </filename>file, and stops at the first match.Within the
      <filename>lvm_&lt;<replaceable>host_tag</replaceable>&gt;.conf</filename>
      file, use the reverse order that tags were set. This allows the file
      for the last tag set to be searched first. New tags set in the host
      tag file will trigger additional configuration file loads.
     </para>
    </sect3>
   </sect2>

   <sect2 id="bwkdms3">
    <title>Using Tags for a Simple Activation Control in a Cluster</title>
    <para>
     You can set up a simple hostname activation control by enabling the
     <literal>hostname_tags</literal> option in a the
     <filename>/etc/lvm/lvm.conf</filename> file. Use the same file on every
     machine in a cluster so that it is a global setting.
    </para>
    <procedure id="bwkel6y">
     <step id="bwkel6z">
      <para>
       In a text editor, add the following code to the
       <filename>/etc/lvm/lvm.conf</filename> file:
      </para>
<screen>
tags {
   hostname_tags = 1
}
</screen>
     </step>
     <step id="bwkelf9">
      <para>
       Replicate the file to all hosts in the cluster.
      </para>
     </step>
     <step id="bwkelow">
      <para>
       From any machine in the cluster, add <literal>db1</literal> to the
       list of machines that activate <filename>vg1/lvol2</filename>:
      </para>
<screen>
lvchange --addtag @db1 vg1/lvol2
</screen>
     </step>
     <step id="bwkelx8">
      <para>
       On the <filename>db1</filename> server, enter the following to
       activate it:
      </para>
<screen>
lvchange -ay vg1/vol2
</screen>
     </step>
    </procedure>
   </sect2>

   <sect2 id="bwkdqfz">
    <title>Using Tags to Activate On Preferred Hosts in a Cluster</title>
    <para>
     The examples in this section demonstrate two methods to accomplish the
     following:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Activate volume group <filename>vg1</filename> only on the database
       hosts <filename>db1</filename> and <filename>db2</filename>.
      </para>
     </listitem>
     <listitem>
      <para>
       Activate volume group <filename>vg2</filename> only on the file
       server host <filename>fs1</filename>.
      </para>
     </listitem>
     <listitem>
      <para>
       Activate nothing initially on the file server backup host
       <filename>fsb1</filename>, but be prepared for it to take over from
       the file server host <filename>fs1</filename>.
      </para>
     </listitem>
    </itemizedlist>
    <sect3 id="bwkdsty">
     <title>Option 1: Centralized Admin and Static Configuration Replicated Between Hosts</title>
     <para>
      In the following solution, the single configuration file is replicated
      among multiple hosts.
     </para>
     <procedure id="bwkdvwj">
      <step id="bwkdvwk">
       <para>
        Add the <literal>@database</literal> tag to the metadata of volume
        group <filename>vg1</filename>. In a terminal console, enter
       </para>
<screen>
vgchange --addtag @database vg1
</screen>
      </step>
      <step id="bwke0dt">
       <para>
        Add the <literal>@fileserver</literal> tag to the metadata of volume
        group <filename>vg2</filename>. In a terminal console, enter
       </para>
<screen>
vgchange --addtag @fileserver vg2
</screen>
      </step>
      <step id="bwke0du">
       <para>
        In a text editor, modify the<filename> /etc/lvm/lvm.conf</filename>
        file with the following code to define the
        <literal>@database</literal>, <literal>@fileserver</literal>,
        <literal>@fileserverbackup</literal> tags.
       </para>
<screen>
tags {
   database {
      host_list = [ "db1", "db2" ]
   }
   fileserver {
      host_list = [ "fs1" ]
   }
   fileserverbackup {
      host_list = [ "fsb1" ]
   }
}

activation {
   # Activate only if host has a tag that matches a metadata tag
   volume_list = [ "@*" ]
}
</screen>
      </step>
      <step id="bwke0dv">
       <para>
        Replicate the modified<filename> /etc/lvm/lvm.conf</filename> file
        to the four hosts: <filename>db1</filename>,
        <filename>db2</filename>, <filename>fs1</filename>, and
        <filename>fsb1</filename>.
       </para>
      </step>
      <step id="bwke2yh">
       <para>
        If the file server host goes down, <filename>vg2</filename> can be
        brought up on <filename>fsb1</filename> by entering the following
        commands in a terminal console on any node:
       </para>
<screen>
vgchange --addtag @fileserverbackup vg2
vgchange -ay vg2
</screen>
      </step>
     </procedure>
    </sect3>
    <sect3 id="bwkdtdw">
     <title>Option 2: Localized Admin and Configuration</title>
     <para>
      In the following solution, each host holds locally the information
      about which classes of volume to activate.
     </para>
     <procedure id="bwke3z3">
      <step id="bwke8yi">
       <para role="intro">
        Add the <literal>@database</literal> tag to the metadata of volume
        group <filename>vg1</filename>. In a terminal console, enter
       </para>
<screen>
vgchange --addtag @database vg1
</screen>
      </step>
      <step id="bwke8yj">
       <para>
        Add the <literal>@fileserver</literal> tag to the metadata of volume
        group <filename>vg2</filename>. In a terminal console, enter
       </para>
<screen>
vgchange --addtag @fileserver vg2
</screen>
      </step>
      <step id="bwke8yk">
       <para>
        Enable host tags in the <filename>/etc/lvm/lvm.conf</filename> file:
       </para>
       <substeps>
        <step id="bwke8dm">
         <para>
          In a text editor, modify the
          <filename>/etc/lvm/lvm.conf</filename> file with the following
          code to enable host tag configuration files.
         </para>
<screen>
tags {
   hosttags = 1
}
</screen>
        </step>
        <step id="bwke8dn">
         <para>
          Replicate the modified <filename>/etc/lvm/lvm.conf</filename> file
          to the four hosts: <filename>db1</filename>,
          <filename>db2</filename>, <filename>fs1</filename>, and
          <filename>fsb1</filename>.
         </para>
        </step>
       </substeps>
      </step>
      <step id="bwke7w8">
       <para>
        On host <filename>db1</filename>, create an activation configuration
        file for the database host <filename>db1</filename>. In a text
        editor, create <filename>a /etc/lvm/lvm_db1.conf</filename> file and
        add the following code:
       </para>
<screen>
activation {
   volume_list = [ "@database" ]
}
</screen>
      </step>
      <step id="bwkeef1">
       <para>
        On host <filename>db2</filename>, create an activation configuration
        file for the database host <filename>db2</filename>. In a text
        editor, create <filename>a /etc/lvm/lvm_db2.conf</filename> file and
        add the following code:
       </para>
<screen>
activation {
   volume_list = [ "@database" ]
}
</screen>
      </step>
      <step id="bwkeef2">
       <para>
        On host fs1, create an activation configuration file for the file
        server host <filename>fs1</filename>.In a text editor, create
        <filename>a /etc/lvm/lvm_fs1.conf</filename> file and add the
        following code:
       </para>
<screen>
activation {
   volume_list = [ "@fileserver" ]
}
</screen>
      </step>
      <step id="bwkeef3">
       <para>
        If the file server host <filename>fs1</filename> goes down, to bring
        up a spare file server host fsb1 as a file server:
       </para>
       <substeps>
        <step id="bwkeef4">
         <para>
          On host <filename>fsb1</filename>, create an activation
          configuration file for the host <filename>fsb1</filename>. In a
          text editor, create <filename>a /etc/lvm/lvm_fsb1.conf</filename>
          file and add the following code:
         </para>
<screen>
activation {
   volume_list = [ "@fileserver" ]
}
</screen>
        </step>
        <step id="bwkeef5">
         <para>
          In a terminal console, enter one of the following commands:
         </para>
<screen>
vgchange -ay vg2

vgchange -ay @fileserver
</screen>
        </step>
       </substeps>
      </step>
     </procedure>
    </sect3>
   </sect2>
  </sect1>

 </chapter>
