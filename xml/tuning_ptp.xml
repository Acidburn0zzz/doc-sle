<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.tuning.ptp">
 <title>&ptp;</title>
  <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
  </info>
  <para>
   For network environments, it is vital to keep the computer and other devices' clocks synchronized and accurate.
   There are several solutions to achieve this, for example the widely used &ntp; (NTP) described in
   <xref linkend="cha.netz.xntp"/>.
   The &ptp; (PTP) is a protocol capable of sub-microsecond accuracy, which is better than what NTP achieves.
   PTP support is divided between the kernel and user space. The kernel in &productname; includes support for PTP clocks,
   which are provided by network drivers.  
  </para>
  <sect1 xml:id="tuning.ptp.intro">
   <title>Introduction to PTP</title>
   <para>
    The clocks managed by PTP follow a master-slave hierarchy. The slaves are synchronized to their masters.
    The hierarchy is updated by the <emphasis>best master clock</emphasis> (BMC) algorithm, which runs on every clock.
    The clock with only one port can be either master or slave. Such a clock is called an <emphasis>ordinary clock</emphasis> (OC).
    A clock with multiple ports can be master on one port and slave on another.
    Such a clock is called a <emphasis>boundary clock</emphasis> (BC). The top-level master is called 
    the <emphasis>grandmaster clock</emphasis>. The grandmaster clock can be synchronized with a Global Positioning System (GPS).
    This way disparate networks can be synchronized with a high-degree of accuracy. 
   </para>
   <para>
    The hardware support is the main advantage of PTP. It is supported by various network switches and network interface controllers (NIC).
    While it it possible to use non-PTP enabled hardware within the network, having network components between
    all PTP clocks PTP hardware enabled achieves the best possible accuracy.
   </para>
  <sect2 xml:id="tuning.ptp.linuxptp">
   <title>PTP Linux Implementation</title>
   <para>
    On &sles;, the implementation of PTP is provided by the <systemitem>linuxptp</systemitem> package.
    Install it with <command>zypper install linuxptp</command>.
    It includes the <command>vptp4l</command> and <command>phc2sys</command> programs for clock synchronization.
    <command>ptp4l</command> implements the PTP boundary clock and ordinary clock.
    When hardware time stamping is enabled, <command>ptp4l</command> synchronizes the PTP hardware clock to the master clock.
    With software time stamping, it synchronizes the system clock to the master clock.
    <command>phc2sys</command> is needed only with hardware time stamping to synchronize the system clock
    to the PTP hardware clock on the network interface card (NIC).  
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="tuning.ptp.using">
  <title>Using PTP</title>
  <para></para>
  <sect2>
   <title>Network Driver and Hardware Support</title>
  <para>
   PTP requires that the used kernel network driver supports either software or hardware time stamping.
   Moreover, the NIC must support time stamping in the physical hardware. You can verify the driver
   and NIC time stamping capabilities with <command>ethtool</command>:
  </para>
  <screen>ethtool -T eth0
Time stamping parameters for eth0:
Capabilities:
hardware-transmit     (SOF_TIMESTAMPING_TX_HARDWARE)
        software-transmit     (SOF_TIMESTAMPING_TX_SOFTWARE)
        hardware-receive      (SOF_TIMESTAMPING_RX_HARDWARE)
        software-receive      (SOF_TIMESTAMPING_RX_SOFTWARE)
        software-system-clock (SOF_TIMESTAMPING_SOFTWARE)
        hardware-raw-clock    (SOF_TIMESTAMPING_RAW_HARDWARE)
PTP Hardware Clock: 0
Hardware Transmit Timestamp Modes:
        off                   (HWTSTAMP_TX_OFF)
        on                    (HWTSTAMP_TX_ON)
Hardware Receive Filter Modes:
        none                  (HWTSTAMP_FILTER_NONE)
        all                   (HWTSTAMP_FILTER_ALL)</screen>
       <para>
        Software time stamping requires <literal>SOF_TIMESTAMPING_SOFTWARE</literal>, <literal>SOF_TIMESTAMPING_TX_SOFTWARE</literal>, <literal>SOF_TIMESTAMPING_RX_SOFTWARE</literal> parameters.
       </para>
       <para>
        Hardware time stamping requires <literal>SOF_TIMESTAMPING_RAW_HARDWARE</literal>, <literal>SOF_TIMESTAMPING_TX_HARDWARE</literal>, <literal>SOF_TIMESTAMPING_RX_HARDWARE</literal> parameters.
       </para>
  </sect2>
 </sect1>
</chapter>

