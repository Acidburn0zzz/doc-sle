<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.tuning.ptp">
 <title>&ptp;</title>
  <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
  </info>
  <para>
   For network environments, it is vital to keep the computer and other devices' clocks synchronized and accurate.
   There are several solutions to achieve this, for example the widely used &ntp; (NTP) described in
   <xref linkend="cha.netz.xntp"/>.
   The &ptp; (PTP) is a protocol capable of sub-microsecond accuracy, which is better than what NTP achieves.
   PTP support is divided between the kernel and user space. The kernel in &productname; includes support for PTP clocks,
   which are provided by network drivers.  
  </para>
  <sect1 xml:id="tuning.ptp.intro">
   <title>Introduction to PTP</title>
   <para>
    The clocks managed by PTP follow a master-slave hierarchy. The slaves are synchronized to their masters.
    The hierarchy is updated by the <emphasis>best master clock</emphasis> (BMC) algorithm, which runs on every clock.
    The clock with only one port can be either master or slave. Such a clock is called an <emphasis>ordinary clock</emphasis> (OC).
    A clock with multiple ports can be master on one port and slave on another.
    Such a clock is called a <emphasis>boundary clock</emphasis> (BC). The top-level master is called 
    the <emphasis>grandmaster clock</emphasis>. The grandmaster clock can be synchronized with a Global Positioning System (GPS).
    This way disparate networks can be synchronized with a high-degree of accuracy. 
   </para>
   <para>
    The hardware support is the main advantage of PTP. It is supported by various network switches and network interface controllers (NIC).
    While it it possible to use non-PTP enabled hardware within the network, having network components between
    all PTP clocks PTP hardware enabled achieves the best possible accuracy.
   </para>
  <sect2 xml:id="tuning.ptp.linuxptp">
   <title>PTP Linux Implementation</title>
   <para>
    On &sls;, the implementation of PTP is provided by the <systemitem>linuxptp</systemitem> package.
    Install it with <command>zypper install linuxptp</command>.
    It includes the <command>ptp4l</command> and <command>phc2sys</command> programs for clock synchronization.
    <command>ptp4l</command> implements the PTP boundary clock and ordinary clock.
    When hardware time stamping is enabled, <command>ptp4l</command> synchronizes the PTP hardware clock to the master clock.
    With software time stamping, it synchronizes the system clock to the master clock.
    <command>phc2sys</command> is needed only with hardware time stamping to synchronize the system clock
    to the PTP hardware clock on the network interface card (NIC).  
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="tuning.ptp.using">
  <title>Using PTP</title>
  <para></para>
  <sect2 xml:id="tuning.ptp.driver_support">
   <title>Network Driver and Hardware Support</title>
  <para>
   PTP requires that the used kernel network driver supports either software or hardware time stamping.
   Moreover, the NIC must support time stamping in the physical hardware. You can verify the driver
   and NIC time stamping capabilities with <command>ethtool</command>:
  </para>
  <screen>ethtool -T eth0
Time stamping parameters for eth0:
Capabilities:
hardware-transmit     (SOF_TIMESTAMPING_TX_HARDWARE)
        software-transmit     (SOF_TIMESTAMPING_TX_SOFTWARE)
        hardware-receive      (SOF_TIMESTAMPING_RX_HARDWARE)
        software-receive      (SOF_TIMESTAMPING_RX_SOFTWARE)
        software-system-clock (SOF_TIMESTAMPING_SOFTWARE)
        hardware-raw-clock    (SOF_TIMESTAMPING_RAW_HARDWARE)
PTP Hardware Clock: 0
Hardware Transmit Timestamp Modes:
        off                   (HWTSTAMP_TX_OFF)
        on                    (HWTSTAMP_TX_ON)
Hardware Receive Filter Modes:
        none                  (HWTSTAMP_FILTER_NONE)
        all                   (HWTSTAMP_FILTER_ALL)</screen>
       <para>
        Software time stamping requires the following parameters:
       </para>
<screen>SOF_TIMESTAMPING_SOFTWARE
SOF_TIMESTAMPING_TX_SOFTWARE
SOF_TIMESTAMPING_RX_SOFTWARE</screen>
       <para>
        Hardware time stamping requires the following parameters:
       </para>
<screen>SOF_TIMESTAMPING_RAW_HARDWARE
SOF_TIMESTAMPING_TX_HARDWARE
SOF_TIMESTAMPING_RX_HARDWARE</screen>
       
  </sect2>
  <sect2 xml:id="tuning.ptp.ptp41">
   <title>Using <command>ptp4l</command></title>
   <para>
    <command>ptp4l</command> uses hardware time stamping by default. As &rootuser;, you need to specify the network interface
    capable of hardware time stamping with the <option>-i</option> option. The <option>-m</option> tells <command>ptp4l</command>
    to print its output to standard output instead of the system's logging facility:
   </para>
   <screen>ptp4l -m -i eth0
selected eth0 as PTP clock
port 1: INITIALIZING to LISTENING on INITIALIZE
port 0: INITIALIZING to LISTENING on INITIALIZE
port 1: new foreign master 00a152.fffe.0b334d-1
selected best master clock 00a152.fffe.0b334d
port 1: LISTENING to UNCALIBRATED on RS_SLAVE
master offset -25937 s0 freq +0 path delay       12340
master offset -27887 s0 freq +0 path delay       14232
master offset -38802 s0 freq +0 path delay       13847
master offset -36205 s1 freq +0 path delay       10623
master offset  -6975 s2 freq -30575 path delay   10286
port 1: UNCALIBRATED to SLAVE on MASTER_CLOCK_SELECTED
master offset  -4284 s2 freq -30135 path delay    9892</screen>
<para>
The <literal>master offset</literal> value represents the easured offset from
the master (in nanoseconds).  The <literal>s0</literal>, <literal>s1</literal>,
<literal>s2</literal> indicators show the different states of the clock servo:
<literal>s0</literal> is unlocked, <literal>s1</literal> is clock step, and
<literal>s2</literal> is locked.  If the servo is in the locked state
(<literal>s2</literal>), the clock will not be stepped (only slowly adjusted) if
the <option>pi_offset_const</option> option is set to a negative value in the
configuration file (see <command>man 8 ptp4l</command> for more information).
The <literal>freq</literal> value represents the frequency adjustment of the
clock (in parts per billion,  ppb). The <literal>path delay</literal> value
represents the estimated delay of the synchronization messages sent from the
master (in nanoseconds). Port 0 is a Unix domain socket used for local PTP
management.  Port1 is the eth0 interface. INITIALIZING, LISTENING, UNCALIBRATED
and SLAVE are some of port states which change on the INITIALIZE, RS_SLAVE,
MASTER_CLOCK_SELECTED events. Changing the port state from UNCALIBRATED to SLAVE
indicates successful synchronization with a PTP master clock. 
</para>
<para>
 You can enable software time stamping with the <option>-S</option> option.
</para>
<screen>ptp4l -m -S -i eth3</screen>
<para>
 You can also run <command>ptp4l</command> as a service:
</para>
<screen>systemctl start ptp4l</screen>
<para>
 In this case, <command>ptp4l</command> reads its options from the
 <filename>/etc/sysconfig/ptp4l</filename> file.  By default, this file tells
 <command>ptp4l</command> to read the configuration options from
 <filename>/etc/ptp4l.conf</filename>.  For more information on
 <command>ptp4l</command> options and the configuration file settings, see
 <command>man 8 ptp4l</command>. 
</para>
  </sect2>
  <sect2 xml:id="tuning.ptp.confile">
   <title><command>ptp4l</command>Configuration File</title>
   <para>
    <command>ptp4l</command> can read its configuration from an optional configuration file.
    As no configuration file is used by default, you need to specify it with <option>-f</option>.
   </para>
   <screen>ptp4l -f /etc/ptp4l.conf</screen>
   <para>
    The configuration file is divided into sections. The global section
    (indicated as <literal>[global]</literal>) sets the program options, clock
    options and default port options. Other sections are  port specific, and
    they  override  the  default port options. The name of the section is the
    name of the configured port ( for example <literal>[eth0]</literal>). An
    empty port section can be used to replace the command line option.
   </para>
<screen>[global]
verbose               1
time_stamping         software
[eth0]</screen>
<para>The example configuration file is an equivalent of the following command's options:</para>
<screen>ptp4l -i eth0 -m -S</screen>
<para>
 For a complete list of <command>ptp4l</command> configuration options, see <command>man 8 ptp4l</command>.
</para>
  </sect2>
  <sect2 xml:id="tuning.ptp.delay_measurement">
   <title>Delay Measurement</title>
   <para>
    <command>ptp4l</command> measures time delay in two different ways: <emphasis>peer-to-peer</emphasis> (P2P) or <emphasis>end-to-end</emphasis> (E2E).
   </para>
   <variablelist>
    <varlistentry>
     <term>P2P</term>
     <listitem>
      <para>
       This method is specified with <option>-P</option>.
      </para>
   <para>
    It reacts to changes in the network
    environment faster and is more accurate in measuring the delay. It is only
    used in networks where each port exchanges PTP messages with one other
    port.  P2P needs to be supported by all hardware on the communication path. 
   </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>E2E</term>
     <listitem>
      <para>
       This method is specified with <option>-P</option>. This is the default.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Automatic method selection</term>
     <listitem>
      <para>
       This method is specified with <option>-A</option>. The automatic option starts <command>ptp4l</command> in E2E mode,
       and changes to P2P mode if a peer delay request is received. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <important>
    <para>
     All clocks on a single PTP communication path must use the same method to
     measure the time delay.  A warning will be printed if either a peer delay
     request is received on a port using the E2E mechanism, or an E2E delay
     request is received on a port using the P2P mechanism.  
    </para>
   </important> 
  </sect2>
 </sect1>
</chapter>

