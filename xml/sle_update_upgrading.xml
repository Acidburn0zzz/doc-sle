<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter version="5.0" xml:id="cha.update.sle"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Upgrading &sle;</title>
  <info>
    <abstract>
      <para> &slereg; (&slea;) allows to update an existing system to
        the new version, for example, going from &slea; 11 SP4 to &slea;
        12. No new installation is needed. Existing data, such as home
        and data directories and system configuration, is kept intact.
        You can update from a local CD or DVD drive or from a central
        network installation source. </para>
      <para>This chapter explains how to manually upgrade your &sle;
      system, be it by DVD, network, an automated process, or &susemgr;.</para>
    </abstract>
  </info>

  <sect1 xml:id="sec.update.proc.prep.paths">
    <title>Supported Upgrade Paths for &slea;</title>
    
    <important>
      <title>Cross-architecture Upgrades Are Not Supported</title>
      <para> Cross-architecture upgrades, such as upgrading from a
        32-bit version of &productname; to the 64-bit version, or
        upgrading from big endian to little endian are
        <emphasis>not</emphasis> supported! </para>
      <para> Specifically, &slea; 11 on &ppc; (big endian) to &slea;
        12 on &ppc; (new: little endian!), is <emphasis>not</emphasis>
        supported. </para>
      <para> Also, as &sle; 12 is 64bit only, upgrades from any 32bit
        &sle; 11 systems to &sle; 12 are <emphasis>not</emphasis>
        supported. </para>
    </important>
    
    <variablelist>
      <varlistentry>
        <term>Upgrading from &sle; 10 (any Service Pack)</term>
        <listitem>
          <para> There is no supported direct migration path to &sle;
            12. A fresh installation is recommended instead. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Upgrading from &sle; 11 GA, SP1 or SP2</term>
        <listitem>
          <para> There is no supported direct migration path to &sle;
            12. </para>
          <para> If you cannot do a fresh install, you need to first
            update from &sle; 11 GA to SP1, and then from &sle; 11 SP1
            to SP2, before you can proceed. These steps are described in
            the <link
              xlink:href="https://www.suse.com/documentation/sles11/"
              >&sle; 11 Deployment Guide</link>. </para>
          <para> Then proceed with <xref linkend="sec.update.sle12"/>. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Upgrading from &sle; 11 SP3 or SP4</term>
        <listitem>
          <para> Refer to <xref linkend="sec.update.sle12"/> for
            details. </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 xml:id="sec.update.sle12">
  <title>Supported Methods for Upgrading &sle;</title>
  <remark>toms 2014-02-11: See FATEs #315969 and #313189</remark>
  <para>
   Upgrading from &sle;&nbsp;11 SP3 to &sle;&nbsp;12,
   &sle;&nbsp;11 SP3 to &sle;&nbsp;12 SP1, or
   &sle;&nbsp;11 SP4 to &sle;&nbsp;12 SP1 is supported using one of the
   following methods:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Manual upgrade, booting from an installation medium (see
     <xref linkend="sec.update.sle12.manual"/>).
    </para>
   </listitem>
   <listitem>
    <para>
     Semi-automated migration, possible via SSH <phrase os="sles">(see
     <xref linkend="sec.update.sle12.automated"/>)</phrase>
    </para>
   </listitem>
  </itemizedlist>
  </sect1>

  <sect1 xml:id="sec.update.sle12.manual">
   <title>Manual Upgrade from &slea;&nbsp;11 SP3 to &slea; 12, Using an Installation Source</title>
   <para>
    To upgrade your system this way, you need to boot from an installation
    source, like you would do for a fresh installation. However, when the
    boot screen appears, you need to select <guimenu>Upgrade</guimenu>
    (instead of <guimenu>Installation</guimenu>). The installation source to
    boot from can be one of the following:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      A local installation medium (like a DVD, or an ISO image on a USB mass
      storage device). For detailed instructions, see
      <xref linkend="sec.update.sle12.manual.dvd"/>.
     </para>
    </listitem>
    <listitem>
     <para>
      A network installation source. You can either boot from the local
      medium and then select the respective network installation type, or
      boot via PXE. For detailed instructions, see
      <xref linkend="sec.update.sle12.manual.network"/>.
     </para>
    </listitem>
   </itemizedlist>
   <sect2 xml:id="sec.update.sle12.manual.dvd">
    <title>Upgrading from an Installation Medium</title>
    <para>
     The procedure below describes booting from a DVD as an example, but you
     can also use another local installation medium like an ISO image on a
     USB mass storage device. The way to select the boot method and to start
     up the system from the medium depends on the system architecture and on
     the fact if the machine has a traditional BIOS or UEFI. For details,
     see the links below.
    </para>
    <procedure xml:id="pro.update.sle12.manual.dvd">
     <title>Manually Upgrading from &slea;&nbsp;11 SP3 to &slea;&nbsp;12 SP1, Using a DVD</title>
     <step>
      <para>
       Insert DVD 1 of the &sle; 12 installation media and boot your
       machine. A <guimenu>Welcome</guimenu> screen is displayed, followed
       by the boot screen.
      </para>
     </step>
     <step>
      <para>
       Select the respective boot method to start the system from the medium
       (see <xref linkend="sec.i.yast2.method"/>).
      </para>
     </step>
     <step>
      <para>
       Start up the system from the medium (see
       <xref linkend="sec.i.yast2.startup"/>).
      </para>
     </step>
     <step>
      <para>
       Proceed with the upgrade process as described in
       <xref linkend="sec.update.sle12.start.upgr.after.boot"/>.
      </para>
     </step>
    </procedure>
   </sect2>
   <sect2 xml:id="sec.update.sle12.manual.network">
    <title>Upgrading from a Network Installation Source</title>
    <para>
     If you want to start an upgrade from a network installation source,
     make sure that the following requirements are met:
    </para>
    <variablelist>
     <title>Requirements for Upgrading from a Network Installation Source</title>
     <varlistentry>
      <term>Network Installation Source</term>
      <listitem>
       <para>
        A network installation source is set up according to
        <xref linkend="sec.deployment.remoteinst.instserver"/>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Network Connection and Network Services</term>
      <listitem>
       <para>
        Both the installation server and the target machine have a
        functioning network connection. The network must provide the
        following services: a name service, DHCP (optional, but needed for
        booting via PXE), and OpenSLP (optional).
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Installation Media</term>
      <listitem>
       <para>
        You have a &sle; DVD 1 (or a local ISO image) at hand to boot the
        target system <emphasis>or</emphasis> a target system that is set up
        for booting via PXE according to
        <xref linkend="sec.deployment.remoteinst.boot.pxeprep" xrefstyle="HeadingOnPage"/>.
        Refer to <xref linkend="cha.deployment.remoteinst"/> for in-depth
        information on starting the upgrade from a remote server.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     When upgrading from network installation source, you can either boot
     from the local medium and then select the respective network
     installation type, or boot via PXE. Select the method of your choice
     and proceed as described in
     <xref linkend="pro.update.sle12.manual.network.boot-from-dvd" xrefstyle="select:label"/>
     or
     <xref linkend="pro.update.sle12.manual.network.pxe-boot" xrefstyle="select:label"/>.
    </para>
    <procedure xml:id="pro.update.sle12.manual.network.boot-from-dvd">
     <title>Manually Upgrading from &slea;&nbsp;11 SP3 or SP4 to &slea;&nbsp;12 SP1 via Network Installation Source&mdash;Booting from DVD</title>
     <para>
      This procedure describes booting from a DVD as an example, but you can
      also use another local installation medium like an ISO image on a USB
      mass storage device. The way to select the boot method and to start up
      the system from the medium depends on the system architecture and on
      the fact if the machine has a traditional BIOS or UEFI. For details,
      see the links below.
     </para>
     <step>
      <para>
       Insert DVD 1 of the &sle; 12 installation media and boot your
       machine. A <guimenu>Welcome</guimenu> screen is displayed, followed
       by the boot screen.
      </para>
     </step>
     <step>
      <para>
       Select the type of network installation source you want to use (FTP,
       HTTP, NFS, SMB, or SLP). Usually you get this choice by pressing
       <keycap>F4</keycap>, but in case your machine is equipped with UEFI
       instead of a traditional BIOS, you may need to manually adjust boot
       parameters. For details, see <xref linkend="sec.i.yast2.source.net"/>
       in <xref linkend="cha.inst"/>.
      </para>
     </step>
     <step>
      <para>
       Proceed with the upgrade process as described in
       <xref linkend="sec.update.sle12.start.upgr.after.boot"/>.
      </para>
     </step>
    </procedure>
    <procedure xml:id="pro.update.sle12.manual.network.pxe-boot">
     <title>Manually Upgrading from &slea;&nbsp;11 SP3 or SP4 to &slea;&nbsp;12 SP1 via Network Installation Source&mdash;Booting via PXE</title>
     <para>
      To perform an upgrade from a network installation source using PXE
      Boot, proceed as follows:
     </para>
     <step>
      <para>
       Adjust the setup of your DHCP server to provide the address
       information needed for booting via PXE. For details, see
       <xref linkend="sec.deployment.remoteinst.boot.pxeprep"/>.
      </para>
     </step>
     <step>
      <para>
       Set up a TFTP server to hold the boot image needed for booting via
       PXE. Use DVD 1 of your &sle; 12 installation media for this or
       follow the instructions in
       <xref linkend="sec.deployment.remoteinst.boot.tftp"/>.
      </para>
     </step>
     <step>
      <para>
       Prepare PXE Boot and Wake-on-LAN on the target machine.
      </para>
     </step>
     <step>
      <para>
       Initiate the boot of the target system and use VNC to remotely
       connect to the installation routine running on this machine. For more
       information, see
       <xref linkend="sec.deployment.remoteinst.monitor.vnc"/>.
      </para>
     </step>
     <step>
      <para>
       Proceed with the upgrade process as described in
       <xref linkend="sec.update.sle12.start.upgr.after.boot"/>.
      </para>
     </step>
    </procedure>
   </sect2>
  </sect1>

  <sect1 xml:id="sec.update.sle12.automated">
   <title>Automated Migration from &slea; 11 SP3 or SP4 to &slea; 12 SP1</title>
   <para>
    To perform an automated migration, proceed as follows:
   </para>
   <procedure xml:id="pro.update.sle12.automated">
    <title>Automated Migration from &sle; 11 SP3 to &sle; 12</title>
    <remark>toms 2014-03-19: See FATE#315037</remark>
    <remark role="future">toms 2014-03-20: From SLE12 SP1 on, we should probably base
    this example on GRUB2, but not for GA.</remark>
     <remark>jsrain 2015-09-02: This is still the old system; at some point
       of time we should switch to GRUB2, but as long as amjority of
       customers still runs SLE11, I would stay with legacy GRUB. Anyway, we
       could include both op6tions, that would be probably best solution</remark>
    <step>
     <para>
      Copy the installation Kernel <filename>linux</filename> and the file
      <filename>initrd</filename> from
      <filename>/boot/x86_64/loader/</filename> of your first installation
      DVD to your system's <filename>/boot</filename> directory:
     </para>
<screen><command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/linux /boot/linux.upgrade
<command>cp</command> -vi <replaceable>DVDROOT</replaceable>/boot/x86_64/loader/initrd /boot/initrd.upgrade</screen>
     <para>
      <replaceable>DVDROOT</replaceable> denotes the path where your system
      mounts the DVD, usually
      <filename>/run/media/$USER/$DVDNAME</filename>.
     </para>
    </step>
    <step>
     <para>
      Open the GRUB legacy configuration file
      <filename>/boot/grub/menu.lst</filename> and add another section. For
      other boot loaders, edit the respective configuration file(s). Adjust
      device names accordingly. For example:
     </para>
<screen>title Linux Upgrade Kernel
kernel (hd0,0)/boot/linux.upgrade root=/dev/sda1 upgrade=1 <replaceable>OPTIONAL_PARAMETERS</replaceable>
initrd (hd0,0)/boot/initrd.upgrade</screen>
     <para>
      <replaceable>OPTIONAL_PARAMETERS</replaceable> denote additional boot
      parameters which you might need to boot your system and perform the
      upgrade. These may be kernel parameters needed for your
      system&mdash;check if you to need review and copy those from an
      existing GRUB entry. They also may be &suse;
      <link xlink:href="http://en.opensuse.org/Linuxrc">linuxrc parameters,
      documented online</link>.
     </para>
    </step>
    <step>
     <para>
      If the upgrade should be done automated <phrase os="sles"> (see
      <xref linkend="sec.update.auto.run"/>)</phrase>, add the
      <option>autoupgrade=1</option> to the end of the
      <literal>kernel</literal> line in your GRUB configuration.
     </para>
    </step>
    <step>
     <para>
      Reboot your machine and select the newly added section from the boot
      menu (here: <emphasis>Linux Upgrade Kernel</emphasis>). You can use
      <command>grubonce</command> to preselect the newly created GRUB entry
      for an unattended automatic reboot into the newly created entry. You
      can also use <command>reboot</command> to initiate the reboot from the
      command line.
     </para>
    </step>
    <step>
     <para>
      Proceed with the usual upgrade process as described in
      <xref linkend="sec.update.sle12.start.upgr.after.boot"/>.
     </para>
    </step>
    <step>
     <para>
      After the upgrade process was finished successfully, remove the
      installation Kernel and initrd files
      (<filename>/boot/linux.upgrade</filename> and
      <filename>/boot/initrd.upgrade</filename>). They are useless now and
      are not needed anymore.
     </para>
    </step>
   </procedure>
  </sect1>

  <sect1 xml:id="sec.update.sle12.start.upgr.after.boot">
   <title>Starting the Upgrade Process After Booting</title>
   <para>
    <remark>taroth 2014-11-13: argh, the following is terminology hell regarding
     the software strings: "upgrade"/"update" are used intermittently and
     without clear differentiation...</remark>
   </para>
   <procedure>
    <step>
     <para>
      After you have booted (either from an installation medium or the
      network), select the <guimenu>Upgrade</guimenu> entry on the boot
      screen.
     </para>
     <warning>
      <title>Wrong Choice May Lead to Data Loss</title>
      <para>
       If you select <guimenu>Installation</guimenu> instead of
       <guimenu>Upgrade</guimenu>, data may be lost later. You need to be
       extra careful to not destroy your data partitions by doing a fresh
       installation, e.g. by repartitioning the disks (which can destroy the
       existing partitions) or by reformatting the data partitions (which
       erases all data on them).
      </para>
      <para>
       Make sure to select <guimenu>Upgrade</guimenu> here.
      </para>
     </warning>
     <para>
      &yast; starts the installation system.
     </para>
    </step>
    <step>
     <para>
      On the <guimenu>Welcome</guimenu> screen choose
      <guimenu>Language</guimenu> and <guimenu>Keyboard</guimenu> and accept
      the license agreement. Proceed with <guimenu>Next</guimenu>.
     </para>
     <para>
      &yast; checks your partitions for already installed &sle;
      systems.
     </para>
    </step>
    <step>
     <para>
      On the <guimenu>Select for Upgrade</guimenu> screen, select the
      partition to upgrade and click <guimenu>Next</guimenu>.
     </para>
     <para>
      &yast; mounts the selected partition and displays all repositories
      that have been found on the partition that you wan to upgrade.
     </para>
    </step>
    <step>
     <para>
      On the <guimenu>Previously Used Repositories</guimenu> screen, adjust
      the status of the repositories: enable those you want to include in
      the upgrade process and disable any repositories that are no longer
      needed. Proceed with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      On the <guimenu>Registration</guimenu> screen, select whether to
      register the upgraded system now (by entering your registration data
      and clicking <guimenu>Next</guimenu>) or if to <guimenu>Skip
      Registration</guimenu>. For details on registering your system, see
      <xref linkend="sec.update.registersystem"/>.
     </para>
     <para>
      The following <guimenu>Installation Settings</guimenu> screen is the
      last step before the upgrade starts.
     </para>
    </step>
    <step>
     <para>
      Review the <guimenu>Installation Settings</guimenu> for the upgrade,
      especially the <guimenu>Update Options</guimenu>. Choose between the
      following options:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <guimenu>Only Update Installed Packages</guimenu>, in which case you
        might miss new features shipped with the latest &sle; version.
       </para>
      </listitem>
      <listitem>
       <para>
        <guimenu>Update with Installation of New Software and
        Features</guimenu>. Click <guimenu>Select Patterns</guimenu> if you
        want to enable or disable patterns and packages according to your
        wishes.
       </para>
      </listitem>
     </itemizedlist>
<!--taroth 2014-11-19: fix for bsc#904188-->
     <note>
      <title>Choice of Desktop</title>
      <para>
       If you used KDE before upgrading to &sle; 12
       (<varname>DEFAULT_WM</varname> in
       <filename>/etc/sysconfig/windowmanager</filename> was set to
       <literal>kde*</literal>), your desktop environment will automatically
       be replaced with GNOME after the upgrade. By default, KDM display
       manager will be replaced with GDM.
      </para>
      <para>
       To change the choice of desktop environment or window manager, adjust
       the software selection by clicking <guimenu>Select
       Patterns</guimenu>.
      </para>
     </note>
    </step>
    <step>
     <para>
      If all settings are according to your wishes, start the installation
      and removal procedure by clicking <guimenu>Update</guimenu>.
     </para>
    </step>
   </procedure>
  </sect1>

  <sect1 xml:id="sec.update.sle12.manager">
   <title>Updating via &susemgr;</title>
   <para>
    &susemgr; is a server solution for providing updates, patches, and
    security fixes for &sle; clients. It comes with a set of tools and a
    Web-based user interface for management tasks.
   </para>
   <para>
     <remark>toms 2015-08-24: Adapt this link to a better source; at the
     time being, this was the best what we can get.</remark>
    The &susemgr; documentation at
     <link xlink:href="https://www.suse.com/documentation/suse_manager/book_susemanager_install/data/s1-maintenance-update.html"/> gives an overview of its
    features as well as instructions on how to set up server and clients.
   </para>
  </sect1>
  
  <sect1 xml:id="sec.update.registersystem"><!-- was: sec.add-ons.register -->
    <title>Registering Your System</title>

    <para>
      If you skipped the registration step during the installation, you can
      register your system at any time using the <guimenu>&scc;
        Configuration</guimenu> module in &yast;.
    </para>
    <para>Registering your systems has these advantages:</para>
    <itemizedlist>
      <listitem>
        <para>Getting support</para>
      </listitem>
      <listitem>
        <para>Getting security updates and bug fixes</para>
      </listitem>
      <listitem>
        <para>Access to &scc;</para>
      </listitem>
    </itemizedlist>

    <procedure>
      <step>
        <para>
          Start &yast; and select <menuchoice> <guimenu>Support</guimenu>
            <guimenu>&scc; Configuration</guimenu> </menuchoice> to open the
          <guimenu>Registration</guimenu> dialog.
        </para>
      </step>
      <step>
        <para>
          Provide the <guimenu>E-mail</guimenu> address associated with the
          &suse; account you or your organization uses to manage
          subscriptions. In case you do not have a SUSE account yet, go to the
          &scc; home page (<link xlink:href="&sccurl;"/>) to create one.
        </para>
      </step>
      <step>
        <para>
          Enter the <guimenu>Registration Code</guimenu> you received with your
          copy of &productname;.
        </para>
      </step>
      <step xml:id="step.y2.register.final">
        <para>
          Proceed with <guimenu>Next</guimenu> to start the registration process.
          If one or more local registration servers are available on your
          network, you will be able to choose one of them from a list.
          Alternatively, choose <guimenu>Cancel</guimenu> to ignore the local
          registration servers and register with the default &suse;
          registration server.
        </para>
        <para>
          During the registration the online update channels will be added to
          your installation setup.
        </para>
        <para>
          After successful registration, &yast; shows a list of extensions,
          add-ons, and modules that are available for your system. To select and
          install them, proceed with <xref linkend="sec.add-ons.extensions"/>.
        </para>
      </step>
    </procedure>
  </sect1>

  <sect1 xml:id="sec.update.sle12.multiversion">
    <title>Kernel Package Retention</title>
    <remark>toms 2015-08-26: bsc#753809</remark>
    <remark>toms 2015-08-26: some parts are taken ("stolen") from the
      wiki at https://en.opensuse.org/SDB:Keep_multiple_kernel_versions 
      and adapted
    </remark>
    <indexterm>
      <primary>multiversion kernels</primary>
    </indexterm>
    <para>When installing a new kernel with &yast; or Zypper, &sle;
      preserves the last two kernels and the running one. In most cases
      this is sufficient.</para>
    <para>However, there may be situations where you need to preserve
      more kernel versions, for example, for testing purposes. To enable
      it, &sle; supports the <emphasis>multiversion kernel
        feature</emphasis>. By enabling and configuring this feature the
      default behaviour can be changed and configured to: </para>
    <itemizedlist>
      <listitem>
        <para>delete an old kernel only after the system has been
          rebooted successfully with the new kernel</para>
      </listitem>
      <listitem>
        <para>keep a specified number of older kernels as
          fallback</para>
      </listitem>
      <listitem>
        <para>keep a specific kernel version </para>
      </listitem>
    </itemizedlist>
    <para>After the successful reboot, a script will compare the list
      of installed kernels with the settings in
        <filename>/etc/zypp/zypp.conf</filename> and delete those
      kernels that are no longer needed. </para>
    <sect2 xml:id="sec.update.sle12.multiversion.enable">
      <title>Enabling the Multiversion Kernel Feature</title>
      <para>The default behaviour is defined in the configuration file
          <filename>/etc/zypp/zypp.conf</filename>:</para>
      <screen>&prompt.root;<command>grep</command> ^multiversion /etc/zypp/zypp.conf
multiversion = provides:multiversion(kernel)
multiversion.kernels = latest,latest-1,running</screen>
      <para>Remove any hash mark (#) before the line
          <literal>multiversion</literal> above to enable this feature
        (which should already be the case). The second line is used to
        configure <emphasis>which</emphasis> kernels need to be
        preserved. You need to enable both, otherwise the system will
        keep <emphasis>all</emphasis> kernels and it will fill up your
        hard disc. </para>
      <para>The <literal>multiversion.kernels</literal> line can contain
        several keywords:</para>
      <variablelist>
        <varlistentry>
          <term><option>latest</option></term>
          <listitem>
            <para>Keep kernel with the highest version number</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>latest-<replaceable>N</replaceable></option></term>
          <listitem>
            <para>Keep kernel with the <replaceable>N</replaceable>th highest
              version number; <replaceable>N</replaceable> is a number
              starting from 1</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>running</option></term>
          <listitem>
            <para>Keep the current running kernel</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>oldest</option></term>
          <listitem>
            <para>Keep kernel with the lowest version number (the kernel on the
              released product)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>oldest-<replaceable>N</replaceable></option></term>
          <listitem>
            <para>Keep kernel with the <replaceable>N</replaceable>th lowest
              version number</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>3.12.28-4.6</option></term>
          <listitem>
            <para>Keep this exact kernel version</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 xml:id="sec.update.sle12.multiversion.deleteoldkernel">
      <title>Use Case: Delete an Old Kernel After Reboot Only</title>
      <para>You want to make sure that an old kernel will only be
        deleted after the system has rebooted successfully of the new
        kernel. </para>
      <para>Change the following line in
          <filename>/etc/zypp/zypp.conf</filename>:</para>
      <screen>multiversion.kernels = latest,running</screen>
      <para>The previous parameters tell the system to keep the latest
        kernel and the running one only if they differ.</para>
    </sect2>

    <sect2 xml:id="sec.update.sle12.multiversion.fallback">
      <title>Use Case: Keep Older Kernels as Fallback</title>
      <para>You want to keep one or more kernel versions to have one or
        more <quote>spare</quote> kernels.</para>
      <para>This use case can be useful if you need unstable kernels for
        testing reasons. In case something goes wrong, for example, your
        machine does not boot, you still can use one or more kernel
        versions which are known to be good.</para>
      <para>Change the following line in
          <filename>/etc/zypp/zypp.conf</filename>:</para>
      <screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
      <para>When you reboot your system after the installation of a new
        kernel, the system will keep three kernels: the new and
        running kernel (configured as
        <literal>latest,running</literal>), he previous kernel version
        of the new kernel (configured as <literal>latest-1</literal>), and
        the predecessor of the previous kernel version (configured as
          <literal>latest-2</literal>). </para>
    </sect2>
    
    <sect2 xml:id="sec.update.sle12.multiversion.specificversion">
      <title>Use Case: Keep a Specific Kernel Version</title>
      <para>You make regular system updates and install new kernel versions. 
        However, you are also compiling your own kernel version for various
        reasons and want to make sure, that the system will keep it. 
      </para>
      <para>Change the following line in
          <filename>/etc/zypp/zypp.conf</filename>:</para>
      <screen>multiversion.kernels = latest,3.12.28-4.20,running</screen>
      <para>When you are reboot your system after the installation of a new
        kernel, the system will keep two kernels: the new and running kernel
        (configured as <literal>latest,running</literal> and your
        self-compiled kernel (configured as <literal>3.12.28-4.20</literal>).
      </para>
    </sect2>
  </sect1>
</chapter>
