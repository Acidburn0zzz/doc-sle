<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>

<article id="article.vt.best.practices" lang="en">
 <?suse-quickstart color="suse"?>
 <title>Virtualization Best Practices</title>
 <subtitle>&sle; &productname; &productnumber;</subtitle>
 <articleinfo>
  <productnumber>&productnumber;</productnumber><productname>&sle;
  &productname;</productname>
 </articleinfo>

<!--
we can write it based on on scenario?
Virtualization Capabilities:
Consolidation (hardware1+hardware2 -> hardware)
 Isolation
 Migration (hardware1 -> hardware2)
 Disaster recovery
 Dynamic load balancing
-->

<sect1 id="vt.best.intro">
 <title>Taking into consideration</title>
 <para>
  backup before doing anything
  testing acpi shutdown/poweroff before production
  usage of libvirt framework
  qemu-system-arch not visible under libvirt
  Using qemu-system-i386 vs qemu-system-x86_64
 </para>
</sect1>


<sect1 id="vt.best.guest.option">
 <title>Guest options</title>
 <para>
  avoid over-allocation on Guest
  Keyboard layout option
  VGA trouble debug
  clock setting (common source)
  kvm clock and ntp
bio-based driver on slow devices  
 </para>
</sect1>


<sect1 id="vt.best.perf">
 <title>Performance</title>
 <para>
 </para>


 <sect2 id="vt.best.perf.general">
  <title></title>
  <para>
Minimize software on host (reduce resource, reduce security/increase
aviability)
PV drivers should be used (virtio_blk, virtio_net, virtio_balloon)
virtio-net recomendation (performance benefit)
performance cirrus: 16bit color
KSM and Page sharing
Swapping
I/O Scheduler
NFS storage
Updating guest machine type used   
  </para>
 </sect2>
 
 <sect2 id="vt.best.perf.cpu">
  <title>CPU parameter</title>
  <para>
Avoid CPU overcommit
Scheduler
vCPU model and features
 Normalize to allow migration among heterogeneous hosts
vCPU topology
 Multiple sockets with a single core and thread generally give best
 performance
vCPU Pinning
 Constrain vCPU threads to a NUMA node
  </para>
 </sect2>
 <sect2 id="vt.best.perf.numa">
  <title>NUMA</title>
  <para>
Potentially huge impact on performance
Consider host topology when sizing guests
Avoid allocating VM memory across NUMA nodes
Prevent vCPUs from floating across NUMA nodes
  </para>
 </sect2>
 <sect2 id="vt.best.perf.mem">
  <title>Memory</title>
  <para>
Hugepages
HugeTLB
Policy for allocation in NUMA topology
 strict
 interleave
 preferred
  </para>
 </sect2>
</sect1>


<sect1 id="vt.best.stor">
 <title>Storage and Filesystem</title>
 <para>
  
 </para>

 <sect2 id="vt.best.stor.general">
  <title></title>
  <para>
   Access CD/DVD -> storage pool
deleting pool
VM guest, UUID and DOMID
Brtfs and guest image
SCSI Host Adapter name (avoid /dev/sdX)
qemu direct access to host drives (-drive file=)
QEMU Storage formats
  </para>
 </sect2>
 <sect2 id="vt.best.stor.blkvsimg">
  <title>BLK VS Images files</title>
  <para>
Block devices
 Better performance
 Use “standard” tools for administration/disk modification
 Accessible from host (pro and con)

Image Files
 Easier system management
  Easily move, clone, backup domains
 Comprehensive toolkit (guestfs) for image manipulation
 Reduce overhead through sparse files
  </para>
 </sect2>
 
 <sect2 id="vt.best.stor.imageformat">
  <title></title>
  <para>
raw
 Most common format
 Historically, best performance
qcow2
 Required for snapshot support in libvirt + tools
 Improved performance and stability
qed
 Next generation qcow

vhd/vhdx
 Also known as 'vpc'
vmdk
 Performance
 Suggest converting to raw or qcow2
 qemu-img convert -f vmdk -O qcow2 img.vmdk img.qcow2
  </para>
 </sect2>

 <sect2 id="vt.best.stor.diskio">
  <title></title>
  <para>
Disk IO Modes
native
 kernel asynchronous IO
threads
 host user-mode based threads
default
 'threads' mode in SLES
  </para>
 </sect2>
</sect1>


<sect1 id="vt.best.snapsav">
 <title>Saving, migrating and Snapshoting</title>
 <para>
Migration requirements/Recomendations
save VM and start/boot (memory invalid)
snapshot naming importance
avoid qemu-img snapshot
cache mode in live migration
guestfs and live system
 </para>
</sect1>


<sect1 id="vt.best.security">
 <title>Security consideration</title>
 <para>
Connection to guest: security policy
Authentication for libvirtd and VNC need to be configured separately
RNG and entropy
QEMU Guest Agent
The VNC TLS (set at start)
 </para>
</sect1>


<sect1 id="vt.best.pcipass">
 <title>pcpipass</title>
 <para>
Pci device (not online!, managed/unmanaged)
howto check SR-IOV capabilities
 </para>
</sect1>

<sect1 id="vt.best.net">
 <title>Network Tips</title>
 <para>
Virtual NICs
 virtio-net (KVM)
  multi-queue option
 vhost-net (KVM)
  Default vNIC, best performance
 netbk (Xen)
  kernel threads vs tasklets
Emulated NICs
 e1000
  Default and preferred emulated NIC
 rtl8139

Shared physical NICs
 SR-IOV
  macvtap
 Physicial NICs
  PCI passthrough

use multi-network to avoid congestion
 admin, storage, migration ...
 use arp-filter to prevent arp flux
same MTU in all devices to avoid fragmentation
yast to configure bridge
Network MAC address
bridge configuration in bridge.conf file
PCI passthrough Vfio to improve performance
 </para>
</sect1>
</article>
