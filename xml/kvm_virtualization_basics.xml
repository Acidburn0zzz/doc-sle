<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.kvm.intro">
 <title>Introduction to &kvm; Virtualization</title>
 <para></para>
 <sect1 id="sec.kvm.intro">
  <title>Basic Components</title>
  <para>
   &kvm; is a full virtualization solution <phrase condition="kvm4x86">for
   x86 processors</phrase> supporting hardware
   virtualization<phrase
   condition="kvm4x86"> (Intel VT or
   AMD-V)</phrase>. It consists of two main components: A set of Kernel
   modules<phrase
   condition="kvm4x86"> (<systemitem>kvm.ko</systemitem>,
   <systemitem>kvm-intel.ko</systemitem>, and
   <systemitem>kvm-amd.ko</systemitem>)</phrase> providing the core
   virtualization infrastructure and processor specific drivers and a
   userspace program (<systemitem class="resource">qemu-kvm</systemitem>)
   that provides emulation for virtual devices and control mechanisms to
   manage &vmguest;s (virtual machines). The term &kvm; more properly refers
   to the Kernel level virtualization functionality, but is in practice more
   commonly used to reference the userspace component.
  </para>

  <para>
   &vmguest;s (virtual machines), virtual storage and networks can be
   managed with &libvirt;-based and &qemu; tools. &libvirt; is a library
   that provides an API to manage &vmguest;s based on different
   virtualization solutions, among them &kvm; and &xen;. It offers a
   graphical user interface as well as a command line program. The &qemu;
   tools are &kvm;/&qemu; specific and are only available for the command
   line.
  </para>
 </sect1>

 <sect1 id="sec.kvm.intro.package">
  <title>The <systemitem class="resource">kvm</systemitem> package</title>

  <para>
   The <systemitem class="resource">kvm</systemitem> package provides
   <command>qemu-kvm</command>, the program that performs the I/O emulation
   for the &vmguest;. In addition to the qemu-kvm program, the
   <systemitem
   class="resource">kvm</systemitem> package also comes with
   a debug level monitoring utility (<command>kvm_stat</command>), firmware
   components, key-mapping files, and scripts.
   <phrase condition="kvm4x86">The deprecated Windows drivers
   (<filename>win-virtio-drivers.iso</filename>) are no longer provided. For
   more information, see
   <xref
   linkend="kvm.deprecated.features"/>.</phrase>
  </para>

  <para>
   Originally, the <systemitem class="resource">kvm</systemitem> package
   also provided the &kvm; Kernel modules. Now, these modules are included
   with the Kernel and only userspace components are included in the current
   <systemitem class="resource">kvm</systemitem> package.
  </para>

  <para>
   Support for creating and manipulating file-based virtual disk images is
   provided by <command>qemu-img</command>. <command>qemu-img</command> is
   provided by the package
   <systemitem class="resource">qemu-tools</systemitem>.
  </para>
 </sect1>
 <sect1 id="sec.kvm.intro.install">
  <title>Installing &kvm;</title>
  <para>
   &kvm; is not installed by default. To install &kvm; and KVM tools, proceed as follows:
  </para>
  <procedure>
   <step>
    <para>
     Start &yast; and choose <menuchoice> <guimenu>Virtualization</guimenu>
     <guimenu>Installing Hypervisor and Tools</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
        Select <guimenu>KVM server</guimenu>, <guimenu>KVM tools</guimenu> and confirm with
     <guimenu>Accept</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Confirm the list of packages that is to be installed with
     <guimenu>Install</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Agree to set up a network bridge by clicking <guimenu>Yes</guimenu>. It
     is recommended using a bridge on a &vmhost; (virtual machine host). If
     you prefer to manually configure a different network setup, you can
     safely skip this step by clicking <guimenu>No</guimenu>.
    </para>
   </step>
   <step>
    <para>
     After the setup has been finished, you can reboot the machine as &yast;
     suggests or alternatively load the required kernel modules manually and
     start &libvirtd; to avoid a reboot:
    </para>
<screen condition="kvm4x86">modprobe kvm-intel # on Intel machines only
modprobe kvm-amd   # on AMD machines only
modprobe vhost-net
systemctl start libvirtd.service</screen>
<screen condition="kvm4zSeries">modprobe kvm
systemctl start libvirtd.service</screen>
   </step>
  </procedure>

  <note condition="kvm4x86">
   <title>The <literal>vhost-net</literal> Kernel Module</title>
   <para>
    The vhost-net kernel module allows for a more efficient network
    transport to the guest. It is automatically used by
    <systemitem
     class="library">libvirt </systemitem> if loaded, or
    when using the <command>qemu-kvm</command> command line, by adding
    <option>,vhost=on</option> to the networking option.
   </para>
  </note>
 </sect1>
</chapter>
