<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha_inst_system_iscsi" lang="en">
  <title>Mass Storage over IP Networks: iSCSI</title>
  <para>
   One of the central tasks in computer centers and when operating servers
   is providing hard disk capacity for server systems. Fibre Channel is
   often used for this purpose. iSCSI (Internet SCSI) solutions provide a
   lower-cost alternative to Fibre Channel that can leverage commodity
   servers and Ethernet networking equipment. Linux iSCSI provides iSCSI
   initiator and target software for connecting Linux servers to central
   storage systems.
  </para>
  <figure pgwide="0" id="bo1n90f">
   <title>iSCSI SAN with an iSNS Server</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="iscsi_san_a.svg" width="445pt" format="SVG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="iscsi_san_a.png" width="445pt" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <para>
   iSCSI is a storage networking protocol that facilitates data transfers of
   SCSI packets over TCP/IP networks between block storage devices and
   servers. iSCSI target software runs on the target server and defines the
   logical units as iSCSI target devices. iSCSI initiator software runs on
   different servers and connects to the target devices to make the storage
   devices available on that server.
  </para>
  <important>
   <para>
    It is not supported to run iSCSI target software and iSCSI initiator
    software on the same server in a production environment.
   </para>
  </important>
  <para>
   The iSCSI target and initiator servers communicate by sending SCSI
   packets at the IP level in your LAN. When an application running on the
   initiator server starts an inquiry for an iSCSI target device, the
   operating system produces the necessary SCSI commands. The SCSI commands
   are then embedded in IP packets and encrypted as necessary by software
   that is commonly known as the <emphasis>iSCSI initiator</emphasis>. The
   packets are transferred across the internal IP network to the
   corresponding iSCSI remote station, called the <emphasis>iSCSI
   target</emphasis>.
  </para>
  <para>
   Many storage solutions provide access over iSCSI, but it is also possible
   to run a Linux server that provides an iSCSI target. In this case, it is
   important to set up a Linux server that is optimized for file system
   services. The iSCSI target accesses block devices in Linux. Therefore, it
   is possible to use RAID solutions to increase disk space as well as a lot
   of memory to improve data caching. For more information about RAID, also
   see <xref linkend="raidyast" xrefstyle="ChapTitleOnPage"/>.
  </para>
  <sect1 id="bj4rqa5">
   <title>Installing iSCSI Target and Initiator</title>

   <para>
    &yast; includes entries for iSCSI Target and iSCSI Initiator software, but
    the packages are not installed by default.
   </para>

   <important>
    <para>
     It is not supported to run iSCSI target software and iSCSI initiator
     software on the same server in a production environment.
    </para>
   </important>

   <sect2 id="bj4rsgl">
    <title>Installing iSCSI Target Software</title>
    <para>
     Install the iSCSI target software on the server where you want to
     create iSCSI target devices.
    </para>
    <procedure id="bj4rsgm">
     <step id="bj4rsgn">
      <para>
       Launch &yast; as the &rootuser; user.
      </para>
     </step>
     <step id="bj4rsgo">
      <para>
       Select <guimenu>Network Services</guimenu><guimenu>iSCSI
       Target.</guimenu>
      </para>
     </step>
     <step id="bj4rsma">
      <para>
       When you are prompted to install the <filename>iscsitarget</filename>
       package, click <guimenu>Install</guimenu>.
      </para>
     </step>
     <step id="bj4rsz7">
      <para>
       Follow the on-screen install instructions, and provide the
       installation media as needed.
      </para>
      <para>
       When the installation is complete, &yast; opens to the iSCSI Target
       Overview page with the <guimenu>Service</guimenu> tab selected.
      </para>
     </step>
     <step id="bj58wf8">
      <para>
       Continue with
       <xref linkend="sec_inst_system_iscsi_target" xrefstyle="SectTitleOnPage"/>.
      </para>
     </step>
    </procedure>
   </sect2>

   <sect2 id="bj4rrj9">
    <title>Installing the iSCSI Initiator Software</title>
    <para>
     Install the iSCSI initiator software on each server where you want to
     access the target devices that you set up on the iSCSI target server.
    </para>
    <procedure id="bj4rqhd">
     <step id="bj4rqhe">
      <para>
       Launch &yast; as the &rootuser; user.
      </para>
     </step>
     <step id="bj4rqsk">
      <para>
       Select <guimenu>Network Services</guimenu><guimenu>iSCSI
       Initiator.</guimenu>
      </para>
     </step>
     <step id="bj4rsth">
      <para>
       When you are prompted to install the <filename>open-iscsi</filename>
       package, click <guimenu>Install</guimenu>.
      </para>
     </step>
     <step id="bj4rt8u">
      <para>
       Follow the on-screen install instructions, and provide the
       installation media as needed.
      </para>
      <para>
       When the installation is complete, &yast; opens to the iSCSI Initiator
       Overview page with the <guimenu>Service</guimenu> tab selected.
      </para>
     </step>
     <step id="bj4saer">
      <para>
       Continue with
       <xref linkend="sec_inst_system_iscsi_initiator" xrefstyle="SectTitleOnPage"/>.
      </para>
     </step>
    </procedure>
   </sect2>
  </sect1>
  <sect1 id="sec_inst_system_iscsi_target">
   <title>Setting Up an iSCSI Target</title>

   <para>
    &productname; comes with an open source iSCSI target
    solution that evolved from the Ardis iSCSI target. A basic setup can be
    done with &yast;, but to take full advantage of iSCSI, a manual setup is
    required.
   </para>

   <sect2 id="bj5erpx">
    <title>Preparing the Storage Space</title>
    <para>
     The iSCSI target configuration exports existing block devices to iSCSI
     initiators. You must prepare the storage space you want to use in the
     target devices by setting up unformatted partitions or devices by using
     the Partitioner in &yast;, or by partitioning the devices from the
     command line. iSCSI LIO targets can use unformatted partitions with
     Linux, Linux LVM, or Linux RAID file system IDs.
    </para>
    <important>
     <para>
      After you set up a device or partition for use as an iSCSI target, you
      never access it directly via its local path. Do not specify a mount
      point for it when you create it.
     </para>
    </important>
    <sect3 id="bj5rdlu">
     <title>Partitioning Devices</title>
     <procedure id="bj5expw">
      <step id="bj5expx">
       <para>
        Launch &yast; as the &rootuser; user.
       </para>
      </step>
      <step id="bj5f8l7">
       <para>
        Select <guimenu>System</guimenu><guimenu>Partitioner</guimenu>.
       </para>
      </step>
      <step id="bj5f902">
       <para>
        Click <guimenu>Yes</guimenu> to continue through the warning about
        using the Partitioner.
       </para>
      </step>
      <step id="bj5f9hl">
       <para>
        Click <guimenu>Add</guimenu> to create a partition, but do not
        format it, and do not mount it.
       </para>
       <substeps>
        <step id="bj5fl5y">
         <para>
          Select <guimenu>Primary Partition</guimenu>, then click
          <guimenu>Next</guimenu>.
         </para>
        </step>
        <step id="bj5fld1">
         <para>
          Specify the amount of space to use, then click
          <guimenu>Next</guimenu>.
         </para>
        </step>
        <step id="bj5flp9">
         <para>
          Select <guimenu>Do not format</guimenu>, then specify the file
          system ID type.
         </para>
         <para>
          iSCSI targets can use unformatted partitions with Linux, Linux
          LVM, or Linux RAID file system IDs.
         </para>
        </step>
        <step id="bj5flz6">
         <para>
          Select <guimenu>Do not mount</guimenu>.
         </para>
        </step>
        <step id="bj5fm1h">
         <para>
          Click <guimenu>Finish</guimenu>.
         </para>
        </step>
       </substeps>
      </step>
      <step id="bj5fjxr">
       <para>
        Repeat <xref linkend="bj5f9hl" xrefstyle="StepXRef"/> for each area
        that you want to use later as an iSCSI LUN.
       </para>
      </step>
      <step id="bj5fm9v">
       <para>
        Click <guimenu>Accept</guimenu> to keep your changes, then close
        &yast;.
       </para>
      </step>
     </procedure>
    </sect3>
    <sect3 id="bj5py87">
     <title>Partitioning Devices in a Virtual Environment</title>
     <para>
      You can use a &xen; guest server as the iSCSI target server. You must
      assign the storage space you want to use for the iSCSI storage devices
      to the guest virtual machine, then access the space as virtual disks
      within the guest environment. Each virtual disk can be a physical
      block device, such as an entire disk, partition, or volume, or it can
      be a file-backed disk image where the virtual disk is a single image
      file on a larger physical disk on the &xen; host server. For the best
      performance, create each virtual disk from a physical disk or a
      partition. After you set up the virtual disks for the guest virtual
      machine, start the guest server, then configure the new blank virtual
      disks as iSCSI target devices by following the same process as for a
      physical server.
     </para>
     <para>
      file-backed disk images are created on the &xen; host server, then
      assigned to the &xen; guest server. By default, &xen; stores file-backed
      disk images in the
      <filename>/var/lib/xen/images/<replaceable>vm_name</replaceable></filename>
      directory, where
      <filename><replaceable>vm_name</replaceable></filename> is the name of
      the virtual machine.
     </para>
     <para>
      For example, if you want to create the disk image
      <filename>/var/lib/xen/images/vm_one/xen-0</filename> with a size of 4
      GB, first ensure that the directory is there, then create the image
      itself.
     </para>
     <procedure id="bj5q7wn">
      <step id="bj5q7wo">
       <para>
        Log in to the host server as the &rootuser; user.
       </para>
      </step>
      <step id="bj5q4xg">
       <para>
        At a terminal console prompt, enter the following commands
       </para>
<screen>
mkdir -p /var/lib/xen/images/vm_one
dd if=/dev/zero of=/var/lib/xen/images/vm_one/xen-0 seek=1M bs=4096 count=1
</screen>
      </step>
      <step id="bj5q56y">
       <para>
        Assign the file system image to the guest virtual machine in the &xen;
        configuration file.
       </para>
      </step>
      <step id="bj5q81p">
       <para>
        Log in as the &rootuser; user on the guest
        server, then use &yast; to set up the virtual block device by using
        the process in <xref linkend="bj5rdlu" xrefstyle="HeadingOnPage"/>.
       </para>
      </step>
     </procedure>
    </sect3>
   </sect2>

   <sect2 id="sec_inst_system_iscsi_target_yast">
    <title>Creating iSCSI Targets with &yast;</title>
    <para>
     To configure the iSCSI target, run the <guimenu>iSCSI Target</guimenu>
     module in &yast;. The configuration is split into three tabs. In the
     <guimenu>Service</guimenu> tab, select the start mode and the firewall
     settings. If you want to access the iSCSI target from a remote machine,
     select <guimenu>Open Port in Firewall</guimenu>. If an iSNS server
     should manage the discovery and access control, activate <guimenu>iSNS
     Access Control</guimenu> and enter the IP address of your iSNS server.
     You cannot use hostnames or DNS names; you must use the IP address. For
     more about iSNS, read
     <xref linkend="isns" xrefstyle="ChapTitleOnPage"/>.
    </para>
    <para>
     The <guimenu>Global</guimenu> tab provides settings for the iSCSI
     server. The authentication set here is used for the discovery of
     services, not for accessing the targets. If you do not want to restrict
     the access to the discovery, use <guimenu>No Authentication</guimenu>.
    </para>
    <para>
     If authentication is needed, there are two possibilities to consider.
     One is that an initiator must prove that it has the permissions to run
     a discovery on the iSCSI target. This is done with <guimenu>Incoming
     Authentication</guimenu>. The other is that the iSCSI target must prove
     to the initiator that it is the expected target. Therefore, the iSCSI
     target can also provide a user name and password. This is done with
     <guimenu>Outgoing Authentication</guimenu>. Find more information about
     authentication in
     <ulink url="http://www.ietf.org/rfc/rfc3720.txt"><citetitle>RFC
     3720</citetitle></ulink>.
    </para>
    <para>
     The targets are defined in the <guimenu>Targets</guimenu> tab. Use
     <guimenu>Add</guimenu> to create a new iSCSI target. The first dialog
     box asks for information about the device to export.
    </para>
    <variablelist>
     <varlistentry id="bgchy7j">
      <term>Target</term>
      <listitem>
       <para role="intro">
        The <guimenu>Target</guimenu> line has a fixed syntax that looks
        like the following:
       </para>
<screen>
iqn.yyyy-mm.&lt;reversed domain name&gt;:<replaceable>unique_id</replaceable>
</screen>
       <para>
        It always starts with iqn. yyyy-mm is the format of the date when
        this target is activated. Find more about naming conventions in
        <ulink url="http://www.ietf.org/rfc/rfc3722.txt"><citetitle>RFC
        3722</citetitle></ulink>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="bgchy7k">
      <term>Identifier</term>
      <listitem>
       <para>
        The <guimenu>Identifier</guimenu> is freely selectable. It should
        follow some scheme to make the whole system more structured.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="bgchy7l">
      <term>LUN</term>
      <listitem>
       <para>
        It is possible to assign several LUNs to a target. To do this,
        select a target in the <guimenu>Targets</guimenu> tab, then click
        <guimenu>Edit</guimenu>. Then, add new LUNs to an existing target.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="bgchy7m">
      <term>Path</term>
      <listitem>
       <para>
        Add the path to the block device or file system image to export.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     The next menu configures the access restrictions of the target. The
     configuration is very similar to the configuration of the discovery
     authentication. In this case, at least an incoming authentication
     should be setup.
    </para>
    <para>
     <guimenu>Next</guimenu> finishes the configuration of the new target,
     and brings you back to the overview page of the
     <guimenu>Target</guimenu> tab. Activate your changes by clicking
     <guimenu>Finish</guimenu>.
    </para>
    <para>
     To create a target device:
    </para>
    <procedure id="bj5fomq">
     <step id="bj5fomr">
      <para>
       Launch &yast; as the &rootuser; user.
      </para>
     </step>
     <step id="bj5foms">
      <para>
       Select <guimenu>Network Services</guimenu><guimenu>iSCSI
       Target.</guimenu>
      </para>
      <para role="intro">
       &yast; opens to the iSCSI Target Overview page with the
       <guimenu>Service</guimenu> tab selected.
      </para>
      <informalfigure pgwide="0">
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="iscsi_target_service_a.png" width="307pt" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="iscsi_target_service_a.png" width="307pt" format="PNG"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
     </step>
     <step id="bj5fomv">
      <para>
       In the <guimenu>Service Start </guimenu>area, select one of the
       following:
      </para>
      <itemizedlist>
       <listitem>
        <formalpara id="bj5fomw">
         <title>When booting:</title>
         <para>
          Automatically start the initiator service on subsequent server
          reboots.
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara id="bj5fomx">
         <title>Manually (default):</title>
         <para>
          Start the service manually.
         </para>
        </formalpara>
       </listitem>
      </itemizedlist>
     </step>
     <step id="bj5fomy">
      <para>
       If you are using iSNS for target advertising, select the
       <guimenu>iSNS Access Control</guimenu> check box, then type the IP
       address.
      </para>
     </step>
     <step id="bj5fydf">
      <para>
       If desired, open the firewall ports to allow access to the server
       from remote computers.
      </para>
      <substeps>
       <step id="bj5fomz">
        <para>
         Select the <guimenu>Open Port in Firewall</guimenu> check box.
        </para>
       </step>
       <step id="bj5fon0">
        <para>
         Specify the network interfaces where you want to open the port by
         clicking <guimenu>Firewall Details</guimenu>, selecting the check
         box next to a network interface to enable it, then clicking
         <guimenu>OK</guimenu> to accept the settings.
        </para>
       </step>
      </substeps>
     </step>
     <step id="bj5fon1">
      <para>
       If authentication is required to connect to target devices you set up
       on this server, select the <guimenu>Global</guimenu> tab, deselect
       <guimenu>No Authentication</guimenu> to enable authentication, then
       specify the necessary credentials for incoming and outgoing
       authentication.
      </para>
      <para role="intro">
       The <guimenu>No Authentication</guimenu> option is enabled by
       default. For a more secure configuration, you can specify
       authentication for incoming, outgoing, or both incoming and outgoing.
       You can also specify multiple sets of credentials for incoming
       authentication by adding pairs of user names and passwords to the
       list under <guimenu>Incoming Authentication</guimenu>.
      </para>
      <informalfigure pgwide="0">
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="iscsi_target_global_a.png" width="307pt" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="iscsi_target_global_a.png" width="307pt" format="PNG"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
     </step>
     <step id="bj5fon2">
      <para>
       Configure the iSCSI target devices.
      </para>
      <substeps>
       <step id="bj5fon3">
        <para>
         Select the <guimenu>Targets</guimenu> tab.
        </para>
       </step>
       <step id="bj5fzxo">
        <para>
         If you have not already done so, select and delete the example
         iSCSI target from the list, then confirm the deletion by clicking
         <guimenu>Continue</guimenu>.
        </para>
       </step>
       <step id="bj5fon4">
        <para>
         Click <guimenu>Add</guimenu> to add a new iSCSI target.
        </para>
        <para>
         The iSCSI target automatically presents an unformatted partition or
         block device and completes the Target and Identifier fields.
        </para>
       </step>
       <step id="bj5g2b7">
        <para>
         You can accept this, or browse to select a different space.
        </para>
        <para>
         You can also subdivide the space to create LUNs on the device by
         clicking <guimenu>Add</guimenu> and specifying sectors to allocate
         to that LUN. If you need additional options for these LUNs, select
         <guimenu>Expert Settings</guimenu>.
        </para>
       </step>
       <step id="bj5g2n0">
        <para>
         Click <guimenu>Next</guimenu>
        </para>
       </step>
       <step id="bj5g45h">
        <para>
         Repeat <xref linkend="bj5fon4" xrefstyle="StepXRef"/> to
         <xref linkend="bj5g2n0" xrefstyle="StepXRef"/> for each iSCSI
         target device you want to create.
        </para>
       </step>
       <step id="bojud2n">
        <para>
         (Optional) On the <guimenu>Service</guimenu> tab, click
         <guimenu>Save</guimenu> to export the information about the
         configured iSCSI targets to a file.
        </para>
        <para>
         This makes it easier to later provide this information to consumers
         of the resources.
        </para>
       </step>
       <step id="bj5fon5">
        <para>
         Click <guimenu>Finish</guimenu> to create the devices, then click
         <guimenu>Yes</guimenu> to restart the iSCSI software stack.
        </para>
       </step>
      </substeps>
     </step>
    </procedure>
   </sect2>

   <sect2 id="sec_inst_system_iscsi_target_manual">
    <title>Configuring an iSCSI Target Manually</title>
    <para>
     Configure an iSCSI target in <filename>/etc/ietd.conf</filename>. All
     parameters in this file before the first <emphasis>Target</emphasis>
     declaration are global for the file. Authentication information in this
     portion has a special meaning&mdash;it is not global, but is used for
     the discovery of the iSCSI target.
    </para>
    <para>
     If you have access to an iSNS server, you should first configure the
     file to tell the target about this server. The address of the iSNS
     server must always be given as an IP address. You cannot specify the
     DNS name for the server. The configuration for this functionality looks
     like the following:
    </para>
<screen>
iSNSServer 192.168.1.111
iSNSAccessControl no
</screen>
    <para>
     This configuration makes the iSCSI target register itself with the
     <literal>iSNS</literal> server, which in turn provides the discovery
     for initiators. For more about iSNS, see
     <xref linkend="isns" xrefstyle="ChapTitleOnPage"/>. The access control
     for the iSNS discovery is not supported. Keep
     <literal>iSNSAccessControl no</literal>.
    </para>
    <para>
     All direct iSCSI authentication can be done in two directions. The
     iSCSI target can require the iSCSI initiator to authenticate with the
     <option>IncomingUser</option>, which can be added multiple times. The
     iSCSI initiator can also require the iSCSI target to authenticate. Use
     <option>OutgoingUser</option> for this. Both have the same syntax:
    </para>
<screen>
IncomingUser &lt;username&gt; &lt;password&gt;
OutgoingUser &lt;username&gt; &lt;password&gt;
</screen>
    <para>
     The authentication is followed by one or more target definitions. For
     each target, add a <literal>Target</literal> section. This section
     always starts with a <literal>Target</literal> identifier followed, by
     definitions of logical unit numbers:
    </para>
<screen>
Target iqn.yyyy-mm.&lt;reversed domain name&gt;[:identifier]
          Lun 0 Path=/dev/mapper/system-v3
          Lun 1 Path=/dev/hda4
          Lun 2 Path=/var/lib/xen/images/xen-1,Type=fileio
</screen>
    <para>
     In the <literal>Target</literal> line, <literal>yyyy-mm</literal> is
     the date when this target is activated, and
     <literal>identifier</literal> is freely selectable. Find more about
     naming conventions in
     <ulink url="http://www.ietf.org/rfc/rfc3722.txt"><citetitle>RFC
     3722</citetitle></ulink>. Three different block devices are exported in
     this example. The first block device is a logical volume (see also
     <xref linkend="cha.lvm" xrefstyle="ChapTitleOnPage"/>), the second is an
     IDE partition, and the third is an image available in the local file
     system. All these look like block devices to an iSCSI initiator.
    </para>
    <para>
     Before activating the iSCSI target, add at least one
     <option>IncomingUser</option> after the <option>Lun</option>
     definitions. It does the authentication for the use of this target.
    </para>
    <para>
     To activate all your changes, restart the iscsitarget daemon with
     <command>sudo systemctl restart open-iscsi.service</command>. Check
     your configuration in the <filename>/proc</filename> file system:
    </para>
<screen>
cat /proc/net/iet/volume
tid:1 name:iqn.2006-02.com.example.iserv:systems
        lun:0 state:0 iotype:fileio path:/dev/mapper/system-v3
        lun:1 state:0 iotype:fileio path:/dev/hda4
        lun:2 state:0 iotype:fileio path:/var/lib/xen/images/xen-1
</screen>
    <para>
     There are many more options that control the behavior of the iSCSI
     target. For more information, see the man page of
     <filename>ietd.conf</filename>.
    </para>
    <para>
     Active sessions are also displayed in the <filename>/proc</filename>
     file system. For each connected initiator, an extra entry is added to
     <filename>/proc/net/iet/session</filename>:
    </para>
<screen>
cat /proc/net/iet/session
tid:1 name:iqn.2006-02.com.example.iserv:system-v3
   sid:562949957419520 initiator:iqn.2005-11.de.suse:cn=rome.example.com,01.9ff842f5645
      cid:0 ip:192.168.178.42 state:active hd:none dd:none
   sid:281474980708864 initiator:iqn.2006-02.de.suse:01.6f7259c88b70
      cid:0 ip:192.168.178.72 state:active hd:none dd:none
</screen>
   </sect2>

   <sect2 id="sec_inst_system_iscsi_target_ietadm">
    <title>Configuring Online Targets with ietadm</title>
    <para>
     When changes to the iSCSI target configuration are necessary, you must
     always restart the target to activate changes that are done in the
     configuration file. Unfortunately, all active sessions are interrupted
     in this process. To maintain an undisturbed operation, the changes
     should be done in the main configuration file
     <filename>/etc/ietd.conf</filename>, but also made manually to the
     current configuration with the administration utility ietadm.
    </para>
    <para>
     To create a new iSCSI target with a LUN, first update your
     configuration file. The additional entry could be:
    </para>
<screen>
Target iqn.2006-02.com.example.iserv:system2
          Lun 0 Path=/dev/mapper/system-swap2
          IncomingUser joe secret
</screen>
    <para>
     To set up this configuration manually, proceed as follows:
    </para>
    <procedure id="bgchy7n">
     <step id="bgchy7o">
      <para>
       Create a new target with the command <command>ietadm --op new --tid=2
       --params Name=iqn.2006-02.com.example.iserv:system2</command>.
      </para>
     </step>
     <step id="bgchy7p">
      <para>
       Add a logical unit with <command>ietadm --op new --tid=2 --lun=0
       --params Path=/dev/mapper/system-swap2</command>.
      </para>
     </step>
     <step id="bgchy7q">
      <para>
       Set the user name and password combination on this target with
       <command>ietadm --op new --tid=2 --user
       --params=IncomingUser=joe,Password=secret</command>.
      </para>
     </step>
     <step id="bgchy7r">
      <para>
       Check the configuration with <command>cat
       /proc/net/iet/volume</command>.
      </para>
     </step>
    </procedure>
    <para>
     It is also possible to delete active connections. First, check all
     active connections with the command <command>cat
     /proc/net/iet/session</command>. This might look like:
    </para>
<screen>
cat /proc/net/iet/session
tid:1 name:iqn.2006-03.com.example.iserv:system
        sid:281474980708864 initiator:iqn.1996-04.com.example:01.82725735af5
                cid:0 ip:192.168.178.72 state:active hd:none dd:none
</screen>
    <para>
     To delete the session with the session ID 281474980708864, use the
     command <command>ietadm --op delete --tid=1 --sid=281474980708864
     --cid=0</command>. Be aware that this makes the device inaccessible on
     the client system and processes accessing this device are likely to
     hang.
    </para>
    <para>
     ietadm can also be used to change various configuration parameters.
     Obtain a list of the global variables with <command>ietadm --op show
     --tid=1 --sid=0</command>. The output looks like:
    </para>
<screen>
InitialR2T=Yes
ImmediateData=Yes
MaxConnections=1
MaxRecvDataSegmentLength=8192
MaxXmitDataSegmentLength=8192
MaxBurstLength=262144
FirstBurstLength=65536
DefaultTime2Wait=2
DefaultTime2Retain=20
MaxOutstandingR2T=1
DataPDUInOrder=Yes
DataSequenceInOrder=Yes
ErrorRecoveryLevel=0
HeaderDigest=None
DataDigest=None
OFMarker=No
IFMarker=No
OFMarkInt=Reject
IFMarkInt=Reject
</screen>
    <para>
     All of these parameters can be easily changed. For example, if you want
     to change the maximum number of connections to two, use
    </para>
<screen>
ietadm --op update --tid=1 --params=MaxConnections=2. 
</screen>
    <para>
     In the file <filename>/etc/ietd.conf</filename>, the associated line
     should look like <option>MaxConnections 2</option>.
    </para>
    <warning>
     <para>
      The changes that you make with the <command>ietadm</command> utility
      are not permanent for the system. These changes are lost at the next
      reboot if they are not added to the
      <filename>/etc/ietd.conf</filename> configuration file. Depending on
      the usage of iSCSI in your network, this might lead to severe
      problems.
     </para>
    </warning>
    <para>
     There are several more options available for the
     <command>ietadm</command> utility. Use <command>ietadm -h</command> to
     find an overview. The abbreviations there are target ID (tid), session
     ID (sid), and connection ID (cid). They can also be found in
     <filename>/proc/net/iet/session</filename>.
    </para>
   </sect2>
  </sect1>
  <sect1 id="sec_inst_system_iscsi_initiator">
   <title>Configuring iSCSI Initiator</title>

   <para>
    The iSCSI initiator, also called an iSCSI client, can be used to connect
    to any iSCSI target. This is not restricted to the iSCSI target solution
    explained in
    <xref linkend="sec_inst_system_iscsi_target" xrefstyle="SectTitleOnPage"/>.
    The configuration of iSCSI initiator involves two major steps: the
    discovery of available iSCSI targets and the setup of an iSCSI session.
    Both can be done with &yast;.
   </para>

   <sect2 id="sec_inst_system_iscsi_initiator_yast">
    <title>Using &yast; for the iSCSI Initiator Configuration</title>
    <para>
     The iSCSI Initiator Overview in &yast; is divided into three tabs:
    </para>
    <itemizedlist>
     <listitem>
      <formalpara id="bkob6lr">
       <title>Service:</title>
       <para>
        The <guimenu>Service</guimenu> tab can be used to enable the iSCSI
        initiator at boot time. It also offers to set a unique
        <guimenu>Initiator Name</guimenu> and an iSNS server to use for the
        discovery. The default port for iSNS is 3205.
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara id="bkob6ls">
       <title>Connected Targets:</title>
       <para>
        The <guimenu>Connected Targets</guimenu> tab gives an overview of
        the currently connected iSCSI targets. Like the <guimenu>Discovered
        Targets</guimenu> tab, it also gives the option to add new targets
        to the system.
       </para>
      </formalpara>
      <para>
       On this page, you can select a target device, then toggle the
       start-up setting for each iSCSI target device:
      </para>
      <itemizedlist>
       <listitem>
        <formalpara id="bkob6lt">
         <title>Automatic:</title>
         <para>
          This option is used for iSCSI targets that are to be connected
          when the iSCSI service itself starts up. This is the typical
          configuration.
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara id="bkob6lu">
         <title>Onboot:</title>
         <para>
          This option is used for iSCSI targets that are to be connected
          during boot; that is, when root (<filename>/</filename>) is on
          iSCSI. As such, the iSCSI target device will be evaluated from the
          initrd on server boots.
         </para>
        </formalpara>
       </listitem>
      </itemizedlist>
     </listitem>
     <listitem>
      <formalpara id="bkob6lv">
       <title>Discovered Targets:</title>
       <para>
        <guimenu>Discovered Targets</guimenu> provides the possibility of
        manually discovering iSCSI targets in the network.
       </para>
      </formalpara>
     </listitem>
    </itemizedlist>
    <sect3 id="bkob990">
     <title>Configuring the iSCSI Initiator</title>
     <procedure id="bj5fon6">
      <step id="bj5fon7">
       <para>
        Launch &yast; as the &rootuser; user.
       </para>
      </step>
      <step id="bj5fon8">
       <para>
        Select <guimenu>Network Services</guimenu><guimenu>iSCSI
        Initiator.</guimenu>
       </para>
       <para role="intro">
        &yast; opens to the iSCSI Initiator Overview page with the
        <guimenu>Service</guimenu> tab selected.
       </para>
       <informalfigure pgwide="0">
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="iscsi_init_service_a.png" width="307pt" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="iscsi_init_service_a.png" width="307pt" format="PNG"/>
         </imageobject>
        </mediaobject>
       </informalfigure>
      </step>
      <step id="bj5fonb">
       <para>
        In the <guimenu>Service Start </guimenu>area, select one of the
        following:
       </para>
       <itemizedlist>
        <listitem>
         <formalpara id="bj5fonc">
          <title>When booting:</title>
          <para>
           Automatically start the initiator service on subsequent server
           reboots.
          </para>
         </formalpara>
        </listitem>
        <listitem>
         <formalpara id="bj5fond">
          <title>Manually (default):</title>
          <para>
           Start the service manually.
          </para>
         </formalpara>
        </listitem>
       </itemizedlist>
      </step>
      <step id="bj5fone">
       <para>
        Specify or verify the <guimenu>Initiator Name</guimenu>.
       </para>
       <para>
        Specify a well-formed iSCSI qualified name (IQN) for the iSCSI
        initiator on this server. The initiator name must be globally unique
        on your network. The IQN uses the following general format:
       </para>
<screen>
iqn.yyyy-mm.com.mycompany:n1:n2
</screen>
       <para>
        where n1 and n2 are alphanumeric characters. For example:
       </para>
<screen>
iqn.1996-04.de.suse:01:9c83a3e15f64
</screen>
       <para>
        The <guimenu>Initiator Name</guimenu> is automatically completed
        with the corresponding value from the
        <filename>/etc/iscsi/initiatorname.iscsi</filename> file on the
        server.
       </para>
       <para>
        If the server has iBFT (iSCSI Boot Firmware Table) support, the
        <guimenu>Initiator Name</guimenu> is completed with the
        corresponding value in the IBFT, and you are not able to change the
        initiator name in this interface. Use the BIOS Setup to modify it
        instead.The iBFT is a block of information containing various
        parameters useful to the iSCSI boot process, including iSCSI target
        and initiator descriptions for the server.
       </para>
      </step>
      <step id="bj5fonf">
       <para>
        Use either of the following methods to discover iSCSI targets on the
        network.
       </para>
       <itemizedlist>
        <listitem>
         <formalpara id="bj5fong">
          <title>iSNS:</title>
          <para>
           To use iSNS (Internet Storage Name Service) for discovering iSCSI
           targets, continue with
           <xref linkend="bkobick" xrefstyle="HeadingOnPage"/>.
          </para>
         </formalpara>
        </listitem>
        <listitem>
         <formalpara id="bj5fonh">
          <title>Discovered Targets:</title>
          <para>
           To discover iSCSI target devices manually, continue with
           <xref linkend="bkob8pj" xrefstyle="HeadingOnPage"/>.
          </para>
         </formalpara>
        </listitem>
       </itemizedlist>
      </step>
     </procedure>
    </sect3>
    <sect3 id="bkobick">
     <title>Discovering iSCSI Targets by Using iSNS</title>
     <para>
      Before you can use this option, you must have already installed and
      configured an iSNS server in your environment. For information, see
      <xref linkend="isns" xrefstyle="ChapTitleOnPage"/>.
     </para>
     <procedure id="bkobiky">
      <step id="bkobikz">
       <para>
        In &yast;, select<guimenu> iSCSI Initiator</guimenu>, then select the
        <guimenu>Service</guimenu> tab.
       </para>
      </step>
      <step id="bkobjno">
       <para>
        Specify the IP address of the iSNS server and port.
       </para>
       <para>
        The default port is 3205.
       </para>
      </step>
      <step id="bkobl8n">
       <para>
        On the iSCSI Initiator Overview page, click
        <guimenu>Finish</guimenu> to save and apply your changes.
       </para>
      </step>
     </procedure>
    </sect3>
    <sect3 id="bkob8pj">
     <title>Discovering iSCSI Targets Manually</title>
     <para>
      Repeat the following process for each of the iSCSI target servers that
      you want to access from the server where you are setting up the iSCSI
      initiator.
     </para>
     <procedure id="bgchy7s">
      <step id="bgchy7t">
       <para>
        In &yast;, select<guimenu> iSCSI Initiator</guimenu>, then select the
        <guimenu>Discovered Targets</guimenu> tab.
       </para>
      </step>
      <step id="bkobfda">
       <para>
        Click <guimenu>Discovery</guimenu> to open the iSCSI Initiator
        Discovery dialog box.
       </para>
      </step>
      <step id="bgchy7u">
       <para>
        Enter the IP address and change the port if needed.
       </para>
       <para>
        The default port is 3260.
       </para>
      </step>
      <step id="bgchy7v">
       <para>
        If authentication is required, deselect <guimenu>No
        Authentication</guimenu>, then specify the credentials the
        <guimenu>Incoming</guimenu> or <guimenu>Outgoing</guimenu>
        authentication.
       </para>
      </step>
      <step id="bgchy7w">
       <para>
        Click <guimenu>Next</guimenu> to start the discovery and connect to
        the iSCSI target server.
       </para>
      </step>
      <step id="bi728ck">
       <para>
        If credentials are required, after a successful discovery, use
        <guimenu>Login</guimenu> to activate the target.
       </para>
       <para>
        You are prompted for authentication credentials to use the selected
        iSCSI target.
       </para>
      </step>
      <step id="bi727ln">
       <para>
        Click <guimenu>Next</guimenu> to finish the configuration.
       </para>
       <para>
        If everything went well, the target now appears in
        <guimenu>Connected Targets</guimenu>.
       </para>
       <para>
        The virtual iSCSI device is now available.
       </para>
      </step>
      <step id="bkobeht">
       <para>
        On the iSCSI Initiator Overview page, click
        <guimenu>Finish</guimenu> to save and apply your changes.
       </para>
      </step>
      <step id="bi728cl">
       <para>
        You can find the local device path for the iSCSI target device by
        using the <command>lsscsi</command> command:
       </para>
<screen>
lsscsi
[1:0:0:0]   disk    IET      VIRTUAL-DISK     0     /dev/sda
</screen>
      </step>
     </procedure>
    </sect3>
    <sect3 id="bkob9pj">
     <title>Setting the Start-up Preference for iSCSI Target Devices</title>
     <procedure id="bkobg1r">
      <step id="bkobg1s">
       <para>
        In &yast;, select<guimenu> iSCSI Initiator</guimenu>, then select the
        <guimenu>Connected Targets</guimenu> tab to view a list of the iSCSI
        target devices that are currently connected to the server.
       </para>
      </step>
      <step id="bkobg1t">
       <para>
        Select the iSCSI target device that you want to manage.
       </para>
      </step>
      <step id="bkobg1u">
       <para>
        Click <guimenu>Toggle Start-Up</guimenu> to modify the setting:
       </para>
       <itemizedlist>
        <listitem>
         <formalpara id="bkobg1v">
          <title>Automatic:</title>
          <para>
           This option is used for iSCSI targets that are to be connected
           when the iSCSI service itself starts up. This is the typical
           configuration.
          </para>
         </formalpara>
        </listitem>
        <listitem>
         <formalpara id="bkobg1w">
          <title>Onboot:</title>
          <para>
           This option is used for iSCSI targets that are to be connected
           during boot; that is, when root (<filename>/</filename>) is on
           iSCSI. As such, the iSCSI target device will be evaluated from
           the initrd on server boots.
          </para>
         </formalpara>
        </listitem>
       </itemizedlist>
      </step>
      <step id="bkobg1x">
       <para>
        Click <guimenu>Finish</guimenu> to save and apply your changes.
       </para>
      </step>
     </procedure>
    </sect3>
   </sect2>

<!--  iscsiadm -m discovery - -type=sendtargets - -portal=ip:port
  iscsiadm -m node -r [id]  => display all variables  
  iscsiadm -m node -r bd0ac2 - -op=update - -name=node.session.auth.authmethod - -value=CHAP
  iscsiadm -m node -r bd0ac2 - -login
  
  To use iSCSI, you need the 
  <systemitem class="resource">linux-iscsi</systemitem> package. The connection
  data must be entered in the <filename>/etc/iscsi.conf</filename>
  file. If you have an iSCSI storage
  device, this configuration file might look like this:
 </para> -->

   <sect2 id="sec_inst_system_iscsi_initiator_manual">
    <title>Setting Up the iSCSI Initiator Manually</title>
    <para>
     Both the discovery and the configuration of iSCSI connections require a
     running iscsid. When running the discovery the first time, the internal
     database of the iSCSI initiator is created in the directory
     <filename>/var/lib/open-iscsi</filename>.
    </para>
    <para>
     If your discovery is password protected, provide the authentication
     information to iscsid. Because the internal database does not exist
     when doing the first discovery, it cannot be used at this time.
     Instead, the configuration file <filename>/etc/iscsid.conf</filename>
     must be edited to provide the information. To add your password
     information for the discovery, add the following lines to the end of
     <filename>/etc/iscsid.conf</filename>:
    </para>
<screen>
discovery.sendtargets.auth.authmethod = CHAP
discovery.sendtargets.auth.username = &lt;username&gt;
discovery.sendtargets.auth.password = &lt;password&gt;
</screen>
    <para>
     The discovery stores all received values in an internal persistent
     database. In addition, it displays all detected targets. Run this
     discovery with the following command:
    </para>
<screen>
iscsiadm <option>-m discovery --type=st --portal=&lt;targetip&gt;</option>
</screen>
    <para>
     The output should look like the following:
    </para>
<screen>
10.44.171.99:3260,1 iqn.2006-02.com.example.iserv:systems
</screen>
    <para>
     To discover the available targets on a <literal>iSNS</literal> server,
     use the following command:
    </para>
<screen>
iscsiadm --mode discovery --type isns --portal &lt;targetip&gt; 
</screen>
    <para>
     For each target defined on the iSCSI target, one line appears. For more
     information about the stored data, see
     <xref linkend="sec_iscsi_database" xrefstyle="SectTitleOnPage"/>.
    </para>
    <para>
     The special <option>--login</option> option of
     <command>iscsiadm</command> creates all needed devices:
    </para>
<screen>
iscsiadm -m node -n iqn.2006-02.com.example.iserv:systems --login
</screen>
    <para>
     The newly generated devices show up in the output of
     <command>lsscsi</command> and can now be accessed by mount.
    </para>
   </sect2>

   <sect2 id="sec_iscsi_database">
    <title>The iSCSI Client Databases</title>
    <para>
     All information that was discovered by the iSCSI initiator is stored in
     two database files that reside in
     <filename>/var/lib/open-iscsi</filename>. There is one database for the
     discovery of targets and one for the discovered nodes. When accessing a
     database, you first must select if you want to get your data from the
     discovery or from the node database. Do this with the <option>-m
     discovery</option> and <option>-m node</option> parameters of
     <command>iscsiadm</command>. Using <command>iscsiadm</command> with one
     of these parameters gives an overview of the stored records:
    </para>
<screen>
iscsiadm -m discovery
10.44.171.99:3260,1 iqn.2006-02.com.example.iserv:systems
</screen>
    <para>
     The target name in this example is
     <literal>iqn.2006-02.com.example.iserv:systems</literal>. This name is
     needed for all actions that relate to this special data set. To examine
     the content of the data record with the ID
     <literal>iqn.2006-02.com.example.iserv:systems</literal>, use the
     following command:
    </para>
<screen>
iscsiadm -m node --targetname iqn.2006-02.com.example.iserv:systems
node.name = iqn.2006-02.com.example.iserv:systems
node.transport_name = tcp
node.tpgt = 1
node.active_conn = 1
node.startup = manual
node.session.initial_cmdsn = 0
node.session.reopen_max = 32
node.session.auth.authmethod = CHAP
node.session.auth.username = joe
node.session.auth.password = ********
node.session.auth.username_in = &lt;empty&gt;
node.session.auth.password_in = &lt;empty&gt;
node.session.timeo.replacement_timeout = 0
node.session.err_timeo.abort_timeout = 10
node.session.err_timeo.reset_timeout = 30
node.session.iscsi.InitialR2T = No
node.session.iscsi.ImmediateData = Yes
....
</screen>
    <para>
     To edit the value of one of these variables, use the command
     <command>iscsiadm</command> with the <option>update</option> operation.
     For example, if you want iscsid to log in to the iSCSI target when it
     initializes, set the variable <option>node.startup</option> to the
     value <option>automatic</option>:
    </para>
<screen>
iscsiadm -m node -n iqn.2006-02.com.example.iserv:systems -p ip:port --op=update --name=node.startup --value=automatic
</screen>
    <para>
     Remove obsolete data sets with the <literal>delete</literal> operation
     If the target <literal>iqn.2006-02.com.example.iserv:systems</literal>
     is no longer a valid record, delete this record with the following
     command:
    </para>
<screen>
<command>iscsiadm <option>-m node -n iqn.2006-02.com.example.iserv:systems -p ip:port --op=delete</option></command>
</screen>
    <important>
     <para>
      Use this option with caution because it deletes the record without any
      additional confirmation prompt.
     </para>
    </important>
    <para>
     To get a list of all discovered targets, run the <command>iscsiadm -m
     node</command> command.
    </para>
   </sect2>
  </sect1>
  <sect1 id="bwkrqdd">
   <title>Using iSCSI Disks when Installing</title>

   <para>
    Booting from an iSCSI disk on i386, x86_64, and ppc64 architectures is
    supported, when iSCSI enabled firmware is used.
   </para>

   <para>
    To use iSCSI disks during installation, it is necessary to add the
    following parameter to the boot option line:
   </para>

<screen>
withiscsi=1
</screen>

   <para>
    During installation, an additional screen appears that provides the
    option to attach iSCSI disks to the system and use them in the
    installation process.
   </para>
  </sect1>
  <sect1 id="sec_inst_system_iscsi_ts">
   <title>Troubleshooting iSCSI</title>

   <itemizedlist role="subtoc">
    <listitem>
     <para>
      <xref linkend="nofail" xrefstyle="SectTitleOnPage"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <xref linkend="bp5cdib" xrefstyle="SectTitleOnPage"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <xref linkend="bpjp8x0" xrefstyle="SectTitleOnPage"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <xref linkend="bwk7p6z" xrefstyle="SectTitleOnPage"/>
     </para>
    </listitem>
   </itemizedlist>

   <sect2 id="nofail">
    <title>Hotplug Doesn’t Work for Mounting iSCSI Targets</title>
    <para>
     In SLES 10, you could add the <literal>hotplug</literal> option to your
     device in the <filename>/etc/fstab</filename> file to mount iSCSI
     targets. For example:
    </para>
<screen>
/dev/disk/by-uuid-blah /oracle/db   ext3       hotplug,rw            0 2
</screen>
    <para>
     For SLES 11, the <literal>hotplug</literal> option no longer works. Use
     the <literal>nofail</literal> option instead. For example:
    </para>
<screen>
/dev/sdb1   /mnt/mountpoint   ext3   acl,user,nofail   0 0
</screen>
    <para>
     For information, see
     <ulink url="http://www.suse.com/support/php/search.do?cmd=displayKC&#x0026;docType=kc&#x0026;externalId=7004427"><citetitle>TID
     7004427: /etc/fstab entry does not mount iSCSI device on boot up
     </citetitle></ulink>.
    </para>
   </sect2>

   <sect2 id="bp5cdib">
    <title>Data Packets Dropped for iSCSI Traffic</title>
    <para>
     A firewall might drop packets if it gets to busy. The default for the
     SUSE Firewall is to drop packets after three minutes. If you find that
     iSCSI traffic packets are being dropped, you can consider configuring
     the SUSE Firewall to queue packets instead of dropping them when it
     gets too busy.
    </para>
   </sect2>

   <sect2 id="bpjp8x0">
    <title>Using iSCSI Volumes with LVM</title>
    <para>
     Use the troubleshooting tips in this section when using LVM on iSCSI
     targets.
    </para>
    <sect3 id="bpkq3ci">
     <title>Check the iSCSI Initiator Discovery Occurs at Boot</title>
     <para>
      When you set up the iSCSI Initiator, ensure that you enable discovery
      at boot time so that udev can discover the iSCSI devices at boot time
      and set up the devices to be used by LVM.
     </para>
    </sect3>
    <sect3 id="bpkpzuj">
     <title>Check that iSCSI Target Discovery Occurs at Boot</title>
     <para>
      Remember that <filename>udev</filename> provides the default setup for
      devices. Ensure that all of the applications that create devices are
      started at boot time so that <command>udev</command> can recognize and
      assign devices for them at system startup. If the application or
      service is not started until later, <command>udev</command> does not
      create the device automatically as it would at boot time.
     </para>
     <para>
      You can check your settings for LVM2 and iSCSI with
      <guimenu>&ycc_runlevel;</guimenu> or with the
      <command>systemctl</command> commands. The following services should
      be enabled:
     </para>
     <simplelist>
      <member>lvm</member>
      <member>open-iscsi</member>
     </simplelist>
    </sect3>
   </sect2>

   <sect2 id="bwk7p6z">
    <title>iSCSI Targets Are Mounted When the Configuration File Is Set to Manual</title>
    <para>
     When Open-iSCSI starts, it can mount the targets even if the option
     <literal>node.startup</literal> option is set to manual in the
     <filename>/etc/iscsi/iscsid.conf</filename> file if you manually
     modified the configuration file.
    </para>
    <para>
     Check the
     <filename>/etc/iscsi/nodes/&lt;<replaceable>target_name</replaceable>&gt;/&lt;<replaceable>ip_address</replaceable>,<replaceable>port</replaceable>&gt;/default</filename>
     file. It contains a <literal>node.startup</literal> setting that
     overrides the <filename>/etc/iscsi/iscsid.conf</filename> file. Setting
     the mount option to manual by using the &yast; interface also sets the
     <literal>node.startup = manual</literal> in the
     <filename>/etc/iscsi/nodes/&lt;<replaceable>target_name</replaceable>&gt;/&lt;<replaceable>ip_address</replaceable>,<replaceable>port</replaceable>&gt;/default
     </filename>files.
    </para>
   </sect2>
  </sect1>
  <sect1 id="sec_inst_system_iscsi_initiator_info">
   <title>Additional Information</title>

   <para>
    The iSCSI protocol has been available for several years. There are many
    reviews comparing iSCSI with SAN solutions, benchmarking performance,
    and there also is documentation describing hardware solutions. Important
    pages for more information about open-iscsi are:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <ulink url="http://www.open-iscsi.org/"><citetitle>Open-iSCSI
      Project</citetitle></ulink>
     </para>
    </listitem>
    <listitem>
     <para>
      <ulink url="http://www.novell.com/coolsolutions/appnote/15394.html"><citetitle>AppNote:
      iFolder on Open Enterprise Server Linux Cluster using
      iSCSI</citetitle></ulink>
     </para>
    </listitem>
   </itemizedlist>

   <para>
    There is also some online documentation available. See the man pages for
    <command>iscsiadm</command>, <command>iscsid</command>,
    <filename>ietd.conf</filename>, and <command>ietd</command> and the
    example configuration file <filename>/etc/iscsid.conf</filename>.
   </para>
  </sect1>
 </chapter>
