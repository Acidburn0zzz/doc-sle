<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- 
   Interesting FATE entries:
   * #302163: A Bug Reporting Wizard
   * #303705: Unify system characterization tooling
     (SLED-11-SP1/SLES-11-SP1)
    According to the FATE entries, it seems the tools sitar, siga, 
    and supportconfig will be obsolete in the future(?)
   * Diffing of Packages:
     osc co, apply patches with quilt for sp1 and sp2, 
     -> mweckbecker, ptesarik
     
  Info Provider:
  * swehnert
  * jrecord
  * fhassel
-->
<chapter id="cha.adm.support">
 <title>Gathering System Information for Support</title>
<!-- support: sitar / onstar, siga, supportconfig --><indexterm>
 <primary>support</primary></indexterm><indexterm>
 <primary>system information</primary></indexterm>
 <abstract>
  <para> In case of problems, a system report may be created using the
   <command>supportconfig</command> tool.
   <!--It is provided by the package
    <systemitem>supportutils</systemitem> which is installed by default. You can
   either execute <command>supportconfig</command> directly from command line or
   use the &yast; <guimenu>Support</guimenu> module instead.-->
   It will collect information about the system such as: current Kernel version,
   hardware, installed packages, partition setup and much more. The result is a
   TAR archive of files that will help Global Technical Support to assist or
   locate the issue you reported. </para>
  <para>Additionally, you can analyze the <command>supportconfig</command>
   output for known issues to help resolve problems faster. For this
   purpose, &productname; provides both an appliance and a command line tool
   for <literal>Supportconfig Analysis</literal> (SCA).</para> 
 </abstract>
 <para>
  <remark condition="clarity">taroth 2014-04-04: it is not really clear to me
   why there are 2 separate sections for gathering and uploading the information
   - if the first one is meant as an option to gather the data just for
   analyzing it oneself (without submitting it to the support), the steps about
   creating a service request number need and entering the customer information
   need to be removed here - as the report can also be started without any of that
   information entered in YaST - AI taroth: clarify with toms</remark></para>
 <sect1 id="sec.admsupport.hostinfo">
  <title>Overview</title>
  <!--<remark>toms 2014-03-12: FATE#315869</remark>-->
  <para>For a quick and easy overview of all relevant system information when
   logging into a server, use the package <systemitem class="systemname"
    >hostinfo</systemitem>. After it has been installed on a machine, it
   displays the following information to any &rootuser; that logs in to this
   machine: </para>
  <example id="ex.support.hostinfo">
   <title>Output of <command>hostinfo</command> When Logging In as
    &rootuser;</title>
   <screen>Hostname:                 &exampleclient;
Current As Of:            Wed 12 Mar 2014 03:57:05 PM CET
Distribution:             SUSE Linux Enterprise Server 12
 -Service Pack:           0
Architecture:             x86_64
Kernel Version:           3.12.12-3-default
 -Installed:              Mon 10 Mar 2014 03:15:05 PM CET
 -Status:                 Not Tainted
Last Updated Package:     Wed 12 Mar 2014 03:56:43 PM CET
 -Patches Needed:         0
 -Security:               0
 -3rd Party Packages:     0
IPv4 Address:             ens3 &exampledomain1ip;.1
Total/Free/+Cache Memory: 983/95/383 MB (38% Free)
Hard Disk:                /dev/sda 10 GB</screen>
  </example>
 </sect1>
 
 <sect1>
  <title>Collecting Information Using Supportconfig</title>

  <para>
   The following sections describe how to use
   <command>supportconfig</command> with &yast;, from command line and
   which options you can specify to modify the output.
  </para>

  <sect2 id="sec.admsupport.yast">
   <title>Using &yast;</title>
   <para>
    To use &yast; to gather your system information, proceed as follows:
   </para>
   <procedure>
    <step id="st.admsupport.yast.srnumber">
     <para>
      <remark>taroth 2014-04-04: the Novell URL still seems to be valid</remark>
      Go to
      <ulink
       url="http://www.novell.com/center/eservice"/> and create
      a service request number.
     </para>
     <remark>2008-11-20 toms: YaST asks the user to open a URL as
        root(!). This happens when the users clicks on "Open" (Open
        Novell Support Center/ This will start a browser with Novell
        Support Center Portal). I don't think we should describe this
        and only *use* the above URL as a normal user for security
        reasons.</remark>
    </step>
    <step>
     <para>
      Start &yast;.
     </para>
    </step>
    <step>
     <para>
      Open the <guimenu>Support</guimenu> module.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create report tarball</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the next window, select one of the supportconfig options from the radio button list.
      If you want to test the report function
      first, use <guimenu>Only gather a minimum amount of info</guimenu>.
      Proceed with <guimenu>Next</guimenu>.
     </para>
    </step>
        <step>
     <para>
      Enter your contact information. Use your service request number from
      <xref linkend="st.admsupport.yast.srnumber"/> and enter it into the
      text field labeled <guimenu>Novell 11 digit service request
      number</guimenu>. Proceed with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      The information gathering begins. After the process is finished,
      continue with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Review the data collection. Use <guimenu>Remove from Data</guimenu>
      to remove any files you want excluded from the TAR archive uploaded to
      Novell.   Continue with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Save the  tarball. By default, a copy of the tarball will be saved in
      <filename>/root</filename>. If you want to upload to the Novell customer
      center, make sure <guimenu>Upload log files tarball into URL</guimenu>
      is activated. Finish the operation with <guimenu>Next</guimenu>.
      <remark>taroth 2014-04-04: filed a bug, because YaST prompts twice for the
       upload target in one workflow, see bnc#872128
      </remark>
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.admsupport.commandline">
   <title>Using Supportconfig Directly</title>
   <para>
    To use <command>supportconfig</command> from the command line, proceed as
    follows:
   </para>
   <procedure>
    <step>
     <para>
      Open a shell and become
      <systemitem class="username"
              >root</systemitem>.
     </para>
    </step>
    <step>
     <para>
      Run <command>supportconfig</command> without any options. This gathers
      the default system information.
     </para>
    </step>
    <step>
     <para>
      Wait for the tool to complete the operation.
     </para>
    </step>
    <step>
     <para>
      The default archive location is <filename>/var/log</filename> with the
      filename format
      <filename>nts_<replaceable
          >HOST</replaceable>_<replaceable
            >DATE</replaceable>_<replaceable
              >TIME</replaceable>.tbz</filename>
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.admsupport.options">
   <title>Common Supportconfig Options</title>
   <para>
    The <command>supportconfig</command> utility is usually called without
    any options. Display a list of all options with
    <command>supportconfig</command> <option>--help</option> or refer to the
    man page. The following list gives a brief overview of the more common
    cases:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Use the minimal option (<option>-m</option>) to reduce the size of the
      information being gathered:
     </para>
<screen>supportconfig -m</screen>
    </listitem>
    <listitem>
     <para>
      Include additional contact information in the output (in one line):
     </para>
<screen>supportconfig -E tux@example.org -N "Tux Penguin" -O<!--
          --> "Penguin Inc." ...</screen>
    </listitem>
    <listitem>
     <para>
      While troubleshooting a problem, you may want to gather information
      only about the area of the problem you are currently working on. For
      example, if you have problems with LVM, and recently found the problem
      with the default supportconfig output. After making changes, you want
      to gather the current LVM information. The following would gather the
      minimum supportconfig information and LVM only.
     </para>
<screen>supportconfig -i LVM</screen>
     <para>
      To see a complete feature list, run:
     </para>
<screen>supportconfig -F</screen>
     <para>
      If you need the opposite, exclude an area with the <option>-x</option>
      option. Both options, <option>-i</option> and <option>-x</option>, can
      be combined.
     </para>
    </listitem>
    <listitem>
     <para>
      Collect already rotated log files. This is especially useful in high
      logging environments or after a Kernel crash when syslog rotates the
      logs after a reboot.
     </para>
<screen>supportconfig -l</screen>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 id="sec.admsupport.submit.with.yast">
  <title>Submitting Information to Global Technical Support</title>

  <para>
    Use the &yast; 
   <guimenu>Support</guimenu> module or the <command>supportconfig</command> command line
   utility to submit system information to the Global Technical Support. When you experience a
   server issue and would like the support's assistance, you will need to open a
   service request and submit your server information to Novell. Both &yast;
   and command line methods are described.
  </para>

  <note>
   <title>Privacy Statement</title>
   <para>
    Novell treats system reports as confidential data. Please see our privacy
    commitment for details at
    <ulink 
       url="http://www.novell.com/company/legal/privacy/"/>.
   </para>
  </note>

  <procedure>
   <title>Submitting Information to Novell with YaST</title>
   <para>
    <remark>taroth 2014-04-04: I'm not sure why this procedure lets the user
     execute most of the steps he already did in the "collection information"
     procedure? the YaST module features and "Upload Data" option in its first
     screen, maybe this should rather be the thing to be described
     here... - check with toms</remark></para>
   <step>
    <para>
     Go to
     <ulink
         url="http://www.novell.com/center/eservice"/> and
     create a service request number.
    </para>
   </step>
   <step>
    <para>
     Write down your 11 digit service request number. The following examples
     will assume the service request number is 12345678901.
    </para>
   </step>
   <step>
    <para>
     Click on <guimenu>Create report tarball</guimenu> in the &yast; <guimenu>Support</guimenu>
     module window.
    </para>
   </step>
   <step>
    <para><remark>taroth 2014-04-04: why does it need to be the custom settings
     here? in the first procedure, it is describe to choose any of the radio
     button options</remark>
     Select the <guimenu>Use Custom (Expert) Settings</guimenu> radio button. Proceed with
     <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter your contact information, fill in <guimenu>Novell 11 digit
     service request number</guimenu> and include Novell's upload target
     URL.
    </para>
    <itemizedlist>
     <listitem>
      <para>
       For the secure upload target, use:
       <ulink 
              url="https://secure-www.novell.com/upload?appname=supportconfig&amp;file={tarball}"/>.
      </para>
     </listitem>
     <listitem>
      <para>
       For the normal FTP upload target, use
       <ulink url="ftp://ftp.novell.com/incoming"/> (US customers) or
       <ulink url="ftp://support-ftp.suse.com/in"/> (EMEA, Europe, the
       Middle East, and Africa).
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Proceed with <guimenu>Next</guimenu>. Information gathering starts.
     After the process is finished, continue with <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Review the data collection. Use <guimenu>Remove from Data</guimenu>
     to remove any files you want excluded from the TAR archive uploaded to
     Novell. Continue with <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     By default, a copy of the tarball will be saved in
     <filename>/root</filename>. Confirm you are using one of the Novell
     upload targets described above and the <guimenu>Upload log files
     tarball into URL</guimenu> is activated. Finish with
     <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Finish</guimenu>.
    </para>
   </step>
  </procedure>

  <procedure>
   <title>Submitting Information to Novell with supportconfig</title>
   <step>
    <para>
     Go to
     <ulink
         url="http://www.novell.com/center/eservice"/> and
     create a service request number.
    </para>
   </step>
   <step>
    <para>
     Write down your 11 digit service request number. The following examples
     will assume the service request number is <replaceable>12345678901</replaceable>.
    </para>
   </step>
   <step>
    <para>
     Servers with Internet connectivity:
    </para>
    <substeps>
     <step>
      <para>
       To use the default upload target, run:
      </para>
<screen>supportconfig -ur <replaceable>12345678901</replaceable></screen>
     </step>
     <step>
      <para>
       For the secure upload target, use the following:
      </para>
      <!--taroth 2014-04-04: bnc#871918-->
      <screen>supportconfig -ar <replaceable>12345678901</replaceable></screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Servers <emphasis>without</emphasis> Internet connectivity
    </para>
    <substeps>
     <step>
      <para>
       Run the following:
      </para>
<screen>supportconfig -r <replaceable>12345678901</replaceable></screen>
     </step>
     <step>
      <para>
       Manually upload the
       <filename>/var/log/nts_SR12345678901*tbz</filename> tarball to our
       FTP server (US customers use
       <ulink
         url="ftp://ftp.novell.com/incoming"/>; Europe, the
       Middle East, and Africa use
       <ulink url="ftp://support-ftp.suse.com/in"/>).
      </para>
     </step>
     <step>
      <para>
       You can also attach the tarball to your service request using the
       service request URL:
       <ulink url="http://www.novell.com/center/eservice"/>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Once the tarball is in the incoming directory of our FTP server, it
     becomes automatically attached to your service request.
    </para>
   </step>
  </procedure>
 </sect1>
 
 
 <sect1 id="sec.admsupport.sca">
  <title>Analyzing System Information</title>
  <para>
   <remark>taroth 2014-04-04: todo: https://fate.suse.com/315699,
   https://bugzilla.novell.com/show_bug.cgi?id=871928</remark></para>
  <para>System reports created with <command>supportconfig</command> can be
   analyzed for known issues to help resolve problems faster. For this purpose,
   &productname; provides both an appliance and a command line tool for
    <literal>Supportconfig Analysis</literal> (SCA). The SCA appliance is a
   server-side tool which is non-interactive. The SCA tool
   (<command>scatool</command>) runs on the
   client-side and is executed from command line. Both tools analyze
   supportconfig archives from affected servers. The initial server analysis
   takes place on the SCA appliance or the workstation on which scatool is
   running. No analysis cycles happen on the production server. </para>
  <para>Both the appliance and the command line tool need product-specific
   patterns that enable them to analyze the supportconfig output for the
   associated products. For example, if you want to the analyze the
   supportconfig TAR archives that have been generated on &sle; 11 machine,
   you need to install the package <systemitem class="resource"
    >sca-patterns-sle11</systemitem>, for TAR archives from a &sle; 10
   machine you need the package <systemitem class="resource"
    >sca-patterns-sle10</systemitem>.</para>
  <sect2 id="sec.admsupport.sca.tool">
   <title>Using the SCA Command Line Tool</title>
   <para></para>
  </sect2>
  
 </sect1>
 
 <sect1 id="sec.admsupport.kernel">
  <title>Support of Kernel Modules</title>
  <para>
  <remark>taroth 2014-04-04: https://bugzilla.novell.com/show_bug.cgi?id=869159
   (text about Kernel Modules, move from RN to docs)</remark></para>
  
  <!--Kernel Modules
   ==============
   
   An important requirement for every Enterprise operating system is the
   level of support a customer receives for his environment. Kernel modules
   are the most relevant connector between hardware ("controllers") and the
   operating system. Every kernel module in SLES 11 has a flag 'supported'
   with three possible values: "yes", "external", "" (empty, not set,
   "unsupported").
   
   The following rules apply:
   
   -   All modules of a self-recompiled kernel are by default marked as
   unsupported.
   
   -   Kernel Modules supported by SUSE partners and delivered using SUSE
   SolidDriver Program are marked "external".
   
   -   If the "supported" flag is not set, loading this module will taint
   the kernel. Tainted kernels are not supported. To avoid this, not
   supported Kernel modules are included in an extra RPM
   (kernel-/-extra) and will not be loaded by default
   ("flavor"=default|smp|xen|...). In addition, these unsupported
   modules are not available in the installer, and the package
   kernel-$flavor-extra is not on the SLES media.
   
   -   Kernel Modules not provided under a license compatible to the
   license of the Linux kernel will also taint the kernel; see
   /usr/src/linux/Documentation/sysctl/kernel.txt and the state of
   /proc/sys/kernel/tainted.
   
   Technical Background
   
   -   Linux Kernel
   
   The value of /proc/sys/kernel/unsupported defaults to 2 on SLES 11
   ("do not warn in syslog when loading unsupported modules"). This is
   the default used in the installer as well as in the installed
   system. See /usr/src/linux/Documentation/sysctl/kernel.txt for more
   information.
   
   -   modprobe
   
   The modprobe utility for checking module dependencies and loading
   modules appropriately checks for the value of the "supported" flag.
   If the value is "yes" or "external" the module will be loaded,
   otherwise it will not. See below, for information on how to override
   this behavior.
   
   Note: SUSE does not generally support removing of storage modules
   via modprobe -r.
   
   emap: proper 'Note' mark-up? ke: good enough as-is.
   
   Working with Unsupported Modules
   
   While the general supportability is important, there might occur
   situations where loading an unsupported module is required (e.g., for
   testing or debugging purposes, or if your hardware vendor provides a
   hotfix):
   
   -   You can override the default by changing the variable
   allow_unsupported_modules in /etc/modprobe.d/unsupported-modules and
   set the value to "1".
   
   If you only want to try loading a module once, the
   -/-allow-unsupported-modules command-line switch can be used with
   modprobe. (For more information, see man modprobe).
   
   -   During installation, unsupported modules may be added through driver
   update disks, and they will be loaded.
   
   To enforce loading of unsupported modules during boot and
   afterwards, please use the kernel command line option oem-modules.
   
   While installing and initializing the module-init-tools package, the
   kernel flag "TAINT_NO_SUPPORT" (/proc/sys/kernel/tainted) will be
   evaluated. If the kernel is already tainted,
   allow_unsupported_modules will be enabled. This will prevent
   unsupported modules from failing in the system being installed. (If
   no unsupported modules are present during installation and the other
   special kernel command line option is not used, the default will
   still be to disallow unsupported modules.)
   
   -   If you install unsupported modules after the initial installation
   and want to enable those modules to be loaded during system boot,
   please do not forget to run depmod and mkinitrd.
   
   Remember that loading and running unsupported modules will make the
   kernel and the whole system unsupported by SUSE.  -->
 </sect1>
 
 
 <sect1 id="sec.admsupport.moreinfo">
  <title>For More Information</title>

  <para>
   Find more information about gathering system information in the following
   documents:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <command>man supportconfig</command>&mdash;The manpage of supportconfig
    </para>
   </listitem>
   <listitem>
    <para>
     <command>man supportconfig.conf</command>&mdash;The manpage of the
     supportconfig configuration file
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink
            url="http://www.novell.com/communities/print/node/4097"
          />&mdash;A
     Basic Server Health Check with Supportconfig
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink
            url="http://www.novell.com/communities/print/node/4827"
          />&mdash;Create
     Your Own Supportconfig Plugin
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink
            url="http://www.novell.com/communities/print/node/4800"
          />&mdash;Creating
     a Central Supportconfig Repository
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
