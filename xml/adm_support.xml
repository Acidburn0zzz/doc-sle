<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- 
   Interesting FATE entries:
   * #302163: A Bug Reporting Wizard
   * #303705: Unify system characterization tooling
     (SLED-11-SP1/SLES-11-SP1)
    According to the FATE entries, it seems the tools sitar, siga, 
    and supportconfig will be obsolete in the future(?)
   * Diffing of Packages:
     osc co, apply patches with quilt for sp1 and sp2, 
     -> mweckbecker, ptesarik
     
  Info Provider:
  * swehnert
  * jrecord
  * fhassel
-->
<chapter id="cha.adm.support">
 <title>Gathering System Information for Support</title>
<!-- support: sitar / onstar, siga, supportconfig --><indexterm>
 <primary>support</primary></indexterm><indexterm>
 <primary>system information</primary></indexterm>
 <abstract>
  <para>For a quick overview of all relevant system information of a machine,
   &productname; offers the <systemitem class="systemname"
    >hostinfo</systemitem> package. It also helps system administrators to check
   for tainted Kernels (that are not supported) or any third-party packages
   installed on a machine.</para>
  <para> In case of problems, a detailed system report may be created with
   either the <command>supportconfig</command> command line tool or the
   &yast; <guimenu>Support</guimenu> module.
   <!--It is provided by the package
    <systemitem>supportutils</systemitem> which is installed by default. You can
   either execute <command>supportconfig</command> directly from command line or
   use the &yast; <guimenu>Support</guimenu> module instead.-->
   It will collect information about the system such as: current Kernel version,
   hardware, installed packages, partition setup and much more. The result is a
   TAR archive of files. After opening a Service Request (SR), you can upload
   the TAR archive to Global Technical Support. It will help to locate the issue
   you reported and to assist you in solving the problem.</para>
  <para>Additionally, you can analyze the <command>supportconfig</command>
   output for known issues to help resolve problems faster. For this
   purpose, &productname; provides both an appliance and a command line tool
   for <literal>Supportconfig Analysis</literal> (SCA).</para> 
 </abstract>
 <para>
  <remark condition="clarity">taroth 2014-04-04: it is not really clear to me
   why there are 2 separate sections for gathering and uploading the information
   - if the first one is meant as an option to gather the data just for
   analyzing it oneself (without submitting it to the support), the steps about
   creating a service request number need and entering the customer information
   need to be removed here - as the report can also be started without any of that
   information entered in YaST - AI taroth: clarify with toms</remark></para>
 <sect1 id="sec.admsupport.hostinfo">
  <title>Displaying Current System Information</title>
  <!--<remark>toms 2014-03-12: FATE#315869</remark>-->
  <para>For a quick and easy overview of all relevant system information when
   logging into a server, use the package <systemitem class="systemname"
    >hostinfo</systemitem>. After it has been installed on a machine, the
   console displays the following information to any &rootuser; user that logs in
   to this machine: </para>
  <example id="ex.support.hostinfo">
   <title>Output of <command>hostinfo</command> When Logging In as
    &rootuser;</title>
   <screen>Hostname:                 &exampleclient;
Current As Of:            Wed 12 Mar 2014 03:57:05 PM CET
Distribution:             SUSE Linux Enterprise Server 12
 -Service Pack:           0
Architecture:             x86_64
Kernel Version:           3.12.12-3-default
 -Installed:              Mon 10 Mar 2014 03:15:05 PM CET
 -Status:                 Not Tainted
Last Updated Package:     Wed 12 Mar 2014 03:56:43 PM CET
 -Patches Needed:         0
 -Security:               0
 -3rd Party Packages:     0
IPv4 Address:             ens3 &exampledomain1ip;.1
Total/Free/+Cache Memory: 983/95/383 MB (38% Free)
Hard Disk:                /dev/sda 10 GB</screen>
  </example>
  <para>In case the output shows a <literal>tainted</literal> Kernel status, see
   <xref linkend="sec.admsupport.kernel"/> for more details.</para>
 </sect1>
 
 <sect1 id="sec.admsupport.supportconfig">
  <title>Collecting System Information With Supportconfig</title>
  <para>To create a TAR archive with detailed system information that you can
   hand-over to Global Technical Support , either use the <command>supportconfig</command> command line tool
   or the &yast; <guimenu>Support</guimenu> module.
  </para>

  <sect2 id="sec.admsupport.supportconfig.sr">
   <title>Creating a Service Request</title>
   <para>Supportconfig archives can be generated at any time. However, for
    handing-over the supportconfig data to Global Technical Support, you need to
    generate a service request number first. You will need it to upload the
    archive to the support.</para>
   <para>To create a service request, go to <ulink
   url="http://www.novell.com/center/eservice"/> and follow the instructions
    on the screen.  Write down your 11-digit service request number. </para>
   <note>
    <title>Privacy Statement</title>
    <para> &suse; and &novell; treat system reports as confidential
     data. For details about our privacy commitment, see <ulink
      url="http://www.novell.com/company/legal/privacy/"/>. </para>
   </note>
   
  </sect2>
  
   

  <sect2 id="sec.admsupport.yast">
   <title>Creating A supportconfig Archive with &yast;</title>
   <para>
    To use &yast; to gather your system information, proceed as follows:  
    <remark>2008-11-20 toms: YaST asks the user to open a URL as
     root(!). This happens when the users clicks on "Open" (Open
     Novell Support Center/ This will start a browser with Novell
     Support Center Portal). I don't think we should describe this
     and only *use* the above URL as a normal user for security
     reasons.</remark>
   </para>
   <procedure>
  
    <step>
     <para>
      Start &yast; and open the <guimenu>Support</guimenu> module.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create report tarball</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the next window, select one of the supportconfig options from the radio
      button list. 
      <remark>taroth 2014-04-11: jrecord - any recommendations which option to
       use? as <guimenu>Use Custom (Expert) Settings</guimenu> is pre-selected
       by default, probably that one....</remark>
      If you want to test the report function
      first, use <guimenu>Only gather a minimum amount of info</guimenu>.
      Proceed with <guimenu>Next</guimenu>.
     </para>
    </step>
   <step>
    <para> Enter your contact information. It will be written to a file called
     <filename>basic-environment.txt</filename> and included in the archive to
     be created.</para>
   </step>
    <step>
     <para> If you want to submit the archive to Global Technical Support at the
      end of the information collection process, fill in the required
       <guimenu>Upload Information</guimenu>. For details about which upload
      servers to use, refer to <xref linkend="step.supportcfg.submit.upltarget"/>.</para>
      <para>If you want to submit the archive later on, you can leave the
        <guimenu>Upload Information</guimenu> empty for now.</para>
    </step>
    <step>
     <para> Proceed with <guimenu>Next</guimenu>. </para>
    </step>
    <step>
     <para>
      The information gathering begins. After the process is finished,
      continue with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Review the data collection. Use <guimenu>Remove from Data</guimenu>
      to remove any files you want excluded from the TAR archive before
      submitting it to the support.. 
      Continue with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Save the  tarball. By default, a copy of the tarball will be saved in
      <filename>/root</filename>, with the
      filename format being
      <filename>nts_<replaceable
       >HOST</replaceable>_<replaceable
        >DATE</replaceable>_<replaceable
         >TIME</replaceable>.tbz</filename>.<remark>taroth 2014-04-11: not sure why YaST
       saves this to /root whereas the CLI tool saves to
       /var/log/ - check with jrecord</remark>
     </para>
    </step>
    <step>
     <para>If you want to upload the archive to support directly, make sure
       <guimenu>Upload log files tarball to URL</guimenu> is activated. If you
      did not already enter an <guimenu>Upload Target</guimenu> in step FIXME,
      enter one now. For details about which upload
      servers to use, refer to <xref linkend="step.supportcfg.submit.upltarget"/></para></step>
    <step><para>If you want to skip the upload, deactivate <guimenu>Upload log
    files tarball to URL</guimenu>.</para></step>
    <step><para>Click FIXME.</para></step>
   </procedure>
  </sect2>

  <sect2 id="sec.admsupport.cli">
   <title>Creating A Supportconfig Archive from Command Line</title>
   <para>The following procedure shows how to create a supportconfig archive,
    but without submitting it to support directly. For uploading it, you need to
    add run the command with certain options as described in <xref
     linkend="pro.admsupport.submit.cli"/>. </para>
   <procedure>
    <step>
     <para>
      Open a shell and become
      <systemitem class="username"
              >root</systemitem>.
     </para>
    </step>
    <step>
     <para>
      Run <command>supportconfig</command> without any options. This gathers
      the default system information.
     </para>
    </step>
    <step>
     <para>
      Wait for the tool to complete the operation.
     </para>
    </step>
    <step>
     <para>
      The default archive location is <filename>/var/log</filename>, with the
      filename format being
      <filename>nts_<replaceable
          >HOST</replaceable>_<replaceable
            >DATE</replaceable>_<replaceable
              >TIME</replaceable>.tbz</filename>
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.admsupport.options">
   <title>Common Supportconfig Options</title>
   <para><remark>taroth 2014-04-11: todo - check if those options are also
    reflected in YaST?</remark>
    The <command>supportconfig</command> utility is usually called without
    any options. Display a list of all options with
    <command>supportconfig</command> <option>--help</option> or refer to the
    man page. The following list gives a brief overview of the more common
    cases:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Use the minimal option (<option>-m</option>) to reduce the size of the
      information being gathered:
     </para>
<screen>supportconfig -m</screen>
    </listitem>
    <listitem>
     <para>
      Include additional contact information in the output (in one line):
     </para>
<screen>supportconfig -E tux@example.org -N "Tux Penguin" -O<!--
          --> "Penguin Inc." ...</screen>
    </listitem>
    <listitem>
     <para>
      While troubleshooting a problem, you may want to gather information
      only about the area of the problem you are currently working on. For
      example, if you have problems with LVM, and recently found the problem
      with the default supportconfig output. After making changes, you want
      to gather the current LVM information. The following would gather the
      minimum supportconfig information and LVM only.
     </para>
<screen>supportconfig -i LVM</screen>
     <para>
      To see a complete feature list, run:
     </para>
<screen>supportconfig -F</screen>
     <para>
      If you need the opposite, exclude an area with the <option>-x</option>
      option. Both options, <option>-i</option> and <option>-x</option>, can
      be combined.
     </para>
    </listitem>
    <listitem>
     <para>
      Collect already rotated log files. This is especially useful in high
      logging environments or after a Kernel crash when syslog rotates the
      logs after a reboot.
     </para>
<screen>supportconfig -l</screen>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 id="sec.admsupport.submit">
  <title>Submitting Information to Global Technical Support</title>

  <para> Use the &yast; <guimenu>Support</guimenu> module or the
   <command>supportconfig</command> command line utility to submit system
   information to the Global Technical Support. When you experience a server
   issue and would like the support's assistance, you will need to open a
   service request first. For details, see <xref
    linkend="sec.admsupport.supportconfig.sr"/>. </para>

 
  <procedure id="pro.admsupport.submit.yast">
   <title>Submitting Information to Support with &yast;</title>
   <para>The following procedure assumes that you have already created a
    supportconfig archive, but have not
    uploaded it yet. For instructions on how to generate and submit a
    supportconfig archive in one go, see <xref linkend="sec.admsupport.yast"/>.</para>
   <para>The following examples use <replaceable>12345678901</replaceable> as
    placeholder for your service request number. Replace
    <replaceable>12345678901</replaceable> with the service request number you
    created in <xref linkend="sec.admsupport.supportconfig.sr"/>.</para>
   <step>
    <para>
     Start &yast; and open the <guimenu>Support</guimenu> module.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Upload</guimenu>.
    </para>
   </step>
  
   <step>
    <para>
   In <guimenu>Package with log files</guimenu> specify the path to the existing
     supportconfig archive or <guimenu>Browse</guimenu> for it . 
    </para>
   </step>
   <step id="step.supportcfg.submit.upltarget"><para>Specify the upload target:</para>
    <itemizedlist>
     <listitem>
      <para>
       For the secure upload target, use:
       <ulink 
              url="https://secure-www.novell.com/upload?appname=supportconfig&amp;file={tarball}"/>.
      </para>
     </listitem>
     <listitem>
      <para>
       For the normal FTP upload target, use
       <ulink url="ftp://ftp.novell.com/incoming"/> (US customers) or
       <ulink url="ftp://support-ftp.suse.com/in"/> (EMEA, Europe, the
       Middle East, and Africa).
      </para>
     </listitem>
    </itemizedlist>
    <para>
     <remark>taroth 2014-04-11: this does not make sense to me - why does the
      YaST module *not* ask for the SR number now? and lets you continue after
      specify an upload target (but no RC or customer info at all)? I would
      expect it to *check* if an SR has been entered and otherwise show an error
      message - need to check with jrecord/the support guys about this, maybe I
     got the "upload" function wrong after all...</remark>
     Proceed with <guimenu>Next</guimenu>. 
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Finish</guimenu>.
    </para>
   </step>
  </procedure>

  <procedure id="pro.admsupport.submit.cli">
   <title>Submitting Information to Support from Command Line</title>
   <para>The following procedure assumes that you have already created a
    supportconfig archive, but have not
    uploaded it yet. For instructions on how to generate and submit a
    supportconfig archive in one go, see <xref linkend="sec.admsupport.yast"/>.</para>
   <para>The following examples use <replaceable>12345678901</replaceable> as
    placeholder for your service request number. Replace
    <replaceable>12345678901</replaceable> with the service request number you
    created in <xref linkend="sec.admsupport.supportconfig.sr"/>.</para>
  
   <step>
    <para>
     Servers with Internet connectivity:
    </para>
    <substeps>
     <step>
      <para>
       To use the default upload target, run:
      </para>
<screen>supportconfig -ur <replaceable>12345678901</replaceable></screen>
     </step>
     <step>
      <para>
       For the secure upload target, use the following:
      </para>
      <!--taroth 2014-04-04: bnc#871918-->
      <screen>supportconfig -ar <replaceable>12345678901</replaceable></screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Servers <emphasis>without</emphasis> Internet connectivity
    </para>
    <substeps>
     <step>
      <para>
       Run the following:
      </para>
<screen>supportconfig -r <replaceable>12345678901</replaceable></screen>
     </step>
     <step>
      <para>
       Manually upload the
       <filename>/var/log/nts_<replaceable>SR12345678901</replaceable>*tbz</filename> tarball to our
       FTP server (US customers use
       <ulink
         url="ftp://ftp.novell.com/incoming"/>; Europe, the
       Middle East, and Africa use
       <ulink url="ftp://support-ftp.suse.com/in"/>).
      </para>
     </step>
     <step>
      <para>
       You can also attach the tarball to your service request using the
       service request URL:
       <ulink url="http://www.novell.com/center/eservice"/>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Once the tarball is in the incoming directory of our FTP server, it
     becomes automatically attached to your service request.
    </para>
   </step>
  </procedure>
 </sect1>
 
 
 <sect1 id="sec.admsupport.sca">
  <title>Analyzing System Information</title>
  <para>
   <remark>taroth 2014-04-04: https://fate.suse.com/315699,
    https://bugzilla.novell.com/show_bug.cgi?id=871928 - work in
    progress</remark></para>
  <para>System reports created with <command>supportconfig</command> can be
   analyzed for known issues to help resolve problems faster. For this purpose,
   &productname; provides both an appliance and a command line tool for
    <literal>Supportconfig Analysis</literal> (SCA). The SCA appliance is a
   server-side tool which is non-interactive. The SCA tool
   (<command>scatool</command>) runs on the
   client-side and is executed from command line. Both tools analyze
   supportconfig archives from affected servers. The initial server analysis
   takes place on the SCA appliance or the workstation on which scatool is
   running. No analysis cycles happen on the production server. </para>
  <para>Both the appliance and the command line tool need product-specific
   patterns that enable them to analyze the supportconfig output for the
   associated products. These patterns are available as RPM packages. For
   example, if you want to analyze supportconfig archives that have been
   generated on a &sle; 11 machine, you need to install the package
    <systemitem class="resource">sca-patterns-sle11</systemitem> together with
   the SCA tool (or alternatively on the machine that you want to use as SCA
   appliance server). To analyze supportconfig archives generated on a &sle;
   10 machine, you need the package <systemitem class="resource"
    >sca-patterns-sle10</systemitem>.</para>
  
  <sect2 id="sec.admsupport.sca.tool">
   <title>SCA Command Line Tool</title>
   <para>The SCA command line tool lets you analyze a local machine using
    <command>supportconfig</command> and the analysis patterns for the specific
    product that is installed on the local machine. The tool creates an HTML
    report showing its analysis results. For an example, see <xref
     linkend="fig.scatool.html"/>.</para>
   <figure id="fig.scatool.html">
    <title>SCA Report&mdash;HTML Output</title>
    <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="sca_report_html.png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="sca_report_html.png" width="100%"/>
    </imageobject>
    </mediaobject>
   </figure>
   
   <para>The <command>scatool</command> command is provided by the <systemitem
     class="resource">sca-server-report</systemitem> package that is not
    installed by default. Additionally, you need the <systemitem
     class="resource">sca-patterns-base</systemitem> package and any of the
    product-specific <systemitem class="resource">sca-patterns-*</systemitem>
    packages that matches the product installed on the machine where you want to
    run the <command>scatool</command> command.</para>
   <para>Execute the <command>scacommand</command> either as &rootuser; user
    or with <command>sudo</command>. When calling the SCA tool, you can either
    analyze an existing supportconfig TAR archive or you can let it generate and
    analyze a new supportconfig TAR archive in one go. The tool also provides an
    interactive console (with tab completion) and the possibility to run
    <command>supportconfig</command> on an external machine and to execute the
    subsequent analysis on the local machine.</para>
   <para>Find some example commands below:</para>
   <variablelist>
    <varlistentry>
     <term><command>sudo scatool <option>-a</option></command></term>
     <listitem>
      <para>Calls <command>supportconfig</command> and generates a new
       supportconfig archive on the local machine. Analyzes the archive for know
       issues by applying the SCA analysis patterns that match the installed
       product. Displays the path to the HTML report that is generated from the
       results of the analysis. It is usually written to the same directory
       where the supportconfig archive can be found.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sudo scatool&nbsp;<option>-a</option>&nbsp;<option>-o</option>&nbsp;<replaceable>/opt/sca/reports/</replaceable>&nbsp;</command>
     </term>
     <listitem>
      <para>Same as <command>sudo scatool <option>-a</option></command>, only
       that the HTML report is written to the path specified with
        <option>-o</option>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sudo scatool&nbsp;<option>-a</option>&nbsp;<replaceable>PATH_TO_TARBALL_OR_DIR</replaceable>&nbsp;</command>
     </term>
     <listitem>
      <para>Analyzes the specified supportconfig archive file (or the specified
       directory to where the supportconfig archive has been extracted). The
       generated HTML report is saved in the same location as the supportconfig
       archive or directory. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sudo scatool&nbsp;<option>-a</option>&nbsp;<replaceable>sles_server.company.com</replaceable>&nbsp;</command>
     </term>
     <listitem>
      <para>Establishes an SSH connection to an external server
        <replaceable>sles_server.company.com</replaceable> and runs
       <command>supportconfig</command> on the server. The supportconfig archive
       is then copied back to the local machine and is analyzed there. The
       generated HTML report is saved to the default
        <filename>/var/log</filename> directory. (Only the supportconfig archive
       is created on <replaceable>sles_server.company.com</replaceable>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sudo scatool <option>-c</option></command></term>
     <listitem>
      <para>Starts the interactive console for <command>scatool</command>. Press
        <keycap function="tab"/> twice to see the available commands.</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>For further options and information, run
    <command>sudo scatool -h</command> or see the <command>scatool</command> man
    page.</para>   
  </sect2>
  <sect2 id="sec.admsupport.sca.appliance">
   <title>SCA Appliance</title>
   <para>If you decide to use the SCA appliance for analyzing the supportconfig
    archives, you need to configure a dedicated server (or virtual machine) as
    the SCA appliance server. The SCA appliance server can then be used to analyze
    supportconfig archives from all &sls; and &sled; servers in your enterprise. You
    can simply upload supportconfig archives to the appliance for analysis.
    Interaction is not required. The SCA appliance keeps track of all
    supportconfig archives that have been analyzed in a MariaDB database. You
    can read the SCA reports directly from the appliance Web interface.
    Alternatively, you can have the appliance send the HTML report to any
    administrative user via mail. 
    <remark>taroth 2014-04-08: todo - add links</remark></para>
   <sect3 id="sec.admsupport.sca.appliance.pre">
    <title>Prerequisites</title>
    <para>To run an SCA appliance server, you need the following prerequisites:</para>
    <itemizedlist>
     <listitem>
      <para>All <systemitem>sca-appliance-*</systemitem> packages.</para></listitem>
     <listitem>
      <para>The <systemitem class="resource">sca-patterns-base</systemitem>
       package. Additionally, any of the product-specific <systemitem
        class="resource">sca-patterns-*</systemitem> for the type of
       supportconfig archives that you want to analyze with the
       appliance.</para>
     </listitem>
     <listitem>
      <para>Apache</para>
     </listitem>
     <listitem>
      <para>PHP</para>
     </listitem>
     <listitem>
      <para>MariaDB</para>
     </listitem>
     <listitem>
      <para>anonymous FTP server (optional)</para>
     </listitem>
    </itemizedlist>
   </sect3>
   <sect3 id="sec.admsupport.sca.appliance.install">
    <title>Installation and Basic Setup</title>
    <para>As listed in <xref linkend="sec.admsupport.sca.appliance.pre"/>, the
     SCA appliance has several dependencies on other packages. Therefore you
     need do so some preparations before installing and setting up the SCA
     appliance server:</para>
    <procedure>
        <step>
        <para>For Apache and MariaDB, install the <systemitem>Web</systemitem>
         and <systemitem>LAMP</systemitem> installation patterns.</para>
       </step>
       <step>
        <para>Set up Apache, MariaDB, and optionally an anonymous FTP server.
         For more information, see <xref linkend="cha.apache2"/> and <xref
          linkend="cha.ftp"/>.</para>
       </step>
       <step>
        <para>Configure Apache and MariaDB to start at boot time: </para>
        <screen>sudo systemctl enable apache2.service mysql.service</screen>
       </step>
       <step>
        <para>Start both services:</para>
        <screen>sudo systemctl start apache2.service mysql.service</screen>
       </step>
    </procedure>
    <para>Now you can install the SCA appliance and set it up as described in
     <xref linkend="pro.sca.appl.install"/>.</para>
    <procedure id="pro.sca.appl.install">
     <title>Installing and Configuring the SCA Appliance</title>
     <para>After installing the packages, use the <command>setup-sca</command>
      script for the basic configuration of the MariaDB administration and
      report database that is used by the SCA appliance.</para>
     <para>It can be used to configure the following options you have for
      uploading the supportconfig archives from your machines to the SCA
      appliance:</para>
     <itemizedlist>
      <listitem>
       <para>
        <command>scp</command>
       </para>
      </listitem>
      <listitem>
       <para>anonymous FTP server</para>
      </listitem>
     </itemizedlist>
     <step>
      <para>Install the appliance and the SCA base-pattern library:</para>
      <screen>sudo zypper install sca-appliance-* sca-patterns-base</screen>
     </step>
     <step>
      <para>Additionally, install the pattern packages for the types of
       supportconfig archives you want to analyze. For example, if you have
       &sls; 11 and &sls; 12 servers in your environment, install both
       the <systemitem>sca-patterns-sle11</systemitem> and
        <systemitem>sca-patterns-sle12</systemitem> packages.</para>
      <para>To install all available patterns:</para>
      <screen>zypper install sca-patterns-*</screen>
     </step>
     <step>
      <para>For basic setup of the SCA appliance, use the
       <command>setup-sca</command> script. How to call it depends on how you
       want to upload the supportconfig archives to the SCA appliance
       server:</para>
      <itemizedlist>
       <listitem>
        <para>If you have configured an anonymous FTP server which uses the
          <filename>/srv/ftp/upload</filename> directory, execute the setup
         script with the <option>-f</option> option and follow the instructions
         on the screen:</para>
        <screen>setup-sca -f</screen>
        <note>
         <title>FTP Server Using Another Directory</title>
         <para>If your FTP server uses another directory than
           <filename>/srv/ftp/upload</filename>, adjust the following
          configuration files first to make them point to the correct directory:
           <filename>/etc/sca/sdagent.conf</filename> and
           <filename>/etc/sca/sdbroker.conf</filename> . </para>
        </note>
       </listitem>
       <listitem>
        <para>If you want to upload supportconfig files to the
          <filename>/tmp</filename> directory of the SCA appliance server via
         <command>scp</command>, call the setup script without any parameters
         and follow the instructions on the screen: </para>
        <screen>setup-sca
        </screen>
       </listitem>
      </itemizedlist>
      <para>
       <remark>taroth 2014-04-09: todo - ask jrecord for a typical output of
        "setup-sca" and "setup-sca -f" (to get one, I would otherwise need to
        setup MariaDB, etc.), because I need to know where and how to define the
        Web interface URL for the appliance</remark>
      </para>
     </step>
    </procedure>
    <para>After successful installation and setup, the SCA appliance is ready
     for use. However, you may want to modify some options such as changing the
     password for the Web interface, changing the source for the SCA pattern
     updates, enabling archiving mode or configuring e-mail notifications. For
     details, see <xref linkend="sec.admsupport.sca.appliance.config"/>. </para>
   </sect3>
   <sect3 id="sec.admsupport.sca.appliance.use">
    <title>Using the SCA Appliance</title>
    <para>After you have uploaded supportconfig archives to the SCA appliance,
     you can view the analysis reports in a Web interface. </para>
    <procedure>
     <title>Uploading Supportconfig Archives to the SCA Appliance</title>
     <para>You can upload existing supportconfig archives to the SCA appliance
      manually or create new supportconfig archives and upload them to the SCA
      appliance in one step. Uploading can be done via FTP or SCP. You need to
      know the URL where the SCA appliance can be reached. For upload via FTP,
      an FTP server needs to be configured for the SCA appliance, see <xref
       linkend="pro.sca.appl.install"/>. </para>
     <step>
      <para>For creating a supportconfig archive and uploading it via
       (anonymous) FTP: </para>
      <screen>sudo supportconfig -U “ftp://<replaceable>sca-appliance.company.com</replaceable>/upload”</screen>
     </step>
     <step> 
      <para>For creating a supportconfig archive and uploading it via SCP:
      </para>
        <screen>sudo supportconfig -U “scp://<replaceable>sca-appliance.company.com</replaceable>/tmp”</screen>
      <para>You will be prompted for the &rootuser; user password of the
       server running the SCA appliance.</para>
     </step>
     <step>
      <para>If you manually want to upload one or multiple archives, copy the
       existing archives files (usually located
        at<filename>/var/log/nts_*.tbz</filename>) files to the SCA
       appliance. As target, use either the appliance server's <filename>/tmp</filename>
       directory or the <filename>/srv/ftp/upload</filename> directory (if FTP
       is configured for the SCA appliance server).</para></step>
    </procedure>
    <procedure>
     <title>Viewing SCA Reports</title>
     <para>
      <remark>taroth 2014-04-09: a few questions to jrecord: does this work from
       _any_ machine? I guess cookies and javascript need to be enabled? what
       about the note about the certificate warning - is it needed here? I guess
       there also is a login screen? could you send me a screenshot of the index
       page or let me know how to access an SCA appliance for this purpose? do
       the individual reports look the same as in the screenshot above?</remark>
     </para>
     <para> Start a Web browser and make sure that JavaScript and cookies are
      enabled.</para>
     <step>
      <para> As a URL, enter the report index page of the SCA appliance.</para>
      <screen>https://sca-appliance.company.com/sca</screen>
      <para>If in doubt, ask your system administrator. </para>
      <note>
       <title>Certificate Warning</title>
       <para> Depending on your browser and browser options, you may get a
        certificate warning when trying to access the URL for the first time.
        (In case no certificate is provided when setting up the SCA appliance,
        it uses a self-signed certificate that is not considered trustworthy by
        default.) </para>
       <para>In this case, ask your cloud operator for the certificate details
        to verify the certificate.</para>
       <para> To proceed anyway, you can add an exception in the browser to
        bypass the warning.</para>
      </note>
     </step>
     <step>
      <para>You will be prompted for a user name and a password to log
       in.</para>
     </step>
     <step>
      <para>Click the date of the report you want to read</para>
     </step>
     <step>
      <para>Click the <guimenu>Basic Health</guimenu> category first to expand
       it.</para>
     </step>
     <step>
      <para>In the <guimenu>Message</guimenu> column, click an individual entry.
       <!--pattern result title--> This opens the corresponding article in the
       &suse; Knowledgebase. Read the proposed solution and follow the
       instructions.</para>
     </step>
     <step>
      <para>If the <guimenu>Solutions</guimenu> column of the
        <guimenu>Supportconfig Analysis Report</guimenu> shows any additional
       entries, click them. Read the proposed solution and follow the
       instructions.</para>
     </step>
     <step>
      <para>Check the &suse; Knowledgebase for results that directly relate
       to the problem identified by SCA. Work at resolving them.</para>
     </step>
     <step>
      <para>Check for results that can be addressed proactively to avoid future
       problems.</para>
     </step>
    </procedure>
    
    
   </sect3>
   <sect3 id="sec.admsupport.sca.appliance.config">
    <title>Customizing the SCA Appliance</title>
    <para>The following sections show how to change the password for the Web
     interface, how to change the source for the SCA pattern updates, how to
     enable archiving mode , and how to configure e-mail notifications. </para>
    <sect4>
     <title>Password for Web Interface</title>

     <para>The SCA Appliance Web interface requires a user name and password for
      logging in. The default user name is <literal>scdiag</literal> and the
      password is <literal>linux</literal>. Change the default password to a
      secure password at the earliest possibility. You can also modify the user
      name.</para>

     <procedure>
      <title>Changing The Password for the Web Interface </title>
      <step>
       <para>Log in as &rootuser; user at the system console of the server
        running the SCA appliance.</para>
      </step>
      <step>
       <para>Edit
        <filename>/srv/www/htdocs/sca/web-config.php</filename>.</para>
      </step>
      <step>
       <para>Change the values of <literal>$username</literal> and
         <literal>$password</literal> as desired.</para>
      </step>
      <step>
       <para>Save the file and exit.</para>
      </step>
     </procedure>
    </sect4>
    <sect4>
     <title>Updates of SCA Patterns</title>
     <para>By default, all <systemitem class="resource"
       >sca-patterns-*</systemitem> packages are updated regularly by a
      &rootuser; cron job that executes the
       <filename>sdagent-patterns</filename> script nightly. <remark>taroth
       2014-04-09: jrecord, not sure the following is correct - probably a typo
       and should read "zypper update sca-patterns-*"?</remark> It runs
      <command>zypper update sca-packages-*</command>. A regular system update
      will update all SCA appliance and pattern packages. To update the SCA
      appliance and patterns manually, run: </para>
     <screen>sudo zypper update sca-*</screen>
     <para>The updates are installed from the &sle; &productnumber; update
      repository by default. You can change the source for the updates to an
      &smt; server, if desired.
      <remark>taroth 2014-04-09: jrecord, in which file to change this to
       &smt;? in /etc/sca/sdagent-patterns.conf, too?</remark>
     </para>
     <procedure>
      <title>Disabling Automatic Updates of SCA Patterns</title>
      <step>
       <para>Log in as &rootuser; user at the system console of the server
        running the SCA appliance.</para>
      </step>
      <step>
       <para>
        <remark>taroth 2014-04-09: jrecord, this file does not exist on my test
         VM (which still runs a beta3) - is that a packaging error or perhaps a
         typo in your document?</remark> Edit
         <filename>/etc/sca/sdagent-patterns.conf</filename>.</para>
      </step>
      <step>
       <para>Change the entry </para>
       <screen>UPDATE_FROM_PATTERN_REPO=1</screen>
       <para>to</para>
       <screen>UPDATE_FROM_PATTERN_REPO=0</screen>
      </step>
      <step>
       <para>Save the file and exit. The machine does not require any restart to
        apply the change.</para>
      </step>
     </procedure>
    </sect4>
    <sect4>
     <title>Archiving Mode</title>
     <para>All supportconfig archives are deleted from the SCA appliance after
      they have been analyzed and their results have been stored in the MariaDB
      database. However, for troubleshooting purposes it can be useful to keep
      copies of supportconfig archives from a machine. By default, archive mode
      is disabled. </para>
     <procedure>
      <title>Enabling Archiving Mode in the SCA Appliance</title>
      <step>
       <para>Log in as &rootuser; user at the system console of the server
        running the SCA appliance.</para>
      </step>
      <step>
       <para>Edit <filename>/etc/sca/sdagent.conf</filename>.</para>
      </step>
      <step>
       <para>Change the entry </para>
       <screen>ARCHIVE_MODE=0</screen>
       <para>to</para>
       <screen>ARCHIVE_MODE=1</screen>
      </step>
      <step>
       <para>Save the file and exit. The machine does not require any restart to
        apply the change.</para>
      </step>
     </procedure>
     <para>After having enabled archive mode, the SCA appliance will save the
      supportconfig files to the <filename>/var/log/archives/saved</filename>
      directory, instead of deleting them.</para>
    </sect4>
    <sect4>
     <title>Sending SCA Reports via E-Mail</title>
     <para>The SCA appliance can e-mail a report HTML file for each
      supportconfig analyzed. This feature is disabled by default. When enabling
      it, you can define a list of e-mail addresses to which the reports should
      be sent, and define a level of status messages that trigger sending of
      reports (<literal>STATUS_NOTIFY_LEVEL</literal>). </para>

     <variablelist id="vl.sca.mails.notify.level">
      <title>Possible Values for <literal>STATUS_NOTIFY_LEVEL</literal>
      </title>
      <varlistentry>
       <term>$STATUS_OFF</term>
       <listitem>
        <para>Deactivate sending of HTML reports.</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>$STATUS_CRITICAL</term>
       <listitem>
        <para>Send only SCA reports that include a CRITICAL.</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>$STATUS_WARNING </term>
       <listitem>
        <para>Send only SCA reports that include a WARNING or CRITICAL.</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>$STATUS_RECOMMEND</term>
       <listitem>
        <para>Send only SCA reports that include a RECOMMEND, WARNING or
         CRITICAL.</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>$STATUS_SUCCESS</term>
       <listitem>
        <para>Send SCA reports that include a SUCCESS, RECOMMEND, WARNING or
         CRITICAL.</para>
       </listitem>
      </varlistentry>
     </variablelist>

     <procedure>
      <title>Configuring E-Mail Notifications for SCA Reports</title>
      <step>
       <para>Log in as &rootuser; user at the system console of the server
        running the SCA appliance.</para>
      </step>
      <step>
       <para>Edit <filename>/etc/sca/sdagent.conf</filename>.</para>
      </step>
      <step>
       <para>Search for the entry <systemitem>STATUS_NOTIFY_LEVEL</systemitem>.
        By default, it is set to <literal>$STATUS_OFF</literal> (e-mail
        notifications are disabled). </para>
      </step>
      <step>
       <para>To enable e-mail notifications, change
         <literal>$STATUS_OFF</literal> to the level of status messages that you
        want to have e-mail reports for, for example:</para>
       <screen>STATUS_NOTIFY_LEVEL=$STATUS_SUCCESS</screen>
       <para>For details, see <xref linkend="vl.sca.mails.notify.level"
        />.</para>
      </step>
      <step>
       <para>To define the list of recipients to which the reports should be
        sent:</para>
       <substeps>
        <step>
         <para>Search for the entry <literal>EMAIL_REPORT='root'</literal>.
         </para>
        </step>
        <step>
         <para>Replace <literal>root</literal> with a list of e-mail addresses
          to which SCA reports should be sent. The e-mail addresses must be
          separated by spaces. For example:</para>
         <screen>EMAIL_REPORT='&exampleuser;@my.company.com&nbsp;&exampleuserII;@your.company.com'</screen>
        </step>
       </substeps>
      </step>
      <step>
       <para>Save the file and exit. The machine does not require any restart to
        apply the changes. All future SCA Reports will be e-mailed to the
        specified addresses.</para>
      </step>
     </procedure>
    </sect4>
       
   </sect3>
   <sect3 id="sec.admsupport.sca.appliance.backup">
    <title>Backing Up and Restoring the Database</title>
    <para>To backup and restore the MariaDB database that stores the SCA
     reports, use the <command>scadb</command> command as described
     below.</para>
    <procedure>
     <title>Backing Up the Database</title>
     <step>
      <para>Log in as &rootuser; user at the system console of the server
       running the SCA appliance.</para>
     </step>
     <step>
      <para>Put the appliance into maintenance mode by executing:</para>
      <screen>scadb maint</screen>
     </step>
     <step>
      <para>Start the backup with:</para>
      <screen>scadb backup</screen>
      <para>The data is saved to a TAR archive:
        <filename>sca-backup-*sql.gz</filename>.</para>
     </step>
     <step>
      <para>If you are using the pattern creation database <remark>taroth
        2014-04-11: jrecord: what's this? it has not been mentioned before in
        the document...</remark>, back up this data, too:</para>
      <screen>sdpdb backup</screen>
      <para>The data is saved to a TAR archive:
        <filename>sdp-backup-*sql.gz</filename>.</para>
     </step>
     <step>
      <para>Copy the following data to another machine or an external storage
       medium:</para>
      <itemizedlist>
       <listitem>
        <para>
         <filename>sca-backup-*sql.gz</filename>
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>sdp-backup-*sql.gz</filename>
        </para>
       </listitem>
       <listitem>
        <para><filename>/usr/lib/sca/patterns/local</filename>
         <remark>taroth 2014-04-11: jrecord, is the following
         true?</remark>(only needed if you have created custom patterns)</para>
       </listitem>
      </itemizedlist>
     </step>
     <step>
      <para>Reactivate the SCA appliance with: </para>
      <screen>scadb reset</screen>
     </step>
    </procedure>
    <procedure>
     <title>Restoring the Database</title>
     <para>To restore the database from your backup, proceed as follows:</para>
     <step>
      <para>Log in as &rootuser; user at the system console of the server
       running the SCA appliance.</para>
     </step>
     <step>
      <para>Copy the newest <filename>sca-backup-*sql.gz</filename> and
        <filename>sdp-backup-*sql.gz</filename> TAR archives to the SCA
       appliance server.</para>
     </step>
     <step>
      <para>To decompress the files, run:</para>
      <screen>gzip -d *-backup-*sql.gz</screen>
     </step>
     <step>
      <para>To import the data into the database, execute:</para>
      <screen>scadb import sca-backup-*sql</screen>
     </step>
     <step>
      <para>If you are using the pattern creation database, also import the
       following data with:</para>
      <screen>sdpdb import sdp-backup-*sql</screen>
     </step>
     <step>
      <para>If you are using custom pattern, also restore
        <filename>/usr/lib/sca/patterns/local</filename> from your backup
       data.</para>
     </step>
     <step>
      <para>Reactivate the SCA appliance with: </para>
      <screen>scadb reset</screen>
     </step>
     <step>
      <para>Update the pattern modules in the database with </para>
      <screen>sdagent-patterns -u</screen>
     </step>
    </procedure>
   </sect3>
   

  </sect2>
</sect1>
 
 <sect1 id="sec.admsupport.kernel">
  <title>Support of Kernel Modules</title>
  <para>
  <remark>taroth 2014-04-04: https://bugzilla.novell.com/show_bug.cgi?id=869159
   (text about Kernel Modules, move from RN to docs)</remark></para>
  
  <!--Kernel Modules
   ==============
   
   An important requirement for every Enterprise operating system is the
   level of support a customer receives for his environment. Kernel modules
   are the most relevant connector between hardware ("controllers") and the
   operating system. Every kernel module in SLES 11 has a flag 'supported'
   with three possible values: "yes", "external", "" (empty, not set,
   "unsupported").
   
   The following rules apply:
   
   -   All modules of a self-recompiled kernel are by default marked as
   unsupported.
   
   -   Kernel Modules supported by SUSE partners and delivered using SUSE
   SolidDriver Program are marked "external".
   
   -   If the "supported" flag is not set, loading this module will taint
   the kernel. Tainted kernels are not supported. To avoid this, not
   supported Kernel modules are included in an extra RPM
   (kernel-/-extra) and will not be loaded by default
   ("flavor"=default|smp|xen|...). In addition, these unsupported
   modules are not available in the installer, and the package
   kernel-$flavor-extra is not on the SLES media.
   
   -   Kernel Modules not provided under a license compatible to the
   license of the Linux kernel will also taint the kernel; see
   /usr/src/linux/Documentation/sysctl/kernel.txt and the state of
   /proc/sys/kernel/tainted.
   
   Technical Background
   
   -   Linux Kernel
   
   The value of /proc/sys/kernel/unsupported defaults to 2 on SLES 11
   ("do not warn in syslog when loading unsupported modules"). This is
   the default used in the installer as well as in the installed
   system. See /usr/src/linux/Documentation/sysctl/kernel.txt for more
   information.
   
   -   modprobe
   
   The modprobe utility for checking module dependencies and loading
   modules appropriately checks for the value of the "supported" flag.
   If the value is "yes" or "external" the module will be loaded,
   otherwise it will not. See below, for information on how to override
   this behavior.
   
   Note: SUSE does not generally support removing of storage modules
   via modprobe -r.
   
   emap: proper 'Note' mark-up? ke: good enough as-is.
   
   Working with Unsupported Modules
   
   While the general supportability is important, there might occur
   situations where loading an unsupported module is required (e.g., for
   testing or debugging purposes, or if your hardware vendor provides a
   hotfix):
   
   -   You can override the default by changing the variable
   allow_unsupported_modules in /etc/modprobe.d/unsupported-modules and
   set the value to "1".
   
   If you only want to try loading a module once, the
   -/-allow-unsupported-modules command-line switch can be used with
   modprobe. (For more information, see man modprobe).
   
   -   During installation, unsupported modules may be added through driver
   update disks, and they will be loaded.
   
   To enforce loading of unsupported modules during boot and
   afterwards, please use the kernel command line option oem-modules.
   
   While installing and initializing the module-init-tools package, the
   kernel flag "TAINT_NO_SUPPORT" (/proc/sys/kernel/tainted) will be
   evaluated. If the kernel is already tainted,
   allow_unsupported_modules will be enabled. This will prevent
   unsupported modules from failing in the system being installed. (If
   no unsupported modules are present during installation and the other
   special kernel command line option is not used, the default will
   still be to disallow unsupported modules.)
   
   -   If you install unsupported modules after the initial installation
   and want to enable those modules to be loaded during system boot,
   please do not forget to run depmod and mkinitrd.
   
   Remember that loading and running unsupported modules will make the
   kernel and the whole system unsupported by SUSE.  -->
 </sect1>
 
 
 <sect1 id="sec.admsupport.moreinfo">
  <title>For More Information</title>
  <itemizedlist>
   <listitem>
    <para>
     <command>man supportconfig</command>&mdash;The man page of <command>supportconfig</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>man supportconfig.conf</command>&mdash;The man page of the
     supportconfig configuration file
    </para>
   </listitem>
   <listitem>
    <para>
     <command>man scatool</command>&mdash;The man page of
     <command>scatool</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>man scadb</command>&mdash;The man page of
     <command>scadb</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>man setup-sca</command>&mdash;The man page of
     <command>setup-sca</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink url="https://mariadb.com/kb/en/"/>&mdash;The MariaDB
     documentation.</para>
   </listitem>
   <listitem>
    <para>
     <ulink url="http://httpd.apache.org/docs/"/> and <xref
      linkend="cha.apache2"/>&mdash;Documentation about the Apache Web
     server.</para>
   </listitem>
   <listitem>
    <para><xref linkend="cha.ftp"/>&mdash;Documentation of how to set up an
    FTP server.</para>
   </listitem>
     <listitem>
    <para>
     <ulink
      url="https://www.suse.com/communities/conversations/basic-server-health-check-supportconfig/"
          />&mdash;A Basic Server Health Check with Supportconfig
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink
      url="https://www.novell.com/communities/coolsolutions/cool_tools/create-your-own-supportconfig-plugin/"
          />&mdash;Create Your Own Supportconfig Plugin
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink
      url="https://www.suse.com/communities/conversations/creating-a-central-supportconfig-repository/"
          />&mdash;Creating a Central Supportconfig Repository
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
