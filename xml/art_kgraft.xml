<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook43-profile.xsl"
                 type="text/xml" title="Profiling step"?>

<!DOCTYPE article PUBLIC 
  "-//OASIS//DTD DocBook XML V4.3//EN"
  "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
  [
  <!ENTITY kg "kGraft">
]>  
  
 <article class="whitepaper" lang="en" id="THE_WHOLE_DOCUMENT" xml:base="kgraft.xml">
 <title>Live Patching Using &kg;</title>
 
 <articleinfo>
   <authorgroup>
     <author>
       <firstname>Jakub</firstname>
       <surname>Friedl</surname>
       <email>jfriedl@suse.cz</email>
     </author>
     </authorgroup>
   
   
   <!--<legalnotice>
   </legalnotice>-->
   
 </articleinfo> 
 
 
 <abstract>
  <para>
   This document describes the basic principles of the &kg; live patching technology.
  </para>
  <para>
   &kg; is a live patching technology for run-time patching of the Linux kernel, without
   stopping the kernel. This maximizes system uptime, and thus system availability, which
   is important for mission critical systems. By allowing dynamic patching of the kernel,
   the technology also encourages users to install critical security updates without
   deferring them to a scheduled downtime.
  </para>
  <para>
   A &kg; patch is a kernel module, limited to replacing whole functions and constants
   in the kernel. &kg; offers tools for creating the live patch modules.
  </para>
</abstract>
<sect1>
  <title>Advantages of &kg;</title>
  <para>
   Live kernel patching using &kg; is especially useful for quick
   response in emergencies (when serious vulnerabilities are known
   and should be fixed as soon as possible or when the systems are
   already actively exploited). It is not used for scheduled updates
   where time is not critical.
  </para>
  <para>
   The main advantage of &kg; is that it never requires stopping
   the kernel, not even for a short time period like competing
   technologies.
  </para>
  <para>
   A &kg; patch is a <filename>.ko</filename> kernel module in
   a KMP RPM package. It is inserted into the kernel using 
   <command>insmod</command> command when the RPM package is
   installed or updated. &kg; replaces whole functions in the
   kernel, even if they are being executed. An updated &kg;
   module can replace an existing patch if necessary.
  </para>
  <para>
   &kg; has also some technical limitations. It is designed
   for fixing critical bugs, that means primarily for simple
   changes. Cahnges in kernel data structure require special
   care and, if the change is too large, rebooting might be
   required.
  </para>
</sect1>
<sect1>
  <title>Function of &kg;</title>
  <para>
  </para>
</sect1>
<sect1>
  <title>Removing &kg; Patch</title>
  <para>
   It is not sufficient to simply remove a &kg; patch with zypper.
   To remove a &kg; patch, use the folloving steps:
  </para>
  <listitem>
   <para>
    First remove the patch itself using zypper:
   </para>
   <screen>
    zypper rm kgraft-patch-default
   </screen>
  </listitem>
  <listitem>
   <para>
    Rebuild the initrd:
   </para>
   <screen>
    mkinitrd
   </screen>     
  </listitem>
  <listitem>
   <para>
    Reboot the machine.
   </para>
  </listitem>
</sect1>

</article>
