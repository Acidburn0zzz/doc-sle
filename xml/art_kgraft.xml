<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl"
                 type="text/xml"
                 title="Profiling step"?>
<!DOCTYPE article PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
<!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<?provo dirname="auditquick/"?>
<article id="art.auditquick" lang="en">
<?suse-quickstart color="suse"?>
 <title>Live Kernel Patching Using &kg;</title>
 <subtitle>&productname; &productnumber;</subtitle>
 <articleinfo><productname>&productname;</productname>
  <productnumber>&productnumber;</productnumber>
 </articleinfo>
 <abstract>
  <para>
   This document describes the basic principles of the &kg; live patching technology.
  </para>
  <para>
   &kg; is a live patching technology for run-time patching of the Linux kernel, without
   stopping the kernel. This maximizes system uptime, and thus system availability, which
   is important for mission critical systems. By allowing dynamic patching of the kernel,
   the technology also encourages users to install critical security updates without
   deferring them to a scheduled downtime.
  </para>
  <para>
   A &kg; patch is a kernel module, limited to replacing whole functions and constants
   in the kernel. &kg; offers tools for creating the live patch modules.
  </para>
</abstract>
<sect1>
  <title>Advantages of &kg;</title>
  <para>
   Live kernel patching using &kg; is especially useful for quick response in
   emergencies (when serious vulnerabilities are known and should be fixed as
   soon as possible or when the systems are already actively exploited). It is
   not used for scheduled updates where time is not critical.
  </para>
  <para>
   The main advantage of &kg; is that it never requires stopping the kernel,
   not even for a short time period like competing technologies.
  </para>
  <para>
   A &kg; patch is a <filename>.ko</filename> kernel module in a KMP RPM
   package. It is inserted into the kernel using <command>insmod</command>
   command when the RPM package is installed or updated. &kg; replaces whole
   functions in the kernel, even if they are being executed. An updated &kg;
   module can replace an existing patch if necessary.
  </para>
  <para>
   &kg; has also some technical limitations. It is designed for fixing
   critical bugs, that means primarily for simple changes. Cahnges in kernel
   data structure require special care and, if the change is too large,
   rebooting might be required.
  </para>
</sect1>
<sect1>
 <title>Installing &kg; Patches</title>
 <para>
  To aplly a &kg; patch, follow these steps:
 </para>
 <procedure>
  <step>
   <para>
    Using <command>zypper</command>, install the &kg; patch from
    &kg; channel. Choose the appropriate patch for your kernel
    version (<filename>-default</filename> or <filename>-xen</filename>).
   </para>
   <para>
    When installing the first patch, the <systemitem>kgraft</systemitem>
    package with the necessary &kg; scripts is also installed.
   </para>
   <!--FIXME name of the channel?-->
  </step>
  <step>
   <para>
    The kernel is patched automatically after the package installation.
    However, the old kernel functions are not completely removed until
    all sleeping processes wake up and get out of the way. This can
    take a considerable amount of time. Sleeping processes using the
    old kernel functions are not considered a security issue, however,
    in the current version of &kg;, it is not possible to apply another
    &kg; patch until the previous patch is completely finished.
   </para>
   <para>
    First, check the global flag in
    <filename>/sys/kernel/kgraft/in_progress</filename>. The value
    <literal>1</literal> signifies existing sleeping processes that still need
    an update, the value <literal>0</literal> signifies that the patch was
    copletely finished.
   </para>
   <para>
    To get a list of all sleeping processes, check the number in
    <filename>/proc/<replaceable>process_number</replaceable>/kgr_in_progress</filename>
    for each process. The value <literal>1</literal> signifies sleeping
    process that still needs an update.
   </para>
  </step>
  <step>
   <para>
    It is up to the system administrator to decide how to deal with
    the sleeping processes. One possibility is to wait, another
    possibility is to send a SIGSTOP signal followed by a SIGCONT
    signal to all the sleeping processes.
   </para>
  </step>
 </procedure>
</sect1>
<sect1>
  <title>Removing &kg; Patch</title>
  <para>
   It is not sufficient to simply remove a &kg; patch with zypper.
   Rebuilding initrd and rebooting is required:
  </para>
  <listitem>
   <para>
    First remove the patch itself using zypper:
   </para>
   <screen>
    zypper rm kgraft-patch-default
   </screen>
  </listitem>
  <listitem>
   <para>
    Rebuild the initrd:
   </para>
   <screen>
    mkinitrd
   </screen>
  </listitem>
  <listitem>
   <para>
    Reboot the machine.
   </para>
  </listitem>
</sect1>

</article>
