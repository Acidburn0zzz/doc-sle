<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.containers.intro">
 <title>Introduction to Linux Containers</title>
  <para>
   Container is a lightweight virtualization method to run multiple virtual units
   (containers, similar to the <xref linkend="gloss.vt.lxc.chroot"/>
   environment) simultaneously on a single 
   host. Containers are isolated with kernel Control Groups (<xref
   linkend="gloss.vt.lxc.cgroups"/>) and kernel 
   Namespaces.
  </para>
  <para>
   Container provides an operating system level virtualization where the
   <emphasis>kernel</emphasis> controls the isolated containers. With other full
   virtualization solutions like &xen; or &kvm; the
   <emphasis>processor</emphasis> simulates a complete hardware environment and
   controls its <xref linkend="gloss.vt.vm"/>s.
  </para>
 <sect1 id="sec.containers.intro">
  <title>Overview</title>
  <para>
   Conceptually, container can be seen as an improved
   <xref linkend="gloss.vt.lxc.chroot"/> technique. The difference is that a
   <xref linkend="gloss.vt.lxc.chroot"/> environment separates only the file
   system, whereas container goes further 
   and provides resource management and control via <xref linkend="gloss.vt.lxc.cgroups"/>.
  </para>
  <itemizedlist>
   <title>Benefits of container</title>
   <listitem>
    <para>
     Isolating applications and operating systems through containers.
    </para>
   </listitem>
   <listitem>
    <para>
     Providing nearly native performance as container manages allocation of
     resources in real-time.
    </para>
   </listitem>
   <listitem>
    <para>
     Controlling network interfaces and applying resources inside containers
     through <xref linkend="gloss.vt.lxc.cgroups"/>.
    </para>
   </listitem>
  </itemizedlist>
  <itemizedlist>
   <title>Limitations of container</title>
   <listitem>
    <para>
     All containers are running inside the host system's Kernel and
     not with a different Kernel.
    </para>
   </listitem>
   <listitem>
    <para>
     Only allows Linux <quote>guest</quote> operating systems.
    </para>
   </listitem>
   <listitem>
    <para>
     Security depends on the host system. Container is not secure. If you need a
     secure system, you can confine it using an AppArmor or SELinux profile .
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
