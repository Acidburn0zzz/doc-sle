<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.libvirt.networks">
 <title>Managing Networks</title>
 <info>
  <abstract>
   <para>
    This chapter introduces common networking configurations supported by
    &libvirt;. It does not depend on the hypervisor used, which means that
    it is valid for all hypervisors supported by &libvirt;, such as &kvm; or
    &xen;. These setups can be achieved using both the graphical interface
    of &vmm; and the command line tool <command>virsh</command>.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
  </dm:docmanager>
 </info>
 <para>
  There are two common network setups to provide a &vmguest; with a network
  connection&mdash;either create a <emphasis>virtual network</emphasis> for
  the guest, or create a <emphasis>network bridge</emphasis> over a host's
  physical network interface and have the guest use it.
 </para>
 <sect1 xml:id="libvirt.networks.virtual">
  <title>Virtual Networks</title>

  <para>
   A virtual network is a computer network which does not consist of a
   physical network link, but rather uses a virtual network link. Virtual
   networks are based on virtual devices that connects virtual machines
   inside a hypervisor. Virtual networks can be either
   <emphasis>isolated</emphasis>, or <emphasis>forwarded</emphasis> to a
   physical network.
  </para>

  <para>
   Guests inside an <emphasis>isolated</emphasis> virtual network can
   communicate with each other, but cannot communicate with guests outside
   the virtual network. Also, guests not belonging to the isolated virtual
   network cannot communicated with guests inside.
  </para>

  <para>
   On the other hand, guests inside a <emphasis>forwarded</emphasis> (NAT =
   Network Address Translation) virtual network can make any outgoing
   network connection they request. Incoming connections are allowed from
   &vmhost;, and from other guests connected to the same virtual network.
   All other incoming connections are blocked by
   <systemitem>iptables</systemitem> rules.
  </para>

  <sect2 xml:id="libvirt.networks.virtual.vmm">
   <title>Configuring Virtual Networks with &vmm;</title>
   <para>
    You can setup and configure both isolated and forwarded virtual networks
    with &vmm;:
   </para>
   <procedure>
    <step>
     <para>
      Start &vmm;. In the list of available connections, left-click the name
      of the connection for which you need to configure the virtual network,
      and then select <guimenu>Details</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the <guimenu>Connection Details</guimenu> window, click the
      <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
      virtual networks available for the current connection. On the right,
      there are details of the highlighted virtual network.
     </para>
     <figure>
      <title>Connection Details</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="libvirt_vmm_conndetails.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="libvirt_vmm_conndetails.png" width="70%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      Click <inlinemediaobject>
      <imageobject>
       <imagedata fileref="plus_sign.png" width="10px" valign="middle" />
      </imageobject>
      </inlinemediaobject> to add a new virtual network.
     </para>
    </step>
    <step>
     <para>
      Type a name for the new virtual network and click
      <guimenu>Forward</guimenu>.
     </para>
     <figure>
      <title>Create virtual network</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="libvirt_vmm_vnet_name.png" width="60%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="libvirt_vmm_vnet_name.png" width="60%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      If you want to specify an IPv4 network address space definition,
      activate the relevant option and type it into the
      <guimenu>Network</guimenu> text entry.
     </para>
     <figure>
      <title>Create virtual network</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="libvirt_vmm_vnet_ipv4.png" width="50%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="libvirt_vmm_vnet_ipv4.png" width="50%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      &libvirt; can provide your virtual network with a DHCP server. If you
      need it, activate <guimenu>Enable DHCPv4</guimenu>, then type the
      start and end IP address range of assignable addresses.
     </para>
    </step>
    <step>
     <para>
      To enable static routing for the new virtual network, activate the
      relevant option and type the network and gateway addresses.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Forward</guimenu> to proceed.
     </para>
    </step>
    <step>
     <para>
      To specify IPv6-related options&mdash;network address space, DHCPv6
      server, or static route&mdash;activatei <guimenu>Enable IPv6 network
      address space definition</guimenu> and activate/fill the relevant
      options.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Forward</guimenu> to proceed.
     </para>
    </step>
    <step>
     <para>
      Select whether you want isolated or forwarded virtual network.
     </para>
     <figure>
      <title>Create virtual network</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="libvirt_vmm_vnet_type.png" width="50%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="libvirt_vmm_vnet_type.png" width="50%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para>
      For forwarded networks, specify the physical network interface to
      which the requests will be forwarded, and one of the forwarding modes:
      while <guimenu>NAT</guimenu> (network address translation) remaps the
      virtual network address space and allows sharing a single IP address,
      <guimenu>Routed</guimenu> ...
      <remark>2016-02-22 tbazant: add info from aginies</remark>
      .
     </para>
    </step>
    <step>
     <para>
      If you did not specify IPv6 network address space definition earlier,
      you can enable IPv6 internal routing between virtual machines.
     </para>
    </step>
    <step>
     <para>
      Optionally, change the DNS domain name.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu> to create the new virtual network. On
      &vmhost;, a new virtual network bridge <literal>virbrX</literal>is
      available, which corresponds to the newly create virtual network. You
      can check with <command>brctl show</command>. &libvirt; automatically
      adds iptables rules to allow traffic to/from guests attached to the
      new <emphasis>virbrX</emphasis> device.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
</chapter>
<!--
********** Network ***************

Two types: "virtual networking" or "bridged networking (shared physical device)"


Virtual Networking:

- no access to machines in side the virtual network from the outside

"This is the recommended config for general guest connectivity on hosts with
dynamic / wireless networking configs (or multi-host environments where the
host hardware details are described separately in a <network> definition Since
 0.9.4). " -> http://libvirt.org/formatdomain.html#elementsNICS



"Each host can have a number of virtual networks defined. These networks 
provide a way for virtual machines to communicate with each other without
requiring a bridge to the physical networking. A virtual network can
optionally allow outgoing traffic NAT'd to the LAN. The virtual networks are
automatically provided with DHCP and DNS services." -> http://virt-manager.org/screenshots.html

A standard libvirt installation on &productname; already comes with a
predefined virtual network providing DHCP and NAT named "default". It is not
activated by default. (NAT'ing to the default route and has an IP range of 192.168.122.0/255.255.255.0)

"When the libvirt default network is running, you will see an isolated bridge device. This device explicitly does *NOT* have any physical interfaces added, since it uses NAT + forwarding to connect to outside world. Do not add interfaces

# brctl show
bridge name	bridge id		STP enabled	interfaces
virbr0		8000.000000000000	yes" -> http://wiki.libvirt.org/page/Networking



Defining a VN:

VMM:
Double click active connection or right-click active connection and
choose Details
Click the + icon (Add Network) to start the "Creating a new virtual
network" dialog
-> Forward
-> Specify a name
-> Specify an IPv4 address space (needs private address range, usually
10.0.0.0 or 192.168.0.0/24 for 256 addresses or 10.0.0.0/8 if more addresses
are needed
-> DHCP configuration: activate (default, recommended), specify range
(overriding the deafult is only needed when addreses are needed for static IP
config)
-> Physical network connection (aka Forward Mode):
   "Isolated virtual network": vmguest to vmguest (within this VN)
                               communication only
   "Forwarding to a physical network":
      * Any       -> http://libvirt.org/formatdomain.html#elementsNICS
      * specific  -> http://libvirt.org/formatdomain.html#elementsNICS
      * Mode: NAT/Routed -> http://libvirt.org/formatdomain.html#elementsNICS
 -> click Finish on Summary screen

 The freshly created network will be activated on creation

 virsh:
 -> via editing XML files only, still not supported?



Starting/Stopping a VN:

VMM:
Double click active connection or right-click active connection and
choose Details
-> Virtual Networks -> choose network -> click triangle (Start Network)
                                         click "cross" (Stop Network)
virsh:
pythagoras:~ # virsh net-list \-\-all
Name                 State      Autostart
.........................................
default              inactive   no        

pythagoras:~ # virsh net-start default
Network default started

pythagoras:~ # virsh net-destroy default
Network default destroyed


==> destroy == stop



http://wiki.libvirt.org/page/Networking

Running your own dnsmasq with libvirtd: http://wiki.libvirt.org/page/Libvirtd_and_dnsmasq

Wi-Fi with virtual machines:
http://berrange.com/posts/2009/12/13/routed-subnets-without-nat-for-libvirt-managed-virtual-machines-in-fedora/

IPtables / firewall usage in libvirt
https://www.redhat.com/archives/libvir-list/2010-June/msg00762.html
(use as link only)


* bridge is automatically set up when installing
  bridge-utils ==> needs to be verified

NAT with libvirt:
cayley:~ # virsh net-list \-\-all
Name                 State      Autostart

default              inactive   no   

#
# if no default network is present, set it up with
#
cayley:~ # virsh net-define /etc/libvirt/qemu/networks/default.xml
Network default defined from /etc/libvirt/qemu/networks/default.xml

     
cayley:~ # brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.0019d128450b	no		eth0
							vnet0

cayley:~ # virsh net-start default
Network default started

cayley:~ # brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.0019d128450b	no		eth0
							vnet0
virbr0		8000.000000000000	yes		

#
# make it start automatically
#
cayley:~ # virsh net-autostart default

cayley:~ # virsh net-destroy default
Network default destroyed

cayley:~ # brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.0019d128450b	no		eth0
							vnet0

WARNING: do not undefine the default network with
virsh net-undefine default !!

-->
