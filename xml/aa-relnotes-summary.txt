AppArmor changes since 2.3
--------------------------
TODO:
* FATE#308683: Drop incident reporting tools from yast2-apparmor
* FATE#308684: Drop profile generating tools from yast2-apparmor
* document aa-notify (replaced gnome apparmor applet)
* using 'include ""' around relative path works - its relative to the cwd of the file
currently being parsed, such as in 'include
"profiles/ejabberd/usr.bin.ejabberdctl"'


NEW FEATURES:

new profile flags controlling profile path lookup behavior (chroot_relative,namespace_relative,attach_disconnected,no_attach_disconnected,chroot_attach,chroot_no_attach):
Two new profile flags have been introduced to aid in mediation of disconnected paths. AppArmor's default behavior is to reject new accesses to disconnected paths reporting back the pathname without a leadeding / Unfortunately this can break some applications, if a profile must allow for mediation of disconnected paths then the profile flag attach_disconnected can be used. This prepend a leading / to the reported name, however this may not result in the original name of the file as AppArmor can only attach the file to root, not to its original location.
/some/profile (attach_disconnected) {
   ...
}


CHANGES:
* Audit changes - The kernel records create a the 'c' permission and delete as the 'd' permission.

# these two changes are only relevant if someone manually writes profiles based on the audit.log


libvirt support
---------------
  support has been added to libvirt to support apparmor as a security model


lxc support
-----------
  lxc has support to use apparmor as a security model


Alternate methods of declaring the complain and disabling a profile. This allows setting these modes without disturbing the profile file which might be owned by package management
The
  force_complain
and
  disable
directories (and support for) have been added. Placing a symlink in these directories back to the profile will result in the profile mode being set


Interfaces
----------
- unconfined is a profile mode that can be reported via ps -Z or the profile interface (aa-status). This will show up on profiles that don't that have are not the unconfined profile.
  eg.
  /foo (unconfined)


