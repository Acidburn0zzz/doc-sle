AppArmor changes since 2.3
--------------------------
TODO:
* FATE#308683: Drop incident reporting tools from yast2-apparmor
* FATE#308684: Drop profile generating tools from yast2-apparmor
* remove aa wizard & replace by aa-genprof in sec.apparmor.hat.apache
* document aa-notify (replaced gnome apparmor applet)
* look if aa-disable can be inserted &explained somewhere in the manual
* look if aa-exec can be inserted &explained somewhere in the manual
* put a tip to audit(? or apparmor) log file introducing aa-decode' 

DONE: 
* removed 'set capabilities' para in the apparmor startup
* added aa-disable intro -> #sec.apparmor.concept.tools
* added aa-exec intro -> #sec.apparmor.concept.tools 
* added aa-status intro -> #sec.apparmor.concept.tools
* added aa-easyprof intro -> #sec.apparmor.concept.tools
* profile name globbing -> #apparmor.profiles.pattern_matching
* profile namespaces -> #apparmor.profiles.namespaces 
* alias allowing mapping to more than a single target - enhanced whole
  #sec.apparmor.profiles.glob.alias chapter
* null-complain-profile replaced by null-XXXX - 2 occurences
* optional allow and file keywords added -> #sec.apparmor.profiles.perm.file_allow 
* capability rules can now list multiple capabilities in a single rule ->
  #sec.apparmor.profiles.capabilities 
* pux transition -> #sec.apparmor.profiles.exec.fallback 
* Safe/unsafe Keyword -> #sec.apparmor.profiles.exec.clean.keywords 
2013-12-04: removed section sec.apparmor.yast.wizard 'Adding a Profile Using the Wizard'
2013-12-04: minor updates + screenshots in section sec.apparmor.yast.edit
'Editing Profiles'
2013-12-04: removed section sec.apparmor.yast.update 'Updating Profiles from Log
2013-12-05: minor updates to section sec.apparmor.yast.manage 'Managing &aa;'
2013-12-06: removed references to yast profile update wizard
2013-12-11: added section sec.apparmor.commandline.profiling.summary.easyprof
2013-12-11: added section sec.apparmor.commandline.profiling.summary.aa-decode
2013-12-11: added section sec.apparmor.commandline.profiling.summary.aa-disable
2013-12-11: added section sec.apparmor.commandline.profiling.summary.aa-exec




NEW FEATURES:

* new profile flags controlling profile path lookup behavior (chroot_relative,namespace_relative,attach_disconnected,no_attach_disconnected,chroot_attach,chroot_no_attach):
Two new profile flags have been introduced to aid in mediation of disconnected paths. AppArmor's default behavior is to reject new accesses to disconnected paths reporting back the pathname without a leadeding / Unfortunately this can break some applications, if a profile must allow for mediation of disconnected paths then the profile flag attach_disconnected can be used. This prepend a leading / to the reported name, however this may not result in the original name of the file as AppArmor can only attach the file to root, not to its original location.
/some/profile (attach_disconnected) {
   ...
}


CHANGES:
* Audit changes - The kernel records create a the 'c' permission and delete as the 'd' permission.

# these two changes are only relevant if someone manually writes profiles based on the audit.log



New Tools - moved tools to aa- prefix except apparmor_parser
-----
aa-notify


libvirt support
---------------
  support has been added to libvirt to support apparmor as a security model


lxc support
-----------
  lxc has support to use apparmor as a security model


Alternate methods of declaring the complain and disabling a profile. This allows setting these modes without disturbing the profile file which might be owned by package management
The
  force_complain
and
  disable
directories (and support for) have been added. Placing a symlink in these directories back to the profile will result in the profile mode being set


Interfaces
----------
- unconfined is a profile mode that can be reported via ps -Z or the profile interface (aa-status). This will show up on profiles that don't that have are not the unconfined profile.
  eg.
  /foo (unconfined)


