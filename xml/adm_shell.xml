<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter version="5.0" xml:id="cha-adm-shell"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Bash and Shell Scripting</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  &productname; comes with the Bash shell and standard tools like sed, awk,
  grep, and many others. The topic of Bash usage is beyond the scope of this
  documentation. For an in-depth introduction to shell scripting, refer to the
  <link xlink:href="https://www.tldp.org/LDP/Bash-Beginners-Guide/html/">Bash
  Guide for Beginners</link> and <link
  xlink:href="http://tldp.org/LDP/abs/html/index.html">Advanced Bash-Scripting
  Guide</link>.
 </para>
 <sect1 xml:id="sec-adm-shell-examples">
  <title>Practical Examples</title>
  <para>
   Below, you will find a few practical examples of using Bash and Linux tools
   that can help you to solve problems you may encounter when administering a
   system.
  </para>
  <para>
   Add a specific path to the <literal>PATH</literal> environment
  variable:</para>
<screen>&prompt.user;export PATH=$PATH:<replaceable>~/PATH/DIR</replaceable></screen>
  <para>
   Use <systemitem>grep</systemitem> search for a whole word (for example, <literal>foo</literal>) in files with a
   specific extension (for example <literal>.xml</literal>) in the given directory:
  </para>
<screen>&prompt.user;grep -w 'foo' xml/*.xml</screen>
  <para>
   Extract text between words (for example, <literal>foo</literal>,
  <literal>bar</literal>):</para>
<screen>&prompt.user;grep -o -P '(?&lt;=foo).*(?=bar)'</screen>
  <para>
   Use <systemitem>sed</systemitem> to replace one string (for example, <literal>foo</literal>) with another one
  (for example <literal>bar</literal>) in the given file:</para>
<screen>&prompt.user;sed 's/foo/bar/g' <replaceable>PATH/DIR</replaceable></screen>
  <para>
   Remove the first line in a file using
  <systemitem>sed</systemitem>:</para>
<screen>&prompt.user;sed 1d <replaceable>FILE</replaceable></screen>
  <para>
   Use <systemitem>sed</systemitem> to remove empty lines in a file:
  </para>
<screen>&prompt.user;sed -i '/^\s*$/d' <replaceable>FILE</replaceable></screen>

  <para>
   Delete lines containing a string (for example, <literal>foo</literal>) in
   the given file:
  </para>
<screen>&prompt.user;sed -i '/foo/d' <replaceable>FILE</replaceable></screen>
  <para>
   The following Bash scripting constructs can be useful in many
   situations.
  </para>
  <para>
   Check whether the variable <literal>var</literal> is not empty:
  </para>
<screen>if [ ! -s "$var" ]; then</screen>
  <para>
   Check whether the given (for example, <literal>foo.txt</literal>) exists:
  </para>
<screen>if [ -e "foo.txt" ]; then</screen>
   <para>
    Check whether the value of <literal>x</literal> is greater or equal 5:
   </para>
<screen>if [ "$x" -ge 5 ]; then</screen>
   <para>
    Use the <literal>for...do...done</literal> loop to rename
    <literal>.jpg</literal> file extension to <literal>.jpeg</literal>:
   </para>
<screen>for file in *.jpg; do mv "$file" "$(basename "$file" .jpg).jpeg"; done</screen>
 </sect1>
</chapter>
